<h1>Group 4</h1>
<p><span>Repository:<span> </span></span><a href="https://github.com/40623115/cd2020">40623115</a><span><span> </span>| Site:<span> </span></span><a href="https://40623115.github.io/cd2020">40623115</a><br/><span>Repository:<span> </span></span><a href="https://github.com/40623251/cd2020">40623251</a><span><span> </span>| Site:<span> </span></span><a href="https://40623251.github.io/cd2020">40623251</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723204/cd2020">40723204</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723204.github.io/cd2020">40723204</a> (second leader)<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723210/cd2020">40723210</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723210.github.io/cd2020">40723210</a><span><span> </span>(group leader)</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723212/cd2020">40723212</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723212.github.io/cd2020">40723212</a> <span>(second leader)</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723225/cd2020">40723225</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723225.github.io/cd2020">40723225</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723232/cd2020">40723232</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723232.github.io/cd2020">40723232</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723234/cd2020">40723234</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723234.github.io/cd2020">40723234</a> <span>(second leader)</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723238/cd2020">40723238</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723238.github.io/cd2020">40723238</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723245/cd2020">40723245</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723245.github.io/cd2020">40723245</a> <span>(second leader)</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723250/cd2020">40723250</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723250.github.io/cd2020">40723250</a></p>
<hr/>
<p><span>分組倉儲網址 : </span><a href="https://s40723210.github.io/cd2020bg4" rel="nofollow">https://s40723210.github.io/cd2020bg4</a></p>
<p>gitter : <a href="https://gitter.im/40723210/cd2020">https://gitter.im/40723210/cd2020</a></p><h1>Live meeting</h1>
<h4>Meeting minutes-1</h4>
<p>40623115 亂數分組程式<br/>40623251 可攜系統<br/>40723204 可攜系統<br/>42723210 四輪車<br/>40723212 四輪車<br/>40723225 四輪車<br/>40723232 亂數分組程式<br/>40723234 可攜系統<br/>40723238 四輪車<br/>40723245 亂數分組程式<br/>40723250 亂數分組程式</p>
<p>負責各主題的人，主要以課堂上的進度，來更新個人的倉儲，每次更新進度時要做一下紀錄。所有的主題必須要在<span>2020年3月26日之前完成，提交3-5頁的兩欄pdf報告，並在youtube上保存3-5分鐘的影片，將pdf文件放在個人倉儲 downloads / assignment1.pdf。最後整合的作業以assignment1放在自己的網站連結加/ assignment1內。有問題可以在我的 <a href="https://gitter.im/40723210/cd2020">gitter</a> 以及 老師的<span> </span><a href="https://gitter.im/mdecourse/cd2020">gitter</a> 上面發問，會的人也可以幫忙回答。<br/></span><br/>直播影片:<a href="https://www.youtube.com/watch?v=r0AABAp474U">https://www.youtube.com/watch?v=r0AABAp474U</a></p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/r0AABAp474U" width="560"></iframe></p>
<hr/>
<h4>Meeting minutes-2</h4>
<p>分工表:</p>
<table style="width: 277.6px;">
<tbody>
<tr>
<td style="width: 132px;"><strong>Topic 1:</strong></td>
<td style="width: 142.6px;"><strong>Topic 0:</strong></td>
</tr>
<tr>
<td style="width: 132px;">40623115</td>
<td style="width: 142.6px;">40723232</td>
</tr>
<tr>
<td style="width: 132px;">40623251</td>
<td style="width: 142.6px;">40723234</td>
</tr>
<tr>
<td style="width: 132px;">40723204</td>
<td style="width: 142.6px;">40723238</td>
</tr>
<tr>
<td style="width: 132px;">42723210</td>
<td style="width: 142.6px;">40723245</td>
</tr>
<tr>
<td style="width: 132px;">40723212</td>
<td style="width: 142.6px;">40723250</td>
</tr>
<tr>
<td style="width: 132px;">40723225</td>
<td style="width: 142.6px;"></td>
</tr>
</tbody>
</table>
<p><br/>Topic 1 的文章很長，自己看要翻哪一大章節都可，Topic 0 有兩篇pdf也是一樣自己決定，要全翻也行自己斟酌。最後是個人網頁要有assignment2，downloads裡面也要有檔案assignment2.pdf。作業期限到4/23，要自行檢查是否完成所有內容。</p>
<p><span>直播影片:<a href="https://youtu.be/a69tNWKmC64">https://youtu.be/a69tNWKmC64</a></span></p>
<p><span><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/a69tNWKmC64" width="560"></iframe></span></p>
<h4><span>Week10</span></h4>
<p>分配Assignment 3的<span>topic2、topic3的原文書翻譯工作，</span> 並討論老師的<a href="http://mde.tw/cd2020pj1/content/CMS.html">CMS</a>、<a href="https://drive.google.com/file/d/1G4MzXUIbNRK7z2XdjtxXzhX51zHHwq85/view?usp=sharing">影片教學</a>，來進行<yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">gm用戶登錄設置，可以參考我的<a href="https://youtu.be/fdH7k_-vIpk">影片</a>。</yt-formatted-string></p>
<p><span><span>MSModelingAndTFApproaches:</span><br/><br/></span>40723232 前20<br/>40723234 21-50<br/>40723204 51-80<br/>40723225 81-110<br/>40623115 111-140<br/>40623251 141-170<br/>40723245 171-207<br/><br/><span>MSModelingAndTFApproaches:<br/></span><br/>40723238 <br/><span>40723210 </span></p>
<p><span><span>MechaEducFutureNeed:</span><br/><br/></span>40723250 <br/><span>40723210</span><br/><br/><span>MechaFutureAndChallenges:</span><br/><br/>40723212 <br/><br/><span><span>Mechatronic project</span><br/><br/></span>40723210 </p>
<p><br/>直播影片:<a href="https://youtu.be/GmKxlNPx-gs">https://youtu.be/GmKxlNPx-gs</a></p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/GmKxlNPx-gs" width="560"></iframe></p>
<hr/>
<h4><span>Week11</span></h4>
<p><span><a href="https://drive.google.com/file/d/1WZH3Xrogi3xUStrHYSL6AcTWzHCWt-gA/view?usp=sharing">Virtualbox 虛擬主機 NAT 設定與 X-win 連線</a> (登入 @gm 後可以在線觀看)</span></p>
<p><span><a href="https://drive.google.com/open?id=1S9gTVrscJAvGmXz0UxVKbWkAqEXkmO9d">Ubuntu 20.04 上的 CoppeliaSim 四輪車與 Windows 上的 Python Remote API 在 X-Windows 介面下協同控制影片</a><span> </span>(登入 @gm 後可以在線觀看)</span></p>
<p><span>討論上課內容如上方連結影片，以及講解ssh的設置，可以參考我的</span><span><a href="https://s40723210.github.io/cd2020/content/SSH%20setting.html">SSH setting</a>。</span></p>
<p><span>直播影片:<a href="https://youtu.be/NjWnIy4vX1g">https://youtu.be/NjWnIy4vX1g</a></span></p>
<p><span><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/NjWnIy4vX1g" width="560"></iframe></span></p>
<hr/>
<h4><span>Week12</span></h4>
<p>NatNetwork settings:</p>
<p>Ipv4 and IPv6 Port forwarding setup</p>
<p><a href="https://drive.google.com/open?id=1cIUtCBvyZuhD5w3H7Hpou8FZhI_w94Ku">Tutorial video 1</a><span> </span>(for @gm users only)</p>
<p><a href="https://drive.google.com/open?id=1HeBPfffEp_kWK0JAKkptUm0hy3l5-wOA">Tutorial video 2</a><span> </span>(for @gm users only)</p>
<p><a href="https://drive.google.com/open?id=1a5jJheOTX3Rnq8A9ZInwKgp1cR-NJO1B">Tutorial video 3</a><span> </span>(for @gm users only)</p>
<p>以上是week12上課內容，直播有說明詳細操作方法，我有拍教學影片可以參考，記得要用Assignment 3，pdf寫topic的4本心得或總結。</p>
<p><span>直播影片:<a href="https://youtu.be/is_sLTLHV5M">https://youtu.be/is_sLTLHV5M</a></span></p>
<p><span><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/is_sLTLHV5M" width="560"></iframe></span></p>
<hr/>
<h4><span>Week13</span></h4>
<p>Add<span> </span><a href="https://portableapps.com/apps/internet/filezilla_portable">Filezilla</a><span> </span>to download and upload file between Windows and Virtual Ubuntu:</p>
<p><a href="https://drive.google.com/open?id=1qQV9M9JSjWgl0ovLJxByhe_wLcAnzMdS">Tutorial video 2</a><span> </span>(for @gm users only)</p>
<p>大概講解一下<a href="https://portableapps.com/apps/internet/filezilla_portable">Filezilla</a>的安裝方法以及設定和用途，還有提到ipv6遠端連線的設定，可以參考我整理的步驟和影片<a href="https://s40723210.github.io/cd2020/content/Week10-14.html">Week10-14</a>。</p>
<p><span>直播影片:</span><a href="https://youtu.be/CLbEVpAV7gs">https://youtu.be/CLbEVpAV7gs</a></p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/CLbEVpAV7gs" width="560"></iframe></p>
<hr/>
<h4><span>Week14</span></h4>
<p>討論這周的遠端連線，被抽到的人必須開始伺服，讓別人來進行連線操控，並且上傳個人的.ttt檔，不過遇到了非常多的問題，所以我有將各種問體統整起來，並且一一說明解決方法，可以參考:<a href="https://s40723210.github.io/cd2020/content/Week10-14.html">https://s40723210.github.io/cd2020/content/Week10-14.html</a>。</p>
<p>直播影片:<a href="https://youtu.be/N6jCSwv2eI0">https://youtu.be/N6jCSwv2eI0</a></p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/N6jCSwv2eI0" width="560"></iframe></p><h1>Assignment</h1>
<p><span><a href="https://s40723210.github.io/cd2020bg4/content/Assignment1.html">Assignment1</a></span></p>
<p><span><a href="https://s40723210.github.io/cd2020bg4/content/Assignment2.html">Assignment2</a></span></p>
<p><span><a href="https://s407232.github.io/cd2020bg4/content/Assignment3.html">Assignment3</a></span></p>
<h2>Assignment1</h2>
<p>1. Describe how to do an efficient random grouping for this course or do the roll calling randomly?</p>
<p>2. Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain<span> </span><a href="https://github.com/mdecourse/cmsimde">CMSiMDE</a><span> </span>website,<span> </span><a href="https://github.com/getpelican/pelican">Pelican blog</a><span> </span>and<span> </span><a href="https://github.com/hakimel/reveal.js/">Reveal.js</a><span> </span>presentation on<span> </span><a href="https://github.com/">Github</a>?</p>
<p>3. What do you need to know from <a href="http://www.coppeliarobotics.com/helpFiles/index.html">http://www.coppeliarobotics.com/helpFiles/index.html</a> to implement a four-wheeled robot?</p>
<hr/>
<p><span>40723210報告連結:</span><a href="https://s40723210.github.io/cd2020/downloads/assignment1.pdf">assignment1.pdf</a></p><h3>Random grouping</h3>
<p><span>1. Describe how to do an efficient random grouping for this course or do the roll calling randomly?</span></p>
<p>1.請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？</p>
<p><strong><span style="color: #3366ff;"><big>40723245 提供 :</big></span></strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/k8Ag3kVj6lg" width="560"></iframe></p>
<hr/>
<p><span style="color: #3366ff;"><strong><big>40723210 提供 :</big></strong> </span></p>
<h4><strong>測試程式(點選程式連結再貼上即可):</strong></h4>
<p><iframe allowfullscreen="allowfullscreen" allowtransparency="true" data-mce-fragment="1" frameborder="no" height="400px" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals" scrolling="no" src="https://repl.it/repls/LightLikelyDominspector?lite=true" width="100%"></iframe></p>
<h4><strong><span>抽查的python程式</span></strong></h4>
<p>如果要使用python來進行亂數分組抽查的話，可以導入random來從列表中隨機抽出所需要的n個不同元素，如下面的程式執行之後，就可以亂數抽出4位。</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import random 

group = [4, 10, 12, 25, 32, 34, 38, 45, 50] 

team = random.sample(group, 4) 
print (team)</pre>
<p>再來是要讀取網頁資料的話，就要導入requests，使用get請求即可直接下載，例如member = requests.get("網址")，再用print(member.text)就可以印出來了如下。</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import requests

web = "https://mdecourse.github.io/cd2020/downloads/2b_group_list.txt"

member = requests.get(web)

print(member.text)</pre>
<p>如果使用讀取出的資料，還是無法使用的，因為member.text的性質是str字串，所以我就要將它變回原本的list列表，才可以進行亂數分組，改這個非常的簡單如下。</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">x = eval(member.text)</pre>
<p>最後我整理出來的程式，雖然沒有老師這麼精美，但是也是可以進行亂數分組的抽查的，如果要改抽查人數，改y = random.sample(i,2)的數字即可。</p>
<h4><span><span color="#0000ff"><b>最終程式碼</b></span></span></h4>
<p>程式碼連結:<a href="https://github.com/s40723210/cd2020/blob/master/downloads/%E6%8A%BD%E6%9F%A5%E7%A8%8B%E5%BC%8F.py">抽查程式.py</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import requests
import random
  
web = "https://mdecourse.github.io/cd2020/downloads/2b_group_list.txt"
member = requests.get(web)
#print(memder.text)
x=0
for i in eval(member.text):
    y = random.sample(i,2)
    x+=1
    print("group"+ str(x))
    print(y)</pre>
<h4><strong><span>亂數分組的的python程式</span></strong></h4>
<p><strong></strong>一開始先從網頁上抓人員，這次跟上面的不太一樣，抓出來的本來就是str字串，所以必須把每個學號轉變為<span>list列表，直接將f.text加上 .split() 來轉換，完成之後就可以使用，random.shuffle()來將整個順序打亂，再來設定一共要分幾組，再使用while迴圈來判斷每一組要有幾個人，使用if判斷是來中斷迴圈，len()是指一共有幾個數量的意思，要加組別的話就要再多寫一列，接著使用for 迴圈來從，剛剛算好的每組人數，例如:13、12、12、12，再使用一個for迴圈，來一個一個配置組人員，這時候直接使用迭代iter()的next()，來抓人員這樣子就不會重複了，最後再加上一些說明、分格、標題，就可以開始進行亂數分組了。</span></p>
<h4><span><span color="#0000ff"><b>最終程式碼</b></span></span></h4>
<p>程式碼連結:<a href="https://github.com/s40723210/cd2020/blob/master/downloads/%E4%BA%82%E6%95%B8%E5%88%86%E7%B5%84.py">亂數分組.py</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import requests
import random

web = "http://s1.mde.nfu.edu.tw:8000/?semester=1082&amp;courseno=0780"
f = requests.get(web)
#print(type(f.text))
x = f.text.split()
#print(len(x))
#print(x)
random.shuffle(x)

group1,group2,group3,group4 = 0,0,0,0
while 1==1:
    group1 += 1
    if (group1+group2+group3+group4) == len(x):
        break
    group2 += 1
    if (group1+group2+group3+group4) == len(x):
        break
    group3 += 1
    if (group1+group2+group3+group4) == len(x):
        break
    group4 += 1
    if (group1+group2+group3+group4) == len(x):
        break
#print(group1,group2,group3,group4)

print("全班人數有"+str(len(x))+"人")
print("="*20)
grp_num = group1,group2,group3,group4
a = iter(x)
team = 0
for i in grp_num:
    team += 1
    print("group"+str(team)+" 共 "+str(i)+" 人")
    for g in range(i):
        print(next(a))
    print("-" * 20)</pre>
<p></p>
<hr/>
<h3>Portable system</h3>
<p><span>2. Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain CMSiMDE website, Pelican blog and Reveal.js presentation on Github?</span></p>
<p>2.描述如何為Windows 10 64位系統準備一個可移植的Python編程系統，以允許在Github上維護CMSiMDE網站，Pelican博客和Reveal.js演示文稿？</p>
<p><span style="color: #3366ff;"><strong><big>40723210 提供 :</big></strong> </span></p>
<p>start.bat 存放在system資料夾下</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
subst %Disk%: "data"

%Disk%:

set HomePath=%Disk%:\home_mdecourse
set HomeDrive=%Disk%:\home_mdecourse
set Home=%Disk%:\home_mdecourse
set USERPROFILE=%Disk%:\home_mdecourse

REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"

set PYTHONPATH=%Disk%:\py382\DLLs;%Disk%:\py382\Lib;%Disk%:\py382\Lib\site-packages;
set PYTHONHOME=%Disk%:\py382

set path_python=%Disk%:\py382;%Disk%:\py382\Scripts;
set path_msys2=%Disk%:\msys64\mingw64\bin;
set path_tcc=%Disk%:\tcc;
set path_git=%Disk%:\portablegit\bin;

set GIT_HOME=%Disk%:\portablegit\bin\
set GIT_SSH=%Disk%:\putty\plink.exe

path=%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%;%path%;

start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe

start /MIN %Disk%:\wscite432\wscite\SciTE.exe
start /MIN %Disk%:\wscite432\wscite\SciTE.exe

Exit</pre>
<p>stop.bat <span>存放在system資料夾下</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
path=%PATH%;

taskkill /IM python.exe /F
taskkill /IM pythonw.exe /F
taskkill /IM SciTE.exe /F
REM 終止虛擬硬碟與目錄的對應
subst %Disk%: /D
REM 關閉 cmd 指令視窗
taskkill /IM cmd.exe /F
EXIT</pre>
<div>
<div class="syntaxhighlighter html" id="highlighter_96320"></div>
</div>
<h4><span><strong>data的資料夾內:</strong></span></h4>
<p>編輯器，使用<span>SciTE :</span><span> </span><a href="https://www.scintilla.org/SciTEDownload.html">https://www.scintilla.org/SciTEDownload.html</a></p>
<p>下載<span>Windows 64-bit:</span><span> </span><span><a href="https://www.scintilla.org/wscite432.zip">full 64-bit download</a></span>，放進<span>data</span>目錄裡的<span>wscite432資料夾(自己創建)，接著</span><span>開啟<span>SciTE.exe</span><span>，點選 </span><span>Options下的</span><span><span>Open Global Options File</span><span> ，使用ctrl + f 來收尋code.page=0，將code.page=65001的#刪掉，這樣才不會出現亂碼。</span></span><br/></span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">code.page=65001
#code.page=0</pre>
<p></p>
<hr/>
<p>Git控制軟體 :<span><span> </span><a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></span></p>
<p>下載Windows 64-bit:<span> </span><span><a href="https://github.com/git-for-windows/git/releases/download/v2.25.1.windows.1/Git-2.25.1-64-bit.exe">64-bit Git for Windows Setup</a></span>，放進<span>data</span>目錄裡面並且重新命名為<span>portablegit 。</span></p>
<hr/>
<p><span>ssh</span>連線工具組，使用的<span>putty : </span><span><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/">https://www.chiark.greenend.org.uk/~sgtatham/putty/</a></span></p>
<p>直接下載老師之前給的:<span><a href="https://drive.google.com/file/d/1ISq1TJuaZyYZnfU33l-b7ifzmO3ejlEV/view">putty.7z</a></span>，解壓縮放入<span>data</span>目錄就可以了。</p>
<hr/>
<p>MSYS2：<a href="https://www.msys2.org/">https://www.msys2.org/ </a></p>
<p>下載的是<a href="http://repo.msys2.org/distrib/x86_64/msys2-x86_64-20190524.exe">msys2-x86</a><span><a href="http://repo.msys2.org/distrib/x86_64/msys2-x86_64-20190524.exe">_64-20190524.exe</a></span><span> </span>，安裝在<span><span> </span>data<span> </span></span>目錄裡的<span>msys64資料夾(自己創建)</span>。</p>
<hr/>
<p>Tiny C Compiler : <a href="https://github.com/TinyCC/tinycc">https://github.com/TinyCC/tinycc</a></p>
<p>直接在<span>data<span> </span></span>目錄下進行<span>git clone<span> </span></span><span><a href="https://github.com/TinyCC/tinycc">https://github.com/TinyCC/tinycc</a></span>  tcc </p>
<hr/>
<p>把現在再用的home_mdecourse，整個複製到data 目錄下。</p>
<hr/>
<p>Python : <a href="https://www.python.org/">https://www.python.org/</a>，下載3.8.2版本的<a href="https://www.python.org/ftp/python/3.8.2/python-3.8.2.exe">安裝檔</a>。</p>
<p>1.完成後開啟，點選<span>Customize installation(定制安裝)。</span></p>
<p>2.將第二個選項的pip取消勾選，其他都可以勾選起來。</p>
<p>3.使用預設勾選，將路徑改為data內的py382資料夾(自己創建)。</p>
<p>4.直接在y槽中執行，python <span>get-pip.py 來安裝pip軟件。</span></p>
<p><span>5.完成之後，來安裝軟件包，輸入python pip install<span> </span><span>Flask</span> 依此類推。</span></p>
<p>6.安裝的有<span>Flask</span>、<span>Markdown</span>、<span>lxml</span>、<span>bs4</span>、<span>flask_cors</span>、<span>pelican</span>、<span>leo</span>。</p>
<hr/>
<p>data目錄下的所有資料:</p>
<p><img alt="" height="193" src="https://s40723210.github.io/cd2020/images/explorer_2020-03-21_21-05-25.png" width="519"/></p>
<p><span>system資料夾內:</span></p>
<p><span><img alt="" height="107" src="https://s40723210.github.io/cd2020/images/explorer_2020-03-21_21-44-29.png" width="491"/></span></p>
<p><span>這樣子就完成了最簡單的</span>可攜編程系統了。</p>
<hr/>
<p></p>
<p></p><h3>four wheel car</h3>
<p><span>3. What do you need to know from </span><a href="http://www.coppeliarobotics.com/helpFiles/index.html">http://www.coppeliarobotics.com/helpFiles/index.html</a><span> to implement a four-wheeled robot?</span></p>
<p>3.您需要從http://www.coppeliarobotics.com/helpFiles/index.html了解什麼來實現四輪機器人？</p>
<p><span style="color: #3366ff;"><strong><big>40723210 提供 :</big></strong> </span></p>
<p>我們從<a href="https://www.coppeliarobotics.com/helpFiles/index.html">CoppeliaSim用戶手冊</a>中尋找有關於四輪機器人的文章，找到了幾個相關的文章，分別是<a class="el" href="https://www.coppeliarobotics.com/helpFiles/en/bubbleRobTutorial.htm" name="link194folder.9">BubbleRob tutorial</a>、<a class="el" href="https://www.coppeliarobotics.com/helpFiles/en/lineFollowingBubbleRobTutorial.htm" name="link196folder.9">Line following BubbleRob tutorial</a>、<a class="el" href="https://www.coppeliarobotics.com/helpFiles/en/externalControllerTutorial.htm" name="link199folder.9">External</a><a class="el" href="https://www.coppeliarobotics.com/helpFiles/en/externalControllerTutorial.htm" name="link199folder.9"><span> </span>controller tutorial</a>、<a class="el" href="https://www.coppeliarobotics.com/helpFiles/en/simulation.htm" name="link184folder.7">Simulation</a><span>、</span><a class="el" href="https://www.coppeliarobotics.com/helpFiles/en/simulationPropertiesDialog.htm" name="link185folder.7">Simulation dialog</a><span>，</span>一共五個有關四輪車的文章。</p>
<p>各篇翻譯:在40723210網頁<a href="https://s40723210.github.io/cd2020/content/CoppeliaSim.html">CoppeliaSim</a>下，重點及心得如下:</p>
<p><span><a href="https://www.coppeliarobotics.com/helpFiles/en/bubbleRobTutorial.htm">BubbleRob tutorial</a></span>:本章教程主要是透過，自己動手實際操作模擬，來了解許多功能以及<span>BubbleRob<span> </span></span>機器人設置，我們上學期時就已經有親自使用<span>V-rep<span> </span></span>來操作過一次了，本章使用了包括<span>:</span>基本形狀<span>(</span>機器人本體、輪子、障礙物<span>)</span>、感應器<span>(</span>接近型圓錐傳感器<span>)</span>、接頭或電動機<span>(</span>關節動力馬達<span>)</span>、力傳感器<span>(</span>滑塊<span>)</span>、圖表<span>(</span>運動軌跡<span>)</span>、腳本<span>(</span>模型定義<span>)</span>，使用以上這些功能，就可以實現<span>BubbleRob<span> </span></span>機器人，能移動並且使用感應器，來感應障礙物，再使用腳本來迴避，最後再由圖表來顯示模擬路徑。</p>
<p><span><a href="https://www.coppeliarobotics.com/helpFiles/en/lineFollowingBubbleRobTutorial.htm">Line following BubbleRob tutorial</a></span>:這個教程是接續著上面的文章，可以使<span>BubbleRob<span> </span></span>機器人按照規劃的路徑移動，讓我們可以有效的控制機器人，可以避免外部控制所產生的各種問題，這樣子就可以更快的達成需要的模擬狀況，可以提高不少的效率。</p>
<p><span><a href="https://www.coppeliarobotics.com/helpFiles/en/externalControllerTutorial.htm">External controller tutorial</a></span>:本章屬於外部控制器的教程，讓我們可以使用遠端操控的方式，來控制四輪機器人，控制的方式有編寫腳本、編寫插件、遠程<span>API</span>、<span>ROS</span>節點、<span>BlueZero</span>節點、編寫外部應用程式，每種都要寫子腳本來進行鏈結。</p>
<p><span><a href="https://www.coppeliarobotics.com/helpFiles/en/simulation.htm">Simulation</a></span>:此教程為模擬案鍵，當我們建立好腳本時，就可以控制模擬的狀況，為了增加模擬的準確性，就可以使用仿真的速度與螺紋渲染，但是必須要適當的調整，才不會造成系統運行中斷。</p>
<p><span><a href="https://www.coppeliarobotics.com/helpFiles/en/simulationPropertiesDialog.htm">Simulation dialog</a></span>:此教程是上篇的進階設定，<strong>時間步</strong>為調整模擬時間，運行越快準確度越差，<strong>每幀模擬遍數</strong>為屏幕刷新速度，刷新越快得到的情報越快，只是電腦很吃效能，<strong>當仿真時間高於時暫停</strong>為允許特定仿真時間暫停，<strong>暫停腳本錯誤</strong>會在發生問題時暫停，<strong>模擬開始時全屏</strong>啟用時對話框和消息不會顯示，<strong>實時仿真-倍增係數</strong>使仿真運行快n倍，<strong>落後時嘗試趕上</strong>系統運行趕不上模擬時，會在低負載時趕上，<strong>復位場景初始狀態</strong>運行模擬結束時，所有設定將回歸初始狀態，<strong>刪除新對象</strong>模擬時，添加的東西將會在結束後移除，以上的各種設定，能讓我們在模擬時，更加的方便，進而提高許多效率。</p>
<h4 class="title style-scope ytd-video-primary-info-renderer"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">V-rep可動四輪車</yt-formatted-string></h4>
<p>使用內建功能來創建模型，並且模擬最基本的直線移動。</p>
<p>影片連結:<a href="https://youtu.be/y8DJ1sjuAqM">https://youtu.be/y8DJ1sjuAqM</a></p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/y8DJ1sjuAqM" width="560"></iframe></p>
<hr/>
<p></p>
<h2>Assignment2</h2>
<p>Due April 22, 2020 for class 2a and April 23, 2020 for class 2b.</p>
<ol>
<li>
<p>According to the material of Topic 0 and Topic 1, can you describe specifically what the mechanical design team need to do for accomplishing Assignment 1's four wheeled robot.</p>
</li>
<li>
<p>What do you need to know from<span> </span><a href="https://cyberbotics.com/doc/guide/index" rel="nofollow">https://cyberbotics.com/doc/guide/index</a><span> </span>to implement a four-wheeled robot?</p>
</li>
</ol>
<hr/>
<p><span>40723210報告連結:</span><a href="https://s40723210.github.io/cd2020/downloads/assignment2.pdf">assignment2.pdf</a></p><h3>DigitalProductCollaboration</h3>
<p><span style="color: #0000ff;">40723210提供</span></p>
<p>原文pdf連結:<a href="https://drive.google.com/open?id=1YHQwYduSMisiJQS-Jr_HhJghzIqP_SBc">DigitalProductCollaboration.pdf</a></p>
<p>翻譯連結:<a href="https://s40723210.github.io/cd2020/downloads/DigitalProductCollaboration%E7%BF%BB%E8%AD%AF.pdf">DigitalProductCollaboration翻譯.pdf</a></p>
<h4><strong>協同設計更好的產品</strong></h4>
<p> 透過設計協調創作更好的產品<span><span> </span>-<span> </span></span>心態、工具、過程<span>  2019</span>年<span><span> </span>7</span>月<span><span> </span>10<span> </span></span>日</p>
<p> </p>
<p>現今的數位產品比以往都還要複雜。創建他們需要更多的團隊。每位成員都需要擁有自己的技藝與專業知識。例如<span>Savvy</span>，我們的顧客。需要與產品經理、<span>UX</span>設計師、視覺設計師、開發人員、內容策略師還有增長專家密切配合。</p>
<p> </p>
<p>我們藉由設計協同來處理這種複雜性。正確的設計協同可以讓每一位專家擁有思維、流程和工具來快速的建立更好的產品。</p>
<p> </p>
<p>我們撰寫這篇資源是為了幫助其他<span>APP</span>創作者採用文化偕同和流程。深入閱讀了解為何設計協同對於創作引人注目的產品和體驗來說非常重要</p>
<p> </p>
<h4><strong>什麼是設計協同<span>?</span></strong></h4>
<p> </p>
<p>在直接跳入主題前，我們需要了解什麼是設計協同<span>…</span>什麼不是。簡單來說，設計協同就是在以設計為主的環境中進行協同合作。但是，因為設計的本質，特別是在與<span>Savvy</span>合作的設計之中，設計協同往往會超出人們一般認為的合作範圍。</p>
<p> </p>
<p>協同一般被定義為兩個或更多的人一起為同樣的目標工作，然而設計協同所涉及的東西卻更多。</p>
<p> </p>
<p>設計協同包羅了更多具有不同技能的人、更艱困的挑戰、更大的目標並產生更深遠的影響</p>
<p> </p>
<p>你可能會認為協同就是兩個人懸掛一件藝術品，只需要溝通、團隊工作、和四隻手而已。設計合作是指由策劃團隊精心為參觀者設計的體驗，他們挑取藝術品並挑選掛在什麼地方、如何掛、掛在哪個房間<span>(</span>以及房間的燈光和家具<span>)<span> </span></span>，甚至是前一個房間和整棟建築物。</p>
<p> </p>
<h4><strong>為什麼設計協同是重要的<span>?</span></strong></h4>
<p> </p>
<p>你可以在沒有協同的情況下設計出一件產品，但透過一個合作的設計過程可以讓產品變的更加優秀，這就是為什麼設計協同是如此的重要。</p>
<p> </p>
<p>我們並不只是為顧客構建應用程式，<span>Savvy</span>構建了多平台體驗、複雜的內部系統，並且在某些情況下，還可以構建整個品牌與業務，為此我們在戰略、設計、開發和成長等領域利用核心專業技術，每個項目都有許多人參加，每個人都有自己的技藝與專長。</p>
<p> </p>
<p>設計協同將這些人的思想概念結合在一起，將他們獨自的專業知識結合起來，創造出能夠解決共同目標所有方面問題的方案。設計協同不是從一個角度來解決一個問題，而是將所有問題放在專家面前，迫使他們考慮新的觀點與可能性。</p>
<p> </p>
<p>例如，我們在早期的設計過程就讓開翻人員參予進來，確保盡快解決技術問題與侷限性。這使我們能夠利用在推動技術能力過程時，進一步消除昂貴的路障。這也同時限制一個人在筒倉的工作量，保持工廠的開放性，將重點放在用戶需求與產品目標上。</p>
<p> </p>
<h4><strong>培養設計協同的心態</strong></h4>
<p> </p>
<p>正確的心態能幫助在設計過程中建立有效的合作關係，它為由誰來合作、如何合作以及合作的目的制定了準則。</p>
<p> </p>
<h4><strong>協同是人人都可以的</strong></h4>
<p> </p>
<p>設計師有時候會認為不是設計師的人是沒有資格給出好的反饋的。但是，好的設計是不僅僅有視覺效果而已的，它包含了一個產品的一切，從品牌到工程再到在到期發展的一切。</p>
<p> </p>
<p>設計協同引進了許多人，每個人都有其自己的觀點與優勢，它使每個人都可以擁有發言權，這些創新的視角給了設計師更多的信息。觀點可以讓設計師能夠做出正確的決定，這些選擇會對以後的設計、開發與營銷產生持久的引響。</p>
<p> </p>
<p>與客戶的合作和與其他設計師、團隊成員的合作同樣重要。在與<span>Savvy</span>的合作中，我們讓客戶參予產品的製作過程，並花時間解釋所選方案，與客戶進行討論，以確保我們了解他們的想法。</p>
<p> </p>
<p>這樣一來，我們就可以確保客戶的買帳並使工作有始有終，較大的揭露並不是什麼太大的驚喜，沒有人會因為第一次看到工作而感到驚訝。</p>
<p> </p>
<p>客戶的合作意味著更早產生一個確定的產品，避免了昂貴的迴避與不必要的會議。</p>
<p> </p>
<p>人們很容易沉浸在自己所扮演的角色中而忽略了大局關，透過讓更多的人在早期參與進來，就能將團隊成員之間的聯繫培養的更緊密，並培養出責任感與對產品是否能成功的興趣。你正在創造一個更開放、更透明的過程，以及一個更有聯繫和投入的團體。</p>
<p> </p>
<h4><strong>協同是有背景的</strong></h4>
<p> </p>
<p>客戶帶著複雜的挑戰與目標來尋找我們。更別提我們會持續與客戶合作數月甚至數年，累積了大量的知識，包含過去的決策、研究等其他有價值的背景。</p>
<p> </p>
<p>透過適者生存的方法，確保每個人都處於最高的知識水平。使他們能夠在開發產品的過程中能夠做出最明確的決定，為了能夠做到這一點，我們透過提前召集所有團隊成員，紀錄和紀錄會議的內容，建立一些重和點，並將下一個團隊成員視為顧客，讓<span>Savvy</span>團隊的每一個人都能及時了解相關資訊。</p>
<p> </p>
<p>在個案合作的基礎上，情境同樣重要，遵循這些準則，在合作中要把情境放在首位。</p>
<p> </p>
<p>在顯示您的工作之前提供上下文。在提供背景信息的情況下，如果您的作品出現在屏幕上，那麼您可能會失去聽眾的注意力。</p>
<p> </p>
<p>描述您要解決的問題或要達到的目標。</p>
<p> </p>
<p>介紹與當前問題相關的工作。說明您的想法以及做出某些決定的原因。</p>
<p> </p>
<p>請具體說明您要反饋的內容。</p>
<p> </p>
<h4><strong>合作是開放，誠實和無畏的</strong></h4>
<p> </p>
<p>將您的工作（和您自己）放在那裡並不容易。情緒會阻礙您提供坦誠的反饋，尤其是當您擔心會傷害對方的感受時。</p>
<p> </p>
<p>這並不意味著在協作中沒有情感的位置。在設計中，讓您感覺如何是很重要的。我們為人們思考並為他們創建解決方案，有情感並在決策中使用情感的人。在對話中留下的情感可能會縮短潛在的想法或解決方案。充其量，僅就事實和數據進行務實的討論將無法提供全面的信息。在最壞的情況下，它可能是掩人耳目或提供虛假的敘述。</p>
<p> </p>
<p>在與<span>Savvy</span>的合作中，我們使我們的團隊對收到反饋感到<span>“</span>無所畏懼<span>”</span>。這意味著放開對我們所創造的東西進行判斷不會感到任何焦慮。這也意味著我們在一起將會更加強大，更有機會創造偉大的事物。在無所畏懼的情況下，我們會更好地相互信任和相互賦予能力，以提供誠實和周到的反饋。</p>
<p> </p>
<p>我們的團隊還信奉無所畏懼地提供反饋。這意味著能夠了解需要解決的問題以及客戶的品牌和目標。同時也意味著可以問很多問題，以發現相關的思想或幫助指導決策。</p>
<p> </p>
<p>嘗試以探索性和指導性的方式提出反饋意見，目的是建立和改進工作，而不是拆散工作。</p>
<p> </p>
<p>您的反饋意見應具有建設性。與其說您不喜歡某些東西，不如說出您的反饋意見以指出您要幫助解決的問題。提供可行的步驟來改進工作，或者至少提供您思考背後的理由。並且不要忘了表達您喜歡什麼以及為什麼。</p>
<p> </p>
<h4><strong>合作不僅僅是新的想法</strong></h4>
<p> </p>
<p>開放並接受協作反饋是一回事，解析這些想法並將其用來催生您自己的想法是另一回事。隨著時間的推移，這是一項更高級的技能。實踐方法將成為更好的聽眾。</p>
<p> </p>
<p>通常，在與他人交談時，我們會更多地考慮接下來要說的內容，而不是別人在說什麼。這會影響反饋過程，尤其是在設計過程中，因為在聽到其他意見或解決方案之前，我們通常會知道我們要說的話。</p>
<p> </p>
<p>當您選擇先聆聽然後再做出反應時，它可以讓您完全理解其他人的反饋，並讓您更深入地了解自己<span><span> </span>—<span> </span></span>他們使用的觀點是什麼以及來自何處？很有可能這是您在創建過程中未曾考慮過的觀點。通過聽取並理解收到反饋時背後的上下文和推理，您可以以更多的方式來審視，思考和體驗設計。然後，您可以針對要設計的挑戰，目標和用例來測試這些新觀點，以查看它們是否更適合用戶。</p>
<p> </p>
<p>當所有協作者都在積極聆聽時，更容易接受反饋。最終，提供良好反饋的技能來自於學習如何獲得反饋。當我們努力成為更好的聽眾時，我們也發現自己變得更加謙虛，並認為我們是更好的設計師。</p>
<p> </p>
<p>尋找和使用正確的設計協作工具</p>
<p> </p>
<p>正確的工具在增強團隊的設計協作思維方面大有幫助。在本節中，您將學習在協作工具中尋找什麼。我們還根據自己的經驗推薦工具。</p>
<p> </p>
<h4><strong>選擇合適的工具</strong></h4>
<p> </p>
<p>有效的協作工具消除了協作者想要快速輕鬆地訪問工作並與之交互時的所有障礙。這將重點放在提供反饋上。它們還允許其他人在不破壞原始設計的情況下進行協作。</p>
<p> </p>
<p>過去，我們依賴於提供基本版本控製而不是真正的協作功能的工具。例如，設計人員將保存一個<span>Sketch</span>文件並將其上傳到<span>Dropbox</span>。然後，另一個團隊成員下載它，進行處理，然後重新上傳。當文件在另一個人手中時，沒有辦法用簡單的方法來進行更改。我們使用<span>Github</span>嘗試了類似的方法，該工具被證明非常適合管理代碼庫，但對於反覆設計的工作卻沒有太多幫助。不用說，這些版本控製過程使我們的協作更加耗時，混亂並且非常不協作。</p>
<p> </p>
<p>現在，我們根據要實現的協作類型從各種更高級的工具中進行選擇。</p>
<p> </p>
<h4><strong>設計工具<span>FIGMA</span></strong></h4>
<p> </p>
<p>這是一個以協作為優先的共享工作區工具。<span><span> </span>Figma</span>非常適合在設計文件的同一區域中包含多個人。您可以時時觀看隊友的設計或在同一個設計上一起工作。</p>
<p> </p>
<p>Figma的好處：</p>
<p> </p>
<p>Figma降低了某人在筒倉中工作的能力。</p>
<p> </p>
<p>無需添加不必要的修飾或創建可交付結果的靜態即可實現協作。因此，您無需更改工作流程即可展示設計。</p>
<p> </p>
<p>可以輕鬆地在其本環境中查看並與之交互，並隨意進行調整。</p>
<p> </p>
<p>使用時：流程文檔，高保真線框，即時協作，以及引導客戶瀏覽一系列屏幕，以解釋並獲得有關設計方向的反饋。</p>
<p> </p>
<h4><strong>MARVEL app</strong><strong>軟體</strong></h4>
<p> </p>
<p>雖然<span>Figma</span>傾向於自由和靈活，但<span>Marvel</span>允許採用更標準化的協作形式。這也使我們的客戶可以輕鬆地與我們合作。</p>
<p> </p>
<p>Marvel的好處：</p>
<p> </p>
<p>Marvel是一個更簡潔、規範和專注的空間，非常適合與非設計團隊成員進行協作。</p>
<p> </p>
<p>它消除了客戶為帳戶付款或對工具進行深入了解的所有需求。</p>
<p> </p>
<p>客戶可以下載屏幕，並通過<span>Marvel</span>應用程序在設備環境中查看它們的運行情況。</p>
<p> </p>
<p>使用時：與客戶和開發人員一起呈現更多的最終設計工作。 （了解<span>Marvel</span>如何與其他原型工具進行比較。）</p>
<p> </p>
<h4><strong>其他合作工具</strong></h4>
<p> </p>
<p>Zeplin是一個有用的傳遞工具，使開發人員可以深入研究設計工作的細節。 （我們在這裡更深入地討論<span>Zeplin</span>。）</p>
<p> </p>
<p>Quip是集思廣益在產品<span>/</span>流程文件的絕佳平台。我們使用它來記錄和組織團隊成員在項目上需要了解的所有環境和知識。對於集思廣益新思路而不是視覺關注的新想法也很有用。</p>
<p> </p>
<p>請注意，還有許多其他工具可以為協作增加與上面類似的好處。此列表代表了在我們日常合作中對我們有效的工具，但並不表示所有可能對您的團隊有效的選項。</p>
<p> </p>
<p>精明的設計合作過程在實踐中</p>
<p> </p>
<p>現在，讓我們採用上面概述的最佳實踐和工具，並展示它們如何在現實生活中融合在一起。我們將使用<span>Press Play</span>應用程序中的實際繪圖經驗來演示設計協作的重要性。這種經驗涉及多個學科領域的團隊成員之間的重大協作，其中包括視覺設計師，<span>UX</span>設計人員，開發人員，產品經理，當然還有客戶。</p>
<p> </p>
<h4><strong>語境與挑戰</strong></h4>
<p> </p>
<p>Press Play是一個抽獎活動應用程序，可保存每日，每周和每月的圖紙。用戶通過觀看廣告賺取門票，並通過五個表情符號的選擇來輸入圖紙。然後，根據獲獎者的選擇與繪畫中隨機選擇的表情符號匹配的方式來獎勵獲獎者。這項特殊任務使我們為等待現場繪畫結果的用戶創造了一種有趣而激動人心的現場體驗。</p>
<p> </p>
<p>對於我們來說，為這種體驗創建類似遊戲的動畫非常重要。我們特別想在屏幕上喚起用戶的嬉戲感和期待感，讓用戶看到他們選擇的表情符號與抽獎活動圖上的表情符號相匹配。</p>
<p> </p>
<p>也就是說，我們需要注意動畫所需的複雜程度及其對整體產品時間表和成本的影響。我們的目標是在合理的時間內提高真實度，而又不顯著影響項目預算。</p>
<p> </p>
<h4><strong>合作的過程</strong></h4>
<p> </p>
<p>階段<span>1</span>：線框和自由討論</p>
<p> </p>
<p>首先，一位精明的<span>UX</span>設計師創建了<span>Press Play</span>的整體<span>UX</span>和線框，確定需要哪些屏幕以及每個屏幕的時間安排。她還為實時繪畫動畫整理了一個粗略的概念，根據客戶的需求和項目已建立的用戶體驗表達了初步的想法。</p>
<p> </p>
<p>她向產品經理和視覺設計師展示了線框和粗糙的動畫。然後這三個人都與客戶會面，因此每個人都可以直接聽到反饋。</p>
<p> </p>
<p>第二階段：研究與背景</p>
<p> </p>
<p>精明的視覺設計師負責創建實際的繪畫動畫，他們的眼睛新鮮，而且對<span>Press Play</span>產品沒有太多的了解。為了加快速度，他與<span>UX</span>設計師和產品經理進行了深入交流。他還花費額外的研究時間來了解總體產品目標，挑戰並熟悉迄今為止的工作。如前所述，他展示線框演示的一部分，並向客戶提出反饋。</p>
<p> </p>
<p>在這種情況下，他進行了一些與手頭任務直接相關的其他研究。通過這樣做，他確保自己了解現場繪畫體驗的要求、目標和挑戰。他查看了具有類似體驗和真實度的其他應用，並參考了粗糙的動畫以了解最終動畫到底需要顯示什麼（在這種情況下，是獲勝的表情符號和用戶的表情符號選擇）。在過於依賴解決方案之前，他會見了一位精明的<span>iOS</span>開發人員，以了解技術限制和注意事項。</p>
<p> </p>
<p>然後，我們的視覺設計師和<span>UX</span>設計師集思廣益，視覺效果非常重要。他們一致認為，需要慢慢進行透露，以便為用戶建立懸念<span>/</span>期待</p>
<p> </p>
<p>階段<span>3</span>：迭代和反饋</p>
<p> </p>
<p>當我們的視覺設計師沿多個不同方向工作時，他邀請了<span>UX</span>設計師來聊聊他在<span>Figma</span>中的進度和設計。通過討論工作，他們激發了更多的想法和迭代，同時確保它們符合客戶的期望。有了更多可靠的選擇，他再次與<span>iOS</span>開發人員會面，以確保從技術角度來看一切都符合要求。</p>
<p> </p>
<p>階段<span>4</span>：客戶的反饋和發展</p>
<p>當我們找到了幾種最終確定的體驗版本時，視覺設計師使用<span>Figma</span>與客戶一起瀏覽了它們。<span><span> </span>Press Play</span>的產品經理和<span>UX</span>設計師也提供了反饋和指導。</p>
<p> </p>
<p>一旦他們都了解了會引起客戶興趣的東西，視覺設計師便開始著手讓視覺效果最大化，並為開發做好準備。他繼續與<span>iOS</span>開發人員合作，以在技術層面上充分利用該概念。</p>
<p> </p>
<h4><strong>最終結果</strong></h4>
<p> </p>
<p>Press Play的實際繪圖動畫是工作中設計協作的一個示例。一隊跨學科專家團隊，共同解決具有更大影響的設計和開發挑戰。沒有設計協作，我們將找不到用戶體驗，視覺和技術之間的理想交匯處。</p>
<p> </p>
<p>當客戶在他的應用程序中看到動畫是生動時，他稱其為<span>“</span>開創性的<span>”</span>。</p>
<p> </p>
<p>此外，對這種<span>Press Play</span>體驗的研究、協作和創造，幫助我們發現了產品用戶旅程中的空白。最初，實際繪圖的目的是將結果顯示給用戶的一種有趣的方式。在設計過程中，我們意識到，如果用戶不因為觀看實際圖形而迷失了方向，那麼他們就不會體驗到該圖形的用戶旅程。</p>
<p> </p>
<p>基於這一發現，我們決定在其他兩個地方也改進該應用程序。我們在<span>“</span>獲勝者圈子<span>”</span>中添加了一個結果<span>/</span>實際繪圖元素，並在應用程序的<span>“</span>用戶詳細信息<span>”</span>端添加了<span>“</span>輸贏歷史記錄<span>”</span>部分。最後，設計協作使我們能夠實現用戶體驗中這未滿足的需求。</p>
<p> </p>
<h4><strong>結論說明</strong></h4>
<p> </p>
<p>它需要設計協調來處理構建出色的產品和體驗所伴隨的複雜並關鍵的問題。通過利用跨學科的多個團隊成員的專業知識，設計協作可確保團隊從各個角度應對挑戰並尋求更好的解決方案。通過正確的思維方式、工具和流程，設計協調能使團隊能夠通過創造性思維和更深入迭代。</p>
<p> </p>
<p>我們希望本指南為您提供一個良好的基礎，您可以以此為基礎建立自己的有效設計協作流程。您可以在<span>Savvy</span>博客上了解有關設計和產品策略的更多信息，也可以隨時在<span>Savvy Apps</span>網站上與我們聯繫以獲取幫助。</p>
<h3>EngineeringProductDesign</h3>
<p><span style="color: #0000ff;">40723210提供</span></p>
<p>原文pdf連結:<a href="https://drive.google.com/file/d/1KRwEcU7Vn65xL6twStG_EWaTKz1Ag8PG/view?usp=sharing">IndustrialAndEngineeringProductDesignCollaboration.pdf</a></p>
<p>翻譯連結:<a href="https://s40723210.github.io/cd2020/downloads/IndustrialAndEngineeringProductDesignCollaboration%E7%BF%BB%E8%AD%AF.pdf">IndustrialAndEngineeringProductDesignCollaboration翻譯.pdf</a></p>
<h4><strong>產品公司中的工業和工程設計的協作產品設計過程</strong></h4>
<p><strong></strong></p>
<p>這項研究在闡明工業設計師和工程設計師如何協作，以及這種合作如何體現在設計過程中。我們與來自六個產品製造商的<span>34</span>名工業和工程設計師進行了有關實際產品設計項目的深入採訪。我們首先從訪問數據中識別出各個設計過程。其次，我們使用鑲嵌的方法將設計過程進行比較並合併為協作過程。最後，我們簡化了協作流程，以創建具有代表性的流程模型。結果，我們發現了四種類型的典型協同產品設計流程及其特徵：<span>e</span>類型<span>1</span>：由<span>ID</span>主導的概念驅動過程，類型<span>2</span>：由<span>ID</span>主導的內外聯合過程，類型<span>3</span>：由<span>ED</span>主導的由內到外的流程，類型<span>4</span>：<span>ID</span>＆<span>ED</span>協同流程。</p>
<p></p>
<p>工程設計和工業設計的綜合貢獻對於向市場推出成功的產品至關重要。從單學科的角度很難解釋產品設計。但是，眾所周知，工程設計和工業設計在設計實踐上有很大不同<span>(Pei, 2009; Persson &amp; Wickman, 2004)</span>，並且它們的設計方法在某些方面是相衝突的<span>(Eder, 2013; Hosnedl, Srp, &amp; Dvorak, 2008; Pahl, Wallace, &amp; Blessing, 2007)</span>。工業設計師的角色包括增強產品的用戶體驗並開發其外部樣式和界面<span>(Ulrich &amp; Eppinger, 2012)</span>。他們運用美學和人體工程學方面的知識和技能<span>(Eder, 2013; Pahl et al., 2007)</span>。在與工業設計師的互動下，工程設計師參加了由工業設計師提出的設計概念的實施<span>(Persson &amp; Warell, 2003)</span>。工程設計人員為產品的功能，可靠和製造提供了一種方法<span>(Hubka &amp; Eder, 2012; Pahl et al., 2007)</span>。這導致了工業和工程設計師之間的有不同觀點<span>(Cross, 2008; Hubka &amp; Eder, 2012)</span>。</p>
<p> </p>
<p>經常有人爭辯說，工程設計師使用<span>”</span>從外觀到功能發展的方式<span>”</span>，而工業設計師則採用<span>``</span>從外觀到功能發展的方式<span>'(Eder, 2013; Hosnedl et al., 2008; Pahl et al., 2007)</span>。基於這些概念，提出了以下兩種設計策略：一種是<span>“</span>由內而外<span>”</span>的策略，定義為首先設計內部工件及配件，從而限制外部形狀，另一種是<span>“</span>由外而內<span>”</span>的策略。首先定義外型，然後約束內部零件<span>(Hubka &amp; Eder, 2012; Kim &amp; Lee, 2010)</span>。這些設計策略涉及公司應在特定條件下為特定目的而採取的設計過程。但是，從經驗來看的證據中很少了解到這兩種策略如何在工業項目中應用。很少有嘗試從工程設計和工業設計的綜合角度來看待設計過程。在這方面，我們研究了工業環境中兩個學科的協作設計過程。</p>
<p> </p>
<p>研究的問題是<span>1:</span>存在哪些類型的協作產品設計流程，以及<span>2:</span>什麼條件促使公司採用特定類型的流程。根據這兩個設計師小組的角色和特點，我們假設會有不同類型的由內而外的設計方法。我們認為，由內而外的方法將以工業設計為主導的設計過程為特徵，從而產生工業設計師作為需求和標準提供者的角色，而由內而外的方法將以工程設計為主導的設計過程，工程設計師通過提供對工業設計師職責的初始要求來限制工業設計師的任務範圍。為了在競爭激烈的市場中取得成功，公司應通過適當地採用從內而外的方法來匹配其情況和目標，從而創建工業設計和工程設計的協作流程。</p>
<p> </p>
<p>本文有兩個目標：首先，闡明在實踐中應用的原始協作產品設計過程的形式；其次，確定在不同條件下用於不同目的的不同類型的過程。為此，我們對六家消費產品製造商的工業設計師和工程設計師進行了深入採訪。我們使用<span>“mosaic method”</span>確定了每家公司的產品設計流程，其中結合了從訪談數據中提取的各個設計流程以完成協作流程。結果，我們確定了四種典型的協作產品設計流程及其特徵。</p>
<p> </p>
<p>在本文中，<span>“</span>協同產品設計<span>”</span>的用語是指通過工業設計和工程設計的共同貢獻而創建的產品設計。特別是在公司環境中，協同產品設計涉及一系列設計活動，例如<span>:</span>創建初始產品概念，確定內部規格以及開發外部特徵和內部結構。因此，<span>“</span>協同產品設計過程<span>”</span>是指工業設計和工程設計都直接參與產品開發活動的產品設計過程。</p>
<p> </p>
<p>此時的<span>“</span>工業設計<span>”</span>主要涉及開發產品的外形，界面和用戶體驗，但不包括純圖形或純樣式的設計。<span> “</span>工程設計<span>”</span>開發了用於在產品中放置和操作內部功能部件的技術解決方案，並以能夠實現大規模生產的方式定義了構成產品的內部和外部部件。我們將從事此類活動的工程師標記為<span>“</span>工程設計師<span>”</span>。</p>
<p>本文包括三個部分：第一部分詳細介紹了研究方法。第二部分介紹了典型的協作產品設計過程及其特徵。最後，它總結了結果，並討論了對設計文獻的影響和貢獻。</p>
<h4><strong>1.</strong><strong>研究方法</strong></h4>
<p>為了研究協作產品設計過程的類型和相關條件，我們在數據收集和分析中採用了紮實的理論方法<span>(Charmaz, 2006; Glaser &amp; Strauss, 2009)</span>，以及我們設計用於重新構建協作設計過程的<span>“</span>鑲嵌方法<span>”</span>在工業設計師和工程設計師之間。紮根的理論方法在社會科學中被廣泛用作為研究，較少的領域有建立理論的系統方法，而在設計研究中已被長期採用<span>(e.g. Lee &amp; Cassidy, 2007; Wong, 2010)</span>。它使用歸納邏輯，主要是通過深入的訪談和或觀察開始進行數據收集。在編碼階段，通常有兩種策略。一種是從數據中收集有意義的參考資訊並進行編碼，如果研究主題沒有明確定義，則將它們分為編碼類別。另一種是在明確定義研究主題時，使用符合特定主題的預定義編碼類別來標識相關參考。我們使用了後一種策略，因為對設計過程進行了廣泛的研究。<span> Berends</span>，<span>Reymen</span>，<span>Stultiens</span>和<span>Peutz</span>（<span>2011</span>）採用了類似的方法，對五家公司的設計過程進行了調查。<span> Kleinsmann</span>和<span>Valkenburg</span>（<span>2003</span>）收集了有關工業中協同設計過程的事例，並確定了協同設計項目的關鍵主題和過程。</p>
<p> </p>
<p>我們首先對個別設計師進行了深入採訪，並收集了他們關於設計項目的事例。為避免追溯性帳戶的不可靠性或準確性所造成的可能的失真（<span>Ackroyd</span>＆<span>Hughes</span>，<span>1981</span>），我們採用了三個標準來選擇研究目標：（<span>1</span>）相似產品領域中的多家公司；<span> </span>（<span>2</span>）工程和工業設計部門的多個參與者；<span> </span>（<span>3</span>）在整個產品開發週期中已經完成的項目。我們設置了第一個標準來提高研究結果的適用性。對項目環境的理解和分析提高了設計過程和方法的適用性（<span>Gericke</span>＆<span>Blessing</span>，<span>2012</span>）。因此，對具有相似項目環境的多家公司進行調查可能會提供更好的機會來應用研究結果。使用第二個標準，來自具有不同觀點的多個受試者的數據將相互補充，以抵消任何潛在的偏見（<span>Miller</span>，<span>Cardinal</span>和<span>Glick</span>，<span>1997</span>）。最後，在回顧性訪談中，可以通過收集和分析整個產品開發週期中已經完成的設計項目的事例來確定設計過程（<span>Berends</span>等，<span>2011</span>）。</p>
<p> </p>
<p>為了基於轉錄的訪談數據重建產品設計過程，我們首先確定<span>“</span>過程元素<span>”</span>，然後繪製出各個設計師實踐的部分設計過程。接下來，我們使用<span>“‘mosaic method”</span>將每個公司的所有部分流程組合為協同產品設計流程。在構建了所有詳細的協同產品設計流程之後，我們使用<span>“</span>流程塊<span>”</span>對其進行了簡化，以識別典型設計流程的類型。最後，我們將它們可視化為設計過程模型。如下圖<span>1</span>顯示了研究過程。</p>
<p>可以根據實際設計項目確定實際設計過程及其相對於上下文的特徵，這可能與公司記錄的設計過程不同。比較兩者將提供洞察力。但是，我們無法收集它們，因為它們被視為對外部機密。取而代之的是，我們詢問受訪者他們的公司是否有書面的標准設計流程，以及它是否與實際設計流程不同。</p>
<p><strong> </strong></p>
<h4><strong>1.1</strong><strong>深度訪談</strong></h4>
<h4><strong>1.1.1</strong><strong>案例公司的選擇</strong></h4>
<p>為了增加適用性，應該在公司的環境和背景下理解設計過程（<span>Maffin</span>，<span>1998</span>）。因此，我們通過指定案例公司來設置三個標準。所採用的三個標準如下：</p>
<p>(1）公司應生產中等複雜的電子產品。</p>
<p>(2）他們應該有獨立的工業設計和工程設計部門。</p>
<p>(3）他們應該是市場上領先的公司，生產精心設計的高質量產品。</p>
<p> </p>
<p>第一個標準使得能夠選擇在產品領域內具有相似性的製造商，其中工業設計師和工程設計者都扮演著重要的角色。生產簡單消費品的製造商在工程設計師中的作用將減少。此外，開發火箭不需要工業設計師。<span> Ulrich</span>和<span>Eppinger</span>（<span>2012</span>）指出，<span>“</span>中等複雜度的機電產品<span>”</span>要求工業設計師和工程設計人員重要程度相同。根據<span>Cross</span>（<span>2008</span>）提出的具有復雜性的工程消費品分類，中等複雜產品的例子包括電鑽和洗衣機。因此，中等複雜的電子消費產品指的是日常消費電子產品，它們是完全集成了電子和機械系統的工程產品（<span>Vasi c</span>＆<span>Lazarevi c</span>，<span>2008</span>）。儘管滿足第一個條件，但是某些公司（例如原始設備製造商（<span>OEM</span>））或小型公司的工業設計或工程設計部門是一個，或者沒有。在這種情況下，他們會使用外部設計或工程諮詢公司。他們的協同過程將不同於內部獨立工業設計和工程部門之間的協同過程。我們傾向於通過探索具有相似背景的案例來提高研究結果的適用性。因此，滿足了第二個標準。最後，生產精心設計和高質量產品的領先公司可以為調查提供合理和適當的數據，研究結果將為其他公司提供很好的參考。<span>Lawson</span>（<span>1994</span>）指出，發現良好的設計實踐是如何發生的，將有助於理解和製訂更有效的方法。這是第三個標準的理由。</p>
<p> </p>
<p>我們根據以上標準選擇了案例公司。我們首先將第一和第三項標準應用於從<span>2006</span>年至<span>2010</span>年連續獲得<span>“</span>韓國優秀設計獎<span>”</span>的公司（關於<span>GD</span>，<span>2011</span>年）。<span> “</span>韓國優秀設計獎<span>”</span>在韓國許多市場領先的製造商中很受歡迎。結果，我們獲得了<span>16</span>個公司名稱。然後，我們與獲獎公司列表中的聯繫方式聯繫了每家公司，並詢問主管是否具有獨立的<span>ID</span>和<span>ED</span>部門（第二標準）以及他們是否願意參加研究。最後，我們選擇了六家公司（表<span>1</span>）。</p>
<p>表<span>1:<br/><img alt="" height="202" src="https://s40723210.github.io/cd2020/images/EngineeringProductDesign%E8%A1%A81.png" width="818"/><br/></span></p>
<p> </p>
<h4><strong>1.1.2選擇受訪者</strong></h4>
<p>我們選擇了具有目的性和滾雪球式抽樣方法的受訪者（<span>Berg</span>，<span>1988</span>）。每個公司的主管都建議他們的設計師，而後者又建議他們的同事。在這樣做的同時，我們選擇了滿足以下三個條件的受訪者：</p>
<p>（<span>1</span>）兩年以上公司工作經驗</p>
<p>（<span>2</span>）參與至少一個產品開發過程的周期</p>
<p>（<span>3</span>）與同行的緊密合作和互動（即工業設計，簽名人與工程設計師）</p>
<p> </p>
<p>從一家公司的工業設計師和工程設計師團隊招募的預期受訪者人數為<span>6</span>名，每名受訪者中有<span>3</span>名為了保持平衡。但是，我們只能從<span>B</span>公司和<span>F</span>公司招募兩名工程設計人員。總共有<span>18</span>名工業設計師和<span>16</span>名工程設計師作為受訪者參加。他們的工作經驗從<span>2.1</span>年到<span>20</span>年不等，平均為<span>8.9</span>年。</p>
<h4><strong>1.1.3</strong><strong>面試程序</strong></h4>
<p>根據文獻的建議，我們採用了半結構化深度訪談方法（<span>Kvale</span>＆<span>Brinkmann</span>，<span>2009</span>；<span> Seidman</span>，<span>2012</span>）。我們首先列出了約<span>20</span>個詳細問題，並將它們分為四個主要主題：<strong>個人信息</strong>、<strong>設計過程</strong>、<strong>角色和專業知識</strong>、<strong>交互</strong>，然後提出了四個關鍵問題：</p>
<p>（<span>1</span>）您在團隊中的職位和角色是什麼？</p>
<p>（<span>2</span>）產品設計過程如何進行以及在此過程中發生了什麼過程？</p>
<p>（<span>3</span>）您在設計過程中擁有哪些任務，以及哪些知識和常識您執行項目所需的技能？</p>
<p>（<span>4</span>）工業設計和工程設計如何相互作用，在設計過程中互相交流？</p>
<p> </p>
<p>訪談首先是關於受訪者在團隊中的角色和工作經驗的問題，然後是他們經歷的產品開發過程以及在這些過程中的任務。當受訪者由於不願指出要回憶的時刻而猶豫不決時，我們提供了詳細的背景信息，例如：<span>“</span>假設今天是您參與的項目的開工會議日，然後告訴我發生了什麼事。<span>”</span>假設，替代，理想和解釋性問題（<span>Merriam</span>，<span>1998</span>年）。為了限制由多個訪問者引起的不一致，一位作者執行了所有訪問（<span>Ahmed</span>，<span>2007</span>年）。此外，作者在產品開發方面擁有<span>14</span>年的行業經驗，這限制了誤解受訪者描述的綜合設計情況的可能性。為了避免對面試官產生偏見，本研究遵循了<span>“ Epoche”</span>過程，該過程將對現象的判斷和假設封閉，以便在參與者的世界中進行檢查（<span>Leedy</span>＆<span>Ormrod</span>，<span>2012</span>年）。因此，面試官在感覺要判斷受訪者的反應時就忽略了對這種現象的判斷。我們在每個公司的會議室中進行了採訪，並對所有對話進行了錄音。為了幫助進行對話並記錄補充信息，我們做了現場說明。有時，受訪者會在便箋上製作圖紙以提供詳細說明。</p>
<p> </p>
<p>從經驗中知道，<span>90</span>分鐘適合進行深度訪談，因為受訪人在這段時間內會認真回答採訪，而受訪人在<span>90</span>分鐘以上時的回應往往會減少（<span>Seidman</span>，<span>2012</span>年）。遵循指南，我們計劃的採訪時間為<span>90</span>分鐘，但我們沒有控制住它。當我們有足夠的關於問題的數據時，我們通過觀察減少了來自答复的新信息，從而結束了訪談。錄音機中的<span>“</span>語音檢測錄音功能<span>”</span>使我們可以無聲地暫停錄音幾秒鐘，並在聲音返回時恢復錄音。每個受訪者的錄音時間從<span>70</span>分鐘到<span>100</span>分鐘不等，所有參與者的平均錄音時間為<span>78.5</span>分鐘。因此，每個受訪者的實際採訪時間應長於錄音時間。我們逐字記錄了所有採訪數據。結果，我們獲得了大約<span>1000</span>頁的全部轉錄。</p>
<h4><strong>1.2</strong><strong>確定設計過程</strong></h4>
<h4><strong>1.2.1</strong><strong>確定每個人經歷的設計過程</strong></h4>
<p>儘管所有轉錄數據都包含與設計過程有關的信息，但它們都與其他內容混合在一起，包括項目的情況和目標，個人的角色，必要的技能和知識，參與者之間的衝突，每個對象的感知圖像首先，通過回顧相關文獻來確定用於構建設計過程的<span>“</span>過程元素<span>”</span>，從而製定出一個編碼框架。我們通過仔細閱讀<span>A</span>公司的採訪記錄來確認他們。關於過程建模，將過程視為信息處理和狀態轉換系統的兩種觀點為有關過程建模的過程元素的編碼類別提供了有意義的線索。</p>
<p> </p>
<p>從信息處理的角度來看，<span>Browning</span>，<span>Fricke</span>和<span>Negele</span>（<span>2006</span>）將產品開發及其活動視為信息收集，創建，解釋，轉換和轉移的過程。大多數產品開發活動需要一組輸入，並作為活動的結果，初步輸出，狀態報告等進行生產（<span>Browning</span>等，<span>2006</span>）。這種觀點得到了有關設計過程和組織的大量文獻的支持（例如<span>Burns</span>＆<span>Stalker</span>，<span>1961; Clark</span>，<span>1991; Hubka</span>＆<span>Eder</span>，<span>2012</span>）。<span> Ulrich</span>和<span>Eppinger</span>（<span>2012</span>）將其描述為最終結果所必需的信息，該信息被注入以將當前設計問題轉換為下一個問題以降低不確定性，從而產生輸出，直到形成最終結果為止。這被建模為將功能規範（輸入）轉換為製品規範（輸出）的過程（<span>Takeda</span>，<span>Veerkamp</span>和<span>Yoshikawa</span>，<span>1990</span>；<span> Tomiyama</span>和<span>Yoshikawa</span>，<span>1986</span>）。<span> Browning</span>和<span>Ramasesh</span>（<span>2007</span>）指出，由於對交互的了解不多，從信息處理的角度進行過程建模無法捕獲完整的信息流。他們認為，確定組織單位之間的相互作用的重要性，因為它們會引起建立可交付的流程模式的活動之間的依賴。最終，從這個角度來看，流程建模的基本元素概括為<strong>信息流</strong>與<span>IPO</span>（<span>InputeProcesseOutput</span>）表示以及組織單位（人員，團隊，公司等）的<span>“</span>互動<span>”</span>。</p>
<p> </p>
<p>從狀態轉換的角度來看，<span>Reymen</span>（<span>2001</span>）將設計過程描述為通過在每個階段執行任務並評估設計活動將狀態從一種狀態轉移到另一種狀態的過程。這與階段模型一致，在階段模型中，每個階段都會進行設計活動，並在設計評審中評估階段的設計輸出，從而決定是否進行下一階段，重複當前階段或拒絕項目。（<span>Cagan</span>＆<span>Vogel</span>，<span>2002</span>；<span> Ulrich</span>＆<span>Eppinger</span>，<span>2012</span>）。大多數基於階段的模型都提倡這種觀點（<span>Wynn</span>＆<span>Clarkson</span>，<span>2005</span>）。基於階段的模型由旨在執行任務的動作和旨在評估執行任務的結果的決策組成；這項工作的完成構成了下一階段的發展（<span>J€ansch</span>＆<span>Birkhofer</span>，<span>2006</span>；<span> Roozenburg</span>＆<span>Cross</span>，<span>1991</span>）。除此之外，當從一個階段跳到另一個階段或在子過程之間鏈接時，伴隨輸入和輸出的信息流就會發生（<span>Lindemann</span>，<span>2003</span>；<span> Ogot</span>和<span>Okudan-Kremer</span>，<span>2004</span>）。<span> Pahl</span>等人提出的工程設計過程模型。<span> </span>（<span>2007</span>）證明了每個階段的明確投入和成果。第一階段的輸入為<span>“</span>任務<span>”</span>，結果為<span>“</span>規範<span>”</span>，該輸入再次進入下一階段。這樣，繪製出了將輸入和結果連接起來的順序發展階段。關於<span>“</span>任務<span>”</span>和<span>“</span>設計活動<span>”</span>，<span>Pahl</span>等人。<span> </span>（<span>2007</span>）使用<span>“</span>任務<span>”</span>來表示項目的初始起點，不同於在每個階段執行的<span>“</span>任務<span>”</span>。但是，這兩個術語的用法類似，用以表示執行設計工作，因此，人們對相互連接和處理任務的設計過程達成了普遍共識（<span>Dorst</span>，<span>2008</span>年）。</p>
<p> </p>
<p>從狀態轉換的角度來看，有兩個活動：執行任務和評估結果。通常，評估是在相對較短的時間內進行的，以便在<span>“</span>前進，重複或下降<span>”</span>之間做出決定。因此，我們將這些活動（評估，設計審查，門禁檢查，決策）稱為<span>“</span>事件<span>”</span>。目前，我們有兩個編碼類別；總而言之，我們可以用四個編碼類別對設計過程進行建模。<span>“</span>任務<span>”</span>，<span>“</span>事件<span>”</span>，<span>“</span>信息流<span>”</span>和<span>“</span>互動<span>”</span>，並且可以通過階段的關聯來表示。此時，設計過程的一個階段可以用<span>“</span>輸入任務（設計活動）事件（決策制定）輸出<span>”</span>來表示。以下內容描述如何使用以上四種編碼類別對過程要素進行編碼。</p>
<p>任務：清除設計人員執行的任務，例如<span>“</span>想法草圖<span>”</span>，<span>“ 3D</span>建模<span>”</span>等。我使用圓珠筆粗略地表達了我的想法。它上的顏色很少，或者掃描後可以在<span>Photoshop</span>上進行修飾。<span>”</span>我們將其編碼為帶有<span>“</span>想法草圖<span>”</span>標籤的任務類別。</p>
<p> </p>
<p>事件：完成特定任務後，將進行一個事件（決策），從而導致下一個動作。一位受訪者說；<span> ‘</span>我們去樣板公司製作原型，並帶走所有兩個或三個原型。與他們舉行了一次模擬評估會議<span> </span>。工程師們聽老闆的批評。老闆說就是這樣，那就是，如果工程師有不同的想法，他們會提供意見<span>..</span>。最後一個被選中。我們在活動類別中使用<span>“</span>模擬評估會議<span>”</span>標籤對此進行了編碼。</p>
<p> </p>
<p>資訊交流：當任務或事件發生時會生成信息流。它總是伴隨著輸入和輸出。一位受訪者說；<span> ‘</span>事實上，我們根據工程設計人員提供的規范進行工作。我們要等到事情來臨時才開始工作。<span>”</span>這表示工業設計師從工程設計師那裡收到了輸入的<span>“</span>規格數據<span>”</span>作為他們開始工作的依據。我們對<span>“</span>從<span>ED</span>到<span>ID</span>的規範數據<span>”</span>進行了編碼。<span> ‘</span>。選擇一個後，我們會將模型的<span>3D</span>數據傳遞到工程部門。我們發送<span>“ STEP”</span>文件，然後他們使用<span>“ UG”</span>開始設計。<span>”</span>這說明他們向工程設計人員發送了<span>3D CAD</span>數據作為其設計活動的輸出，這些輸入成為後續工程設計的輸入。活動。我們對<span>“</span>從<span>ID</span>到<span>ED</span>的<span>3D CAD</span>數據<span>”</span>進行了編碼。</p>
<p> </p>
<p>交互：發生任務或事件時，兩組經常交互。例如，當工業設計師檢查是否可以修改內部空間時，工程設計師通過提供相關信息為他們提供建議。在這種情況下，會發生激烈的互動，而工程設計人員會充當<span>“</span>顧問<span>”</span>的角色。<span> ‘</span>他們解釋說<span>‘</span>應該放在這裡，應該放在那裡。<span>’</span>然後，我們修改尺寸和位置，然後再次詢問他們是否可以減小<span>2</span>毫米的間隙。如果他們說<span>“</span>是<span>”</span>，我們會將一個部分與另一個部分拼合。<span>”</span>我們將其編碼為<span>“ ED</span>到<span>ID</span>的顧問角色<span>”</span>。</p>
<p> </p>
<p>我們從每個轉錄的訪談數據中識別出流程要素。我們盡可能用參與者自己的話語標記他們。我們將現場說明用作補充數據源。在此過程中，我們按時間順序排列並連接了編碼元素，以構建部分設計過程。該方法被廣泛採用以可視化行業中的過程模型（<span>Vergidis</span>，<span>Tiwari</span>和＆<span>Majeed</span>，<span>2008</span>年）。我們還根據訪談數據確定了設計過程中涉及的項目類型和目標。兩名研究人員執行了整個程序。一位研究人員首先構建了部分設計流程，另一位研究人員通過檢查訪談數據對其進行了檢查。結果，我們從每個公司用<span>7-9</span>獲得了<span>45</span>個局部設計過程（請參見表<span>2</span>中的第二行）。</p>
<p>表<span>2:<br/><img alt="" height="148" src="https://s40723210.github.io/cd2020/images/EngineeringProductDesign%E8%A1%A82.png" width="828"/><br/></span></p>
<h4><strong>1.2.2</strong><strong>確定協作產品設計流程</strong></h4>
<p>下一步是通過<span>“mosaic method”</span>將每個公司的設計過程結合到協作設計過程中。我們首先從公司的特定項目中收集了部分設計過程。之所以容易做到這一點，是因為公司的設計師描述了同一項目中的共享經驗，因此各個局部設計過程相互重疊並相互補充。之後，我們通過比較和合併過程元素來合併部分過程。從工業設計者的訪談數據中提取的部分過程提供了有關工業設計活動的豐富信息，包括與工程設計師的互動行為，但有關純工程設計活動的信息較少。工程設計也是如此。我們將公司中工業設計師的部分流程合併在一起，以圍繞工業設計活動重建設計流程。同時，我們利用工程設計師提供的信息來補充和加強工程設計方面的設計活動流程。我們以相同的方式圍繞工程設計活動重建了設計流程。我們最終將這兩個設計過程合併為一個協作產品設計過程。在鑲嵌方法中，結合交叉檢查的局部過程有利於提高可靠性和通用性。通過抵消彼此的信息，這大大降低了構建信息不完整的流程的可能性。因此，<span>“mosaic method”</span>降低了構建不准確流程的可能性。</p>
<p> </p>
<p>在比較部分設計過程時，我們發現產品計劃團隊參與了一些設計過程元素。因此，我們包括了它的作用。這意味著產品規劃團隊在工業設計和工程設計的協同設計項目中扮演著一定的角色。我們還標準化了一些表示相同任務或事件的術語。但是，它們的編碼方式不同，因為受訪者使用它們的方式略有不同。例如<span>:</span>我們發現一個會議在一個局部設計過程中被編碼為<span>“</span>產品計劃會議<span>”</span>，而在另一個局部設計過程中被編碼為<span>“</span>產品開發會議<span>”</span>。因此，我們將它們統一為<span>“</span>產品計劃會議<span>”</span>。也有人將工業設計結果稱為<span>“</span>模型<span>”</span>，<span>“</span>設計模型<span>”</span>或<span>“</span>模型製造<span>”</span>。我們將它們統一為<span>“</span>設計模型<span>”</span>。我們還將<span>“</span>模擬評估事件<span>”</span>和<span>“</span>模擬選擇<span>”</span>標準化為<span>“</span>模擬評估事件<span>”</span>。這項工作是通過對每個公司的面試數據進行交叉檢查，同時評估了評估的意義和環境來完成的。具體條款。實際上，設計師似乎了解每家公司定義了標準術語的文件化設計過程，但並沒有特別意識到這一點。他們似乎忽略了標準化流程，因為市場形勢迫使他們迅速採取行動。語言差異也是造成術語差異的可能原因。在產品設計領域，韓國語中的母語和借來的單詞混合使用。例如，我們同時使用借用詞和用英語表示<span>“</span>設計<span>”</span>的母語。此外，兩支球隊的文化和位置上的差異很可能會導致期限上的差異。除<span>F</span>公司外，這兩個部門分別位於不同的物理空間，至少位於不同的樓層。</p>
<p> </p>
<p>最後，我們通過將階段元素（輸入，任務，事件和輸出）合併到一個框中並在其中將它們與相關任務進行命名，來定義設計過程中的階段（參見圖<span>2</span>）。例如，工業設計師開始根據前一階段的研究結果繪製各種構想草圖。然後，他們通過評估選擇一些最佳草圖。根據選擇的結果，他們決定進入下一階段或重複當前階段。因此，<span>“</span>想法草圖<span>”</span>階段由<span>“</span>研究結果（輸入），<span>”</span>想法草圖（任務），<span>“</span>評估（事件）<span>”</span>和<span>“</span>最佳草圖（輸出）<span>”</span>組成。</p>
<p> </p>
<p>圖<span>2:<br/><img alt="" height="379" src="https://s40723210.github.io/cd2020/images/EngineeringProductDesign%E5%9C%962.png" width="828"/><br/></span></p>
<p>結果，我們從所有公司獲得了<span>12</span>個協同產品設計流程；每個公司一到三個（請參閱表<span>2</span>中的第三行）。我們將它們發送給每個公司的受訪者，以檢查我們對其流程的解釋。在此過程中進行了較小的更改。圖<span>3</span>顯示了公司<span>A</span>的協作產品設計過程。它在兩側顯示了兩個並行的過程：左側是工業設計過程，右側是工程設計過程，中間示出了兩者之間的相互作用。中間的<span>“</span>產品規劃會議<span>”</span>是由<span>“</span>產品規劃小組<span>”</span>主持的活動，由他們決定是否繼續將概念商業化或拒絕。文本框是由輸入任務事件輸出組成的階段。帶有虛線的文本框不是階段。它們沒有所有四個階段的元素。例如，<span>“</span>檢查<span>”</span>是一種決定。沒有輸入和輸出。垂直箭頭指示流程的進度。它還顯示了信息流的方向，前一級的輸出變成了下一級的輸入。水平箭頭表示<span>“</span>信息流<span>”</span>或<span>“</span>交互<span>”</span>的方向。圓形箭頭表示各階段中反复且強烈的交互。圖<span>3</span>和<span>5</span>中的顏色顯示了它們的連通性。稍後將這些分類為階段，並在下一部分中進行說明。</p>
<h4><strong>1.2.3</strong><strong>簡化流程</strong></h4>
<p>一旦我們制定了每個公司的協作產品設計流程，我們就將它們分類以確定它們的類型，目的和條件。但是，由於每個公司的流程都包含詳細的設計動作和信息，因此直接在公司之間進行比較並不容易。因此，我們通過<span>“</span>流程塊<span>”</span>的概念簡化了每個公司的設計流程，以幫助它們保持可比性，同時又保持基本特徵。</p>
<p> </p>
<p>我們發現在一組小的連續階段中存在一種模式。所有主要階段都完成了一項主要工作。完成後，一個清晰的新階段從另一個工作開始。我們將這些小階段定義為<span>“</span>流程塊<span>”</span>。其特徵在於初始輸入，內部迭代，決策，最終結果和不可逆趨勢（圖<span>4</span>）。流程塊中的內部流程從初始輸入開始，並在內部的各個小階段中運行。迭代或反饋可能在塊內的各個小階段之間發生。最後，他們對最終結果做出最終決定。這是一個里程碑，指示該階段將跳到下一階段。例如，在圖<span>3</span>的藍色方框中，此塊的主要工作是開發執行六個小階段的設計概念。當他們處於渲染階段時，如果在渲染評估事件中不滿意渲染結果，則可以返回到構思草圖階段。在最後階段，設計樣機作為結果由高層管理人員確認，然後跳至<span>“</span>產品計劃會議<span>”</span>。</p>
<p> </p>
<p>在前一個結果進入下一個過程塊的輸入之後，兩個過程塊之間的過程流幾乎沒有機會被逆轉。跨團隊通常進行最終設計，並由高層經理在每個工作組中批准。回到上一個區塊意味著它無法滿足市場時間表。因此，應該由最高管理層對此事做出決定。根據訪談數據，他們寧願放棄該項目，也不願返回上一個階段。在大多數基於階段的模型中都對階段之間的迭代和反饋進行了描述（<span>Wynn</span>＆<span>Clarkson</span>，<span>2005</span>）。但是，在本研究中，將一個過程塊或兩個並行塊視為一個階段，因此在實際情況中很少會發生階段之間的反向迭代或反饋。它發生在一個塊中的各個階段之間。因此，似乎在階段之間幾乎不可能放棄項目，但是在階段之間可以放棄。</p>
<p> </p>
<p>我們通過其主要工作來命名流程塊。在命名這些過程塊時，我們發現<span>“</span>概念設計<span>”</span>一詞在工程設計和工業設計中的用法有所不同。工程設計中的概念設計是與技術概念有關的技術概念，該技術概念通過開發對工作結構和功能的廣泛解決方案來與產品的工作方式相關（<span>Haik</span>＆<span>Shahin</span>，<span>2010; Kroll</span>，<span>Condoor</span>，＆<span>Jansson</span>，<span>2001; Ullman</span>，<span>2009</span>）。但是，工業設計師在概念設計階段決定產品樣式和交互作用的方向，這由概念關鍵字，情緒板，想法草圖和用戶場景來表示（<span>Press</span>＆<span>Cooper</span>，<span>2003</span>；<span> Tovey</span>＆<span>Harris</span>，<span>1999</span>；<span>Vredenburg</span>，<span>Isensee</span>，<span> Righi</span>和＆<span>Design</span>，<span>2001</span>年）。因此，我們標記了這個概念工業設計師的設計活動稱為<span>“ Concept Design-I”</span>，而工程設計師的設計活動稱為<span>“ Concept Design-E”</span>。</p>
<p> </p>
<p>圖<span>5</span>是圖<span>3</span>的簡化版本。圖<span>3</span>中的彩色框使用圖<span>5</span>中的相同彩色框進行了簡化。圖<span>3</span>中的藍色框變為<span>“</span>概念設計<span>-I”</span>。圖<span>3</span>中的<span>“</span>產品計劃會議<span>”</span>為定義為<span>“</span>產品計劃<span>”</span>，並以細長的六邊形可視化。由於它是一個單獨且獨特的設計活動，因此被確定為單個階段。在紅色塊內部，有兩個並行的處理塊；右邊的<span>“ Concept Design-E”</span>（紅色的小方框）是<span>“</span>主流程塊<span>”</span>，左邊的是<span>“</span>形狀修改<span>”</span>（黃色），是<span>“</span>對應的塊<span>”</span>。塊並不能視為單獨的階段，因為它們與大紅色塊內的開始到結束相結合。這樣，兩個設計師團隊之間的互動就很強。為了區分兩個平行的塊，我們用粗實線表示主塊，並用淺實線表示相應的塊。在綠色塊中，由於所有<span>12</span>個流程之間的設計活動都沒有什麼區別，因此我們將詳細設計，測試和生產的兩個順序流程塊合併為一個。因此，在本研究中我們將它們視為一個階段。當綠色方框中的設計過程繼續進行時，工業設計師會根據工程設計師的要求或他們自己的設計檢查目的不時做出反應。他們通常將這些活動稱為<span>“</span>後續活動<span>”</span>，與主要任務有所不同。這些活動顯然存在，但不屬於流程塊。它們是如圖<span>3</span>所示的離散過程元素，因此用虛線表示。為了幫助視覺理解，實心箭頭，雙向寬箭頭和單個方向寬箭頭分別表示過程流，相互交互和單向交互。</p>
<p>圖<span>3:<br/><img alt="" height="1153" src="https://s40723210.github.io/cd2020/images/EngineeringProductDesign%E5%9C%963.png" width="828"/><br/></span></p>
<p>圖<span>4:<br/><img alt="" height="458" src="https://s40723210.github.io/cd2020/images/EngineeringProductDesign%E5%9C%964.png" width="609"/><br/></span></p>
<p>圖<span>5:<br/><img alt="" height="1178" src="https://s40723210.github.io/cd2020/images/EngineeringProductDesign%E5%9C%965.png" width="828"/></span></p>
<h4><strong>1.2.4</strong><strong>確定協作設計過程的類型</strong></h4>
<p>我們根據流程結構，流程塊和階段的輸入和結果的相似性以及工業設計師和工程設計師之間的交互性，對<span>12</span>個簡化的協同產品設計流程進行了比較和分類。我們首先將每個流程塊和階段與其他<span>11</span>個流程的相應流程塊和階段進行結構比較。然後，我們比較了<span>12</span>個流程中每個相應階段的投入和結果。例如，圖<span>5</span>中的<span>“</span>概念設計<span>-I”</span>階段沒有輸入，但是產生了<span>“</span>設計模型<span>”</span>作為輸出。其他流程中的某些<span>“</span>概念設計<span>-I”</span>階段始於工程設計團隊的初步佈局設計。因此，檢查階段的輸入和結果的類型為確定總體流程如何進行提供了線索。最後，我們評估了一個階段中工業設計人員與工程設計人員之間的互動。藍色方框中的兩個組之間沒有交互。但是，在紅色塊中，它們之間存在強大的交互作用。結果，我們將<span>12</span>個協作產品設計過程分為四種代表性過程。</p>
<h4><strong>2.</strong><strong>協作產品設計過程的類型</strong></h4>
<p>我們根據協作產品設計過程的特徵來命名四種類型。它們是類型<span>1</span>：由<span>ID</span>主導的概念驅動過程；類型<span>2</span>：由<span>ID</span>領導的內外聯合流程；類型<span>3</span>：<span>ED</span>主導的內部流程；和類型<span>4</span>：<span>ID</span>＆<span>ED</span>協同過程，它們之間的差異主要存在於開發設計概念和初步佈局的過程的早期階段。在詳細設計階段之後，工程設計師的任務占主導地位，這之間存在一些差異。它相當標準化。這表明協作產品設計過程的類型由詳細設計階段之前採用的方法確定。</p>
<p> </p>
<p>兩家公司根據其目標和情況採用了一到三種類型的設計流程（請參見表<span>3</span>）。類型<span>1</span>和<span>4</span>僅用於新設計，但<span>C</span>公司在市場要求在短時間內進行新樣式時採用了類型<span>1</span>。當他們有很多參考產品並且交貨時間很短時，就會發生這種情況。<span><span> </span>Type 2</span>用於新設計和重新設計。有趣的是，類型<span>3</span>僅用於重新設計。除公司<span>C</span>（“移動通信產品製造商”）通過服務提供商向市場發布其產品外，大多數流程都用於<span>B2C</span>。考慮到<span>C</span>公司在與<span>A</span>公司和<span>E</span>公司不同的情況下使用<span>Type 1</span>，業務類型（<span>B2B</span>或<span>B2C</span>）將影響設計流程的選擇。</p>
<p><span> </span></p>
<p>關於實際設計過程和書面過程之間的區別，大多數人回答說他們已經記錄了所有公司的標准設計過程，但根本沒有遵循。<span><span> </span>Ma<span> </span></span>ﬃ<span><span> </span>n</span>（<span>1998</span>）的發現支持了這一點，即設計師根據產品開發環境開發了自己的方法。似乎已記錄在案件的流程根據項目類型定義了標準化的任務流和階段，每個部門的任務和角色以及項目時間。但是，他們總是被迫縮短實際項目時間。這種管理壓力很可能導致他們不遵循記錄的流程。</p>
<p><span></span></p>
<p>表<span>3:<br/><img alt="" height="406" src="https://s40723210.github.io/cd2020/images/EngineeringProductDesign%E8%A1%A83.png" width="714"/><br/></span></p>
<p>通過比較每種類型過程的使用頻率，我們發現類型<span>3</span>是最常用的，而類型<span>4</span>是最少的。使用類型<span>2</span>的頻率比使用類型<span>1</span>的頻率更高。除了公司<span>B</span>的情況外，類型<span>3</span>與大多數受訪者所說的公司標準最為相似。考慮到重新設計比新設計更頻繁發生的論點（<span>Roozenburg</span>＆<span>Eekels</span>，<span>1995</span>），成功的徹底創新可能每<span>5-10</span>年發生一次（<span>Norman</span>＆<span>Verganti</span>，<span>2014</span>），這是一個合理的發現。由於類型<span>4</span>是個人自發發起的，並且不是一套官方的標準程序，因此這種情況很少見。以下各節介紹了每種類型的設計過程的詳細特徵以及相關的上下文。</p>
<h4><strong>2.1</strong><strong>類型<span>1</span>：由<span>ID</span>主導的概念驅動的過程</strong></h4>
<p>工業設計人員在決定類型<span>1</span>初始階段的產品開發方向方面起著主導作用。根據過程塊，它分為四個階段，如圖<span>6</span>所示。</p>
<p><span> </span></p>
<p>第一階段（概念設計<span>-I</span>）：工業設計師獨立開發產品的概念，而不受其他部門的干擾。他們主要關注與美學外觀和用戶體驗有關的方面。他們很少考慮內部零件，這給了他們很多自由。他們為外部和高質量渲染圖像生成<span>3D CAD</span>數據以測試該概念。最終確定外觀形式後，他們會生成一個“設計模型”，一個無功能的原型，以驗證該概念。最後，在“設計評估會議”上選擇最佳設計。此階段的最終結果是外形的<span>3D CAD</span>數據和設計模型。工程設計師在此階段不採取任何行動。通常，他們甚至不知道工業設計師在設計什麼。</p>
<p><span> </span></p>
<p>第二階段（產品計劃）：產品計劃部門決定所選設計的商業化以及目標市場，設計的目標價格和材料成本。最後，他們準備一份產品計劃文件，並確定設計商業化的具體方向。</p>
<p>圖<span>6:<br/><img alt="" height="427" src="https://s40723210.github.io/cd2020/images/EngineeringProductDesign%E5%9C%966.png" width="386"/><br/></span></p>
<p> </p>
<p>第三階段（概念設計<span>-E /</span>形狀修改）：前一階段的產品規劃文檔和由工業設計師開發的最終<span>3D CAD</span>數據是向工程設計師提供的初始輸入。工程設計人員回顧了工業設計人員提出的設計概念的可行性，因為工程設計人員收集了相關技術並在<span>3D CAD</span>數據中佈置了內部零件，以測試是否可以將所有必不可少的內部功能零件固定在外部表格中。有時，工程設計人員會生成實驗性原型，以測試是否可以通過預設的外觀形式實現所需的性能。由於工業設計師在定義外觀形式時未考慮內部零件，因此工程設計師在將內部零件佈置在給定的形式中時遇到了麻煩。因此，以某種方式不可避免地要改變外觀。因此，<span>Concept Design-E</span>有一個相應的過程：工業設計師的“形狀修改”。工業設計師使用從工程設計師那裡收到的佈局數據來修改外觀形式。此時，兩個目標相互碰撞。工業設計人員嘗試保持原始形式，而工程設計人員要求進行修改以確保功能和性能。在這個過程中，發生了非常緊密的交互。結果是有關外部形狀和內部零件佈局的<span>3D CAD</span>數據。</p>
<p><span> </span></p>
<p>第四階段（詳細設計測試和生產<span>/</span>跟進）：從這一階段開始，工程設計師在所有零件中領導該過程。工程設計人員根據上一階段確定的<span>3D CAD</span>數據來決定各個零件的幾何形狀和成分結構。由於考慮了批量生產或可靠性測試，他們有時會要求工業設計師對外觀設計進行較小的修改。詳細設計完成後，將生產稱為“工程樣品”的工作原型，以檢查形式和功能。在這一點上，工業設計師要評估其外觀設計符合其設計理念的程度。然後，工程設計師決定供應商，生產模具，並通過多個事件過程測試“生產前原型”，以提高性能的可靠性和產品的耐用性。</p>
<p> </p>
<p>另一方面，在“跟進”中，工業設計師決定如何在產品上應用顏色，圖形，材料和表面修飾，並為工程設計師提供相關規範。對於所生產的每個工作原型，工業設計師都會根據規格測試美學和情感品質。當他們批准時，他們在設計過程中的正式作用就結束了。除非獲得批准，否則工程設計師應再次生產和測試有問題的零件。我們發現所有六個公司都具有這種機制來維持產品的設計質量。</p>
<p> </p>
<p>類型<span>1</span>與傳統觀念相反，傳統觀念認為新產品開發過程是通過市場研究或開發新技術來確定市場需求而開始的。它始於純粹的工業設計師的完全自由的概念化。這意味著可以根據工業設計師在腦海中設想的圖片來開發新產品。這與工程設計學科中描述的產品設計過程不一致（例如，<span>Dym</span>，<span>1994</span>年；<span><span> </span>Haik</span>＆<span>Shahin</span>，<span>2010</span>年；<span><span> </span>Pahl</span>等，<span>2007</span>年），在工業設計中，工業設計師在概念設計中的作用缺失。</p>
<p><span> </span></p>
<p>考慮到相關的理論，即創造力是在以解決方案為導向的方法（<span>Wynn</span>＆<span>Clarkson</span>，<span>2005</span>）對問題進行徹底分析之前發生的，例如“主要生成器”（<span>Darke</span>，<span>1979</span>）和猜想分析模型（<span>Hillier</span>）。 ，<span>Musgrove</span>和<span>O'Sullivan</span>，<span>1972</span>年），以及<span>Lawson</span>（<span>2006</span>年）和<span>March</span>（<span>1984</span>年）的其他相關發現和觀點，這將是公司在沒有外部影響的情況下，賦予工業設計師自由和自主權來產生創造性解決方案概念的最佳策略。干擾。實際上，類型<span>1</span>在兩種情況下被使用：一種是開發形狀和功能都新的概念產品，包括開發新產品類別（如公司<span>A</span>和<span>E</span>中的產品），另一種是啟動新概念產品。盡快（如公司<span>C</span>中）的現有產品。當參考設計豐富時，後一種情況似乎是可能的，因此，工業設計師可以在交貨時間短時確定產品尺寸和外部元素而無需任何產品規格。</p>
<h4><strong>2.2</strong><strong>類型<span>2</span>：由<span>ID</span>領導的組合內外流程</strong></h4>
<p>公司使用此過程來開發新型產品或修改現有產品。在任何一種情況下，與類型<span>1</span>不同，產品計劃團隊都將啟動該過程。我們可以分四個階段來解釋類型<span>2</span>，如圖<span>7</span>所示。</p>
<p>圖<span>7:<br/><img alt="" height="450" src="https://s40723210.github.io/cd2020/images/EngineeringProductDesign%E5%9C%967.png" width="437"/><br/></span></p>
<p>第一階段（產品計劃）：產品計劃小組創建一個產品計劃文檔以啟動產品開發。它設置了目標市場，目標價格和產品規格。在開發現有產品的修改版本時，它會根據現有產品（包括競爭對手的產品）來決定它們。在開發新產品時，工程設計師會幫助他們確定。此階段的結果是產品規劃文檔。</p>
<p><span> </span></p>
<p>第二階段（概念設計<span>-I</span>）：從產品計劃部門收到產品計劃文件後，工業設計師將決定產品的外觀和相關內部。他們收集符合產品尺寸和規格的待開發產品所需的功能項目，並從對用戶或設計趨勢的研究中得出形式概念。然後，他們安排內部零件以決定外觀形式，同時避免內部零件與預期的外部形式之間發生任何衝突。因此，它們在外形設計和內部零件的佈置之間來回移動。在此階段，工業設計師和工程設計師之間幾乎沒有互動。對於最終事件，設計評估將使用非功能性設計模型進行。因此，此階段的結果是有關產品外觀和初始內部佈局的<span>3D CAD</span>數據，以及設計模型。</p>
<p><span> </span></p>
<p>第三階段（概念設計<span>-E /</span>形狀修改）：從工業設計師那裡獲得<span>3D CAD</span>數據後，工程設計師會仔細檢查內部零件與外部形狀相關的可行性和可操作性，並製定最終佈局。工程設計師檢查它們時，經常要求工業設計師修改佈局或外部形式。因此，工業設計活動要進行相應的過程。 “形狀修改”。但是，形狀更改不像<span>Type1</span>那樣重要，因為他們在上一階段決定了與內部部件相關的外部形狀。該階段的結果是有關最終外觀形式和內部零件確定佈局的<span>3D CAD</span>數據。</p>
<p><span> </span></p>
<p>第四階段（詳細設計測試和生產<span>/</span>跟進）：該階段與類型<span>1</span>並無顯著差異。</p>
<p>類型<span>2</span>的顯著特徵是工業設計師在確定第二階段的外形時積極參與佈置功能性組件。儘管工業設計師對內部佈局與外部形狀之間的聯繫的了解較少以工程為重點，但此案例清楚地表明，工業設計師的作用已經超出了我們通常期望的範圍。因此，工業設計師變得很有潛力並且可以主動地進行決策。此外，工程設計師幾乎沒有參與此階段。根據工程設計文獻的建議（例如<span>Hubka</span>＆<span>Eder</span>，<span>1987; Pahl et al</span>。，<span>2007; Ullman</span>，<span>2009</span>），我們希望版圖設計將是工程設計人員的專屬工作。我們假設至少工程設計人員會積極為工業設計師提供建議和指導。但是，他們希望數據能夠從工業設計師那裡獲得，並賦予工業設計師自由完成與產品內部結構有關的外部形式的能力。此時，公司的設計第一政策似乎是主要原因。</p>
<p><span> </span></p>
<p><span>2.3</span>類型<span>3</span>：由<span>ED</span>主導的內部第一個過程類型<span>3</span>與類型<span>1</span>和類型<span>2</span>有兩點不同：它們僅用於重新設計現有產品，工程設計人員的工作要先於工業設計人員進行。它要求工程設計師扮演更重要的角色，同時減少工業設計師的角色。我們解釋它們的特徵如下：</p>
<p><span> </span></p>
<p>第一階段（產品計劃）：如圖<span>8</span>所示，產品計劃團隊首先根據年度產品開發路線圖啟動產品開發項目。至此，他們在路線圖中確實具有產品的功能概念。產品規劃專家根據市場上現有的產品確定目標市場，目標價格，產品尺寸和材料成本。工程設計人員經常通過分析競爭對手產品的技術部分並估算材料成本來幫助他們開發產品規格。此階段的結果是產品計劃文件，其中包括產品規格。</p>
<p><span> </span></p>
<p>第二階段（概念設計<span>-E</span>）：工程設計師根據產品規格快速制定初步佈局。他們通常使用以前開發的產品的數據。完成後，他們將初步佈局作為<span>3D CAD</span>數據發送給工業設計師。這是工業設計過程的起點。工業設計人員將其用作開發外觀的輸入，而工程設計人員則尋求系統性能的解決方案並繼續完善佈局。隨著內部佈局和外部形式的同時發展，兩個團隊密切互動並討論任何分歧或衝突之處，並反復交換反饋以進行修改。最終，當設計草圖發展為確定的外觀形式時，初步佈局成為確定的佈局。這個階段的結果是確定設計的最終佈局，從而確定最終產品的尺寸。</p>
<p> </p>
<p>2.5階段（概念設計<span>-I</span>）：此過程遠非一個獨立的後續階段，而是第二和第三階段之間的中間階段。因此，我們將其稱為第<span>2.5</span>階段。它從收到工程設計人員的初步佈局開始，並與<span>Concept Design-E</span>同時進行。工業設計師檢查內部佈局並以匹配的外部形式進行覆蓋。他們進行構想草圖，<span>3D CAD</span>建模，渲染，設計評估會議和模型選擇活動，以決定外觀設計。工程設計人員不斷為外觀設計提供建議和評估。因此，外觀設計和佈局通過相互交織的<span>Concept Design-I</span>和<span>Concept Design-E</span>逐步發展。</p>
<p> </p>
<p>第三階段（詳細設計測試和生產<span>/</span>跟進）：該階段與類型<span>1</span>和類型<span>2</span>沒有明顯不同。</p>
<p><span> </span></p>
<p>除公司<span>B</span>以外的所有公司都使用此過程。這表明它被最廣泛地使用。受訪者指出，就角色，任務和階段而言，此過程可與公司有關設計過程的正式指導方針相媲美。但是，他們提到實際時間比指南中指定的時間短。</p>
<h4><strong>2.4</strong><strong>類型<span>4</span>：<span>ID</span>＆<span>ED</span>協同過程</strong></h4>
<p>類型4並非是根據官方提議而發生的，而是各個設計師在早期階段的嘗試。在許多情況下，由於在有限的時間內存在可行性問題，參與開發陣容模型的工程設計師往往會拒絕工業設計師提出的新穎設計概念。為了實施這些概念，工業設計師與自由設計師合作。因此，此過程使繼續拒絕的新穎設計概念成為可能。此外，工業設計師和工程設計師也可以協同工作。與傳統的分離方法不同，它們以集成方式處理設計概念，同時考慮了許多設計變量。此過程的詳細階段如下）：</p>
<p>圖<span>8:<br/><img alt="" height="441" src="https://s40723210.github.io/cd2020/images/EngineeringProductDesign%E5%9C%968.png" width="410"/><br/></span></p>
<p>第一階段（產生概念）：如圖<span>9</span>所示，工業設計師獨立地構思新設計。他們大都是根據僅有創新性但仍未開始進行的設計構想來構建它。</p>
<p>第二階段（概念設計）：此階段始於工業設計師尋找可以與他們合作的工程設計師。當工程設計師同意加入工業設計師以實施設計概念時，他們將在整個階段中緊密合作。工程設計師為工業設計師提供最先進的技術，以增強設計理念。內部佈局的第一層是根據要開發的外部形狀開發的。該階段的結果是有關外觀和內部佈局的<span>3D CAD</span>數據。</p>
<p>第三階段（產品計劃）：產品計劃小組通過設計評估會議來決定設計的商業化。然後，產品計劃團隊確定設計的目標市場。從這個階段開始，負責開發陣容模型的工程設計人員就參與其中。</p>
<p>第四階段（詳細設計測試和生產<span>/</span>跟進）：該階段的過程與類型<span>1</span>、<span>2</span>和<span>3</span>的過程沒有太大不同。</p>
<p>現有的產品開發環境使工程設計人員趨於保守。消費電子領域的大多數開發項目都是緊迫的。公司通常會在計劃中設定產品發布日。因此，設計人員將按照時間軸執行所有任務和排程。根據訪談數據，參與此類項目的工程設計師傾向於拒絕工業設計師提出的新穎設計概念，因為他們認為自己無法確保使用這些概念的作品能夠在選定的時間通過性能和可靠性測試。測試失敗將直接影響公司的產品開發路線圖以及工程設計師評估時的年度績效。這似乎使他們保守地選擇和評估設計概念。因此，對於直接參與按時間表進入市場的項目的設計人員來說，幾乎無法使用此過程。相反，相對而言，從時間表到市場的時間相對有限的工程設計師，例如那些參與開發面向未來產品的先進技術的工程師，將更願意接受新穎的設計理念。此外，更重要的是，似乎更願意與其他專家合作進行設計的設計師傾向於執行此過程。</p>
<p>對於公司<span>D</span>，通過採用此過程，類型<span>4</span>在新產品方面取得了巨大的市場成功。但是，在我們的採訪中沒有報告更多將這一過程積極應用於後續項目的案例。儘管如此，有趣的是，<span>D</span>公司還是從先進技術開發團隊派遣了幾名工程設計師到工業設計團隊的一個相鄰辦事處。這啟用了協同處理案例。最高管理者故意讓他們動用，以使他們迅速為工業設計師提供必要的技術支持，以防止工業設計師提出不切實際的設計概念。這似乎激發了雙方更加親密，從而營造了合作的氣氛。這將增加新興的集成設計流程的可能性。</p>
<h4><strong>3.</strong><strong>討論與啟示</strong><br/><strong>3.1</strong><strong>角色變更</strong></h4>
<p>工業設計師的貢獻在概念設計階段占主導地位，此後，工程設計師接任其主要角色。這可以視為四種設計過程的一般特徵。除類型<span>3</span>外，所有設計過程均始於工業設計師開發的設計概念。對於類型<span>1</span>和類型<span>2</span>，工業設計師根據形狀和用途獨立定義設計概念。<span><span> </span>Type 4</span>在概念設計階段是集成的，但從工業設計師的初始設計概念開始。與其他三種類型（第<span>3</span>種情況）不同，在這種情況下，對現有產品進行了計劃中的修改，首先是由工程設計師進行佈局設計。看來他們的角色分為概念開發者和概念實現者。有趣的是，當一家公司追求新概念的產品或強調情感感覺和可用性（即使在重新設計案例中）時，工業設計師的作用似乎很重要。這與通過開發新原理和新技術來開發新概念產品的想法不同。他們寧願設計新用途或現有用途的含義。因此，這可以被視為新設計也從現有技術和原理開始的證據。</p>
<p>關於工業設計師的知識，與我們認為很少考慮內部零件的信念相反，他們似乎具有足夠的知識來閱讀和處理內部功能組件並進行外部設計。除類型<span>1</span>外，定義外部形狀通常是通過工業設計師考慮並重新佈置內部功能部件來進行的。類型<span>2</span>是意外情況。工業設計師通過同時安排相關的內部組件來開發外形。但是，他們在內部零件上的工作可能僅限於直接影響外部形狀的主要零件。儘管他們沒有完全參與設計內部零件的細節，但是很明顯，他們的作用已擴展到工程設計領域。這要歸功於最高管理層對工業設計的大力支持以及兩組之間共享的<span>CAD</span>工具。</p>
<h4><strong>3.2</strong><strong>選擇設計方法</strong></h4>
<p>從理論上講，“由內而外”和“由外而內”的方法是發生的，並且是由工程設計師和工業設計師的不同工作傾向共同造成的（<span>Hubka</span>＆<span>Eder</span>，<span>2012</span>；<span><span> </span>Kim</span>＆<span>Lee</span>，<span>2010</span>）。四種類型的協作設計過程可以看作是這兩種方法的擴展版本。本節討論四種類型與兩種方法之間的關係，以及成功應用每種類型並將其應用於顧問和客戶合作夥伴設置的條件。</p>
<p>對於強調使用環境的消費產品，工業設計師應首先定義與可用性和外觀有關的外觀，然後工程設計師確定與外部鏈接的內部功能部件以支持可用性和外觀。在這種情況下，這是一種由外而內的方法，其中類型<span>1</span>適用，類型<span>2</span>幾乎適用。如果我們將內向外過程定義為首先確定初步佈局，然後將其用於共同開發隨後的外部形式和確定性佈局，則類型<span>3</span>是一種情況。考慮到這兩種方法，類型<span>4</span>被視為混合過程，因為外部和內部都同時定義。如果我們將內部到外部的過程定義為在完成內部確定的佈局後決定外部的過程，則此處研究的公司中沒有這樣的過程。它不太適合與消費產品一起使用。它非常適合工業耐用品。例如，如果我們設計一台工業電動機，容量將決定電線的纏繞數和磁芯的尺寸。我們應該科學地計算內部轉子和定子的佈局和尺寸，以獲得最佳性能。因此，必須首先完全確定內部零件，然後將外部形式定義為覆蓋。如果我們根據預設的外部形式開發電機的內部零件，它將無法正常運行。</p>
<p>使用<span>Type 1</span>時，工業設計師可以自由提出創新的設計思路。然而，該方法將導致兩個問題。首先，很難獲得工程技術性能。為了獲得最佳性能，內部功能部件可能會與外形衝突。其次，為了解決第一個問題，設計團隊可能會通過在功能和外觀之間進行權衡來折衷原始設計概念。為了成功管理此方法，當折衷方案發生時，高層管理人員必須保持強大的支持以保持設計的創新性。正如我們在<span>B</span>公司中觀察到的那樣，類型<span>2</span>可以替代這些問題。它的策略是，工業設計師在移動或放置相關內部零件時確定外觀形式。這避免了內部和外部之間的嚴重干擾。然而，有爭議的是，工業設計師是否應在外觀設計開發之外還進行室內佈局設計，以犧牲想像力為代價。他們可能會在自己的知識範圍內折衷創新。要成功應用<span>Type 2</span>，設計師應該對工業設計和工程設計都具有很高的知識。</p>
<p>為了在早期階段獲得高級設計概念的可行性，值得注意的是<span>Type 4</span>，因為工業設計師的概念和工程設計師的技術支持可以開發新產品。鑑於此過程非常有效並且有可能開發創新產品，因此公司需要為其提供適當的使用條件。戴森公司可以成為榜樣。眾所周知，設計師和工程師作為一個部門的成員共享一個工作區，以實現設計的集成實施（<span>Dyson</span>＆<span>Coren</span>，<span>1997</span>）。為了促進此過程，公司需要有一個集成的團隊，其中兩個小組共享一個工作空間，並按預期吸收每個學科的文化。更為重要的是組織文化，它激發了設計師挑戰性和開放性，可以一起工作。如果設計師擔心公司因失敗而受到懲罰，那麼他們會更加保守。沒有這種情況的改變，類型<span>4</span>甚至作為公司中有據可查的流程都將無法有效地發揮作用。</p>
<p>在行業中，許多工程公司與外部工業設計師合作。儘管我們沒有調查這種類型的協作，但是，根據我們的發現對可能的流程方案進行討論將是有益的。當製造商與設計諮詢公司合作時，他們可以得到補充支持，以按時完成項目或產生新的想法（<span>Bruce</span>＆<span>Morris</span>，<span>1994</span>）。在顧問和客戶合作關係中，有兩種過程耦合方式：被動耦合，其中顧問在與客戶聯繫以獲取更多信息或查看其結果時獨立開發解決方案，以及主動耦合，其中顧問和客戶設計師的協作團隊密切合作生成解決方案（<span>Gericke</span>＆<span>Maier</span>，<span>2011</span>年）。在被動耦合中，由於外部設計師獨立工作，其設計過程將類似於類型<span>1</span>或類型<span>2</span>。當客戶希望利用他們缺少的特定專業來收集盡可能多的創意時，類型<span>1</span>將非常有用。當客戶公司高度以技術為導向並且有足夠的能力在強大的工程支持下實施好的概念時，這種情況將很有幫助。如果客戶的能力比上述情況要小，並且在初期需要聘請外部工業設計師來領導其產品開發，則類型<span>2</span>將是合適的。主動耦合模式將具有與類型<span>3</span>和類型<span>4</span>相似的過程。當客戶已經具有良好的設計方向和相關技術，並且想要改善產品的美學外觀時，類型<span>3</span>將是合適的。除非客戶和顧問公司的整合團隊在項目期間在同一空間工作，否則第<span>4</span>類將是不可能的。在顧問和客戶合作夥伴的協作設計過程中應該考慮其他因素。在許多情況下，客戶為顧問提供的信息在一定程度上受到限制。因此，在顧問和客戶合作夥伴以及公司內部發生的相同類型的協作過程在內容方面將是不同的。儘管如此，我們的研究結果和討論仍可為在消費電子領域選擇更好的設計方法提供線索。</p>
<h4><strong>3.3</strong><strong>設計過程類型的含義</strong></h4>
<p>工業設計師和工程設計師在設計方法和關於產品開發的觀點上是不同的（<span>Eder</span>，<span>2013</span>；<span><span> </span>Pahl</span>等，<span>2007</span>；<span><span> </span>Ulrich</span>＆<span>Eppinger</span>，<span>2012</span>）。工業設計師產生以用戶為中心的解決方案概念，工程設計師根據技術角度解決設計問題。這兩個群體的專業所面臨的過程可能是開發具有競爭力的創新產品的基礎。此外，系統工程設計和以用戶為中心的設計思想的耦合過程對於在顧問與客戶之間的關係中生成以用戶為中心的解決方案是有益的（<span>Gericke</span>＆<span>Maier</span>，<span>2011</span>）。耦合過程是公司採取並實現市場競爭力的最佳選擇。例如，消費電子公司使用四種類型的協作設計過程來實現其市場目標。工業設計師在這四種類型的早期階段中的作用是顯而易見的，採用工業設計師專業的方式是採用適當類型的協作設計過程的重要因素。通過給予類型<span>1</span>中的工業設計師自由，可以增加獲得創新設計概念的可能性。那麼，這種自由如何驅動工業設計師創建創新設計概念呢？實際上，建築和工業設計師首先從解決方案的圖像入手，然後通過重複試驗最終確定（<span>Lawson</span>，<span>2006</span>；<span><span> </span>Roozenburg</span>＆<span>Cross</span>，<span>1991</span>）。這與一個模型有關，在該模型中，設計人員首先基於預設進行推測，然後進行分析（<span>Hillier</span>等，<span>1972</span>）。這意味著工業設計師依靠對未來的展望來創造創新的概念，而不是對市場和客戶進行深入的設計研究。<span><span> </span>Press and Cooper</span>（<span>2003</span>）補充說，工業設計方法是價值驅動的。因此，類型<span>1</span>的工業設計師可以不受約束，可以通過設想所需的未來產生創意。</p>
<p><span>Norman</span>和<span>Verganti</span>（<span>2014</span>）認為，創新產品開發是通過技術或含義的改變進行的，而不是以人為中心的認真的設計研究。他們補充說，以人為本的設計方法更適合於現有產品的逐步改進</p>
<p>產品。在消費電子領域當前的產品開發環境中，產品規劃專家在市場和客戶研究中起著關鍵作用。因此，產品規劃團隊對工業設計師的投入將僅限於他們的創造力。這解釋了為什麼公司以相反的方式使用<span>Type 1</span>；首先開發概念，然後再定義市場，而不是相反。通常，在產品設計概念中，設計師會考慮與技術高度相關的功能概念，以及會給用戶帶來新含義的樣式概念（<span>Baxter</span>，<span>1995</span>年）。因此，由於功能和<span>/</span>或樣式概念，工業設計師提出的設計概念應該是創新的。當涉及到技術時，工程設計師應開發新技術或尋找適當的技術來實施該概念。如果在產品開發計劃階段沒有被拒絕，這種類型的過程會導致新技術的開發。</p>
<p>在類型<span>2</span>中，公司對工業設計師承擔各種角色和職責。由於工程設計師不會打擾他們，所以他們可能有一定的自由度。工業設計師的方法是面向解決方案的。他們通常不遵循系統的過程。他們寧願提出新的想法並重複他們。但是，類型<span>2</span>可能通過強加他們在內部佈局設計和外部設計中扮演的另一角色而中斷了工業設計師的方法。工業設計師採用面向問題和系統的方法，將最終限制他們在概念開發中的想像力。在考慮其設計概念的可行性時，這將使它們更加現實。因此，類型<span>2</span>的設計結果將不如類型<span>1</span>的創新。否則，類型<span>2</span>將比新設計更適合重新設計。如果工業設計師不考慮將<span>Type 2</span>的內部零件進行重新設計，則他們可能會面臨困難，設計概念可能會被拒絕（<span>Kim</span>＆<span>Lee</span>，<span>2014</span>）。</p>
<p> 如果我們考慮將類型<span>2</span>和類型<span>3</span>用於重新設計，那麼類型<span>2</span>何時比類型<span>3</span>更好？類型<span>3</span>的特性符合工程設計中顯示的大多數設計過程。工業設計被認為是工程設計領域中的事後想法（例如<span>Andreasen</span>＆<span>Hein</span>，<span>2000</span>；<span><span> </span>Hubka</span>＆<span>Eder</span>，<span>1987</span>；<span><span> </span>Pahl</span>等，<span>2007</span>）。按照他們的觀點，工業設計的功能與產品外觀的各個方面有關，例如確定產品的技術特徵後的樣式，形式和顏色。第<span>3</span>類是工程設計師為設計概念提供技術解決方案的過程。他們要求工業設計師開發外觀。因此，類型<span>3</span>僅使用工業設計師的部分專業知識來創造美學外觀。從這個角度來看，類型<span>2</span>比類型<span>3</span>可以為工業設計師提供更多的方法來展示其專業知識。考慮到類型<span>3</span>是最常用的過程，因此在過程管理方面可以更有效。類型<span>3</span>早期階段的不確定性可能是四種類型中最小的。的大多數技術解決方案設計概念是由工程設計師在早期階段設定的，而工業設計師只限於創造美學外觀。</p>
<p>我們找不到的一個過程是類型<span>5</span>：<span>ED</span>主導的技術驅動過程。這可以與類型<span>1</span>：由<span>ID</span>主導的概念驅動過程形成對比。在類型<span>5</span>中，工程設計人員將首先開發一項新技術而無需考慮產品開發計劃，並使用測試原型來測試其性能。接下來，工業設計師為該技術產生新的產品設計概念。然後，可視化的設計概念和原型可用於決定產品開發。應用類型<span>5</span>，公司可以創建新類別的產品，從而增加打開新市場的可能性。我們無法找到這種類型的原因之一是創新技術開發的稀缺性，以及新技術滿足新概念的難得機會。另外，在決定產品開發之前，公司不太可能等不確定的工程設計師和工業設計師。為了使此過程更好，我們需要工程設計師開發新技術，需要工業設計師使用相互合作的技術創建新概念。根據這一論點，類型<span>4</span>在正式用於創新產品設計時會很有用。它還可以使工程設計師開發的技術與工業設計師提出的新概念集成在一起。<br/>4.結論</p>
<p>我們旨在確定協作設計過程類型的存在以及在公司中採用特定類型的條件。我們根據工業設計師和工程設計師的深入訪談數據建立了協作設計流程。結果，我們發現了四種類型的協作設計過程。根據設計過程早期階段的不同對它們進行分類。四種類型的過程在不同的上下文中用於不同的目的。有時，它們會被戰略性地用於開發新設計或重新設計，有時它們會由於內部和外部因素而有機地應用。我們還發現，工業設計師的作用是有影響力的，而且是擴展的。</p>
<p>設計過程模型的抽象特徵和研究中的一門學科方法與實際實踐並不完全匹配，並且被確定為造成這種問題情況的原因（<span>Brooks Jr</span>，<span>2010</span>；<span><span> </span>Eckert</span>＆<span>Clarkson</span>，<span>2005</span>）。在這方面，有人要求結合不同的設計過程模型（<span>Albers</span>，<span>2010</span>；<span><span> </span>Dorst</span>，<span>2008</span>）。四種類型的過程是工業設計師驅動的以解決方案為導向的方法和工程設計師以問題為導向的方法的組合過程。它們表明，即使在單個領域（即消費類電子產品）中，實際的設計過程也無法用單個模型來表示。為了提高設計過程的適用性並在設計實踐中獲得設計方法的適當支持，需要考慮公司和項目具體環境的更為具體的過程模型（<span>Finkelstein</span>＆<span>Finkelstein</span>，<span>1983</span>；<span><span> </span>Gericke</span>＆<span>Blessing</span>，<span>2011</span>）。我們特別專注於消費電子領域，在這一領域中，工業設計師和工程設計師在產品開發中起著重要的合作作用。我們發現了四種類型的設計過程，並確定了它們的目的和背景。因此，我們發現的有關上下文的詳細信息將為公司計劃針對新產品開發的有效設計過程管理提供有用的信息，尤其是在消費電子領域。</p>
<p>根據研究方法，我們展示瞭如何從設計師的深入訪談數據中建立協作設計過程。我們確定了過程元素，並使用它們構造了部分過程，並使用鑲嵌方法建立了詳細的協作設計過程。我們還引入了“過程塊”，並定義了一個或兩個交互塊作為一個階段。我們認為這種方法有利於確定最佳水平的實際設計過程。我們認為該方法適用於發現其他設計過程。我們的過程模型的形式可與其他基於階段的模型相比較（例如<span>French</span>，<span>1998</span>；<span><span> </span>Pahl</span>等，<span>2007</span>）。我們從模型中發現，在階段之間很少發生反向迭代或反饋。這與現有的基於階段的工程設計過程模型的描述不同。在理想情況下，我們認為雙向迭代是可能的，但是實際上由於激烈的市場競爭，我們認為這種情況很少發生。</p>
<p>特別是針對其他產品領域中的其他項目案例，需要對該方法進行進一步的研究。本研究中的公司均為電子產品製造商。因此，結果僅限於此產品類別。我們需要測試這四個協作設計過程如何在其他公司中應用。相反，值得研究創新產品開發和應用過程的案例。</p><h3>MechanicalDesignProcess</h3>
<p>40723210提供</p>
<p>原文pdf連結:<span> </span><a href="https://drive.google.com/file/d/13THamnfayiRT4Wa9KzmjXQSP4ZW2jIej/view?usp=sharing">MechanicalDesignProcess.pdf</a></p>
<p>翻譯連結: <a href="https://s40723210.github.io/cd2020/downloads/MechanicalDesignProcess%E7%BF%BB%E8%AD%AF.pdf">MechanicalDesignProcess翻譯.pdf</a></p>
<p><iframe data-mce-fragment="1" height="700px" iframe="" src="https://s40723210.github.io/cd2020/downloads/MechanicalDesignProcess%E7%BF%BB%E8%AD%AF.pdf" width="100%"></iframe></p>
<h3>Keyboard control car</h3>
<p><span>40723210提供</span></p>
<h4 class="title style-scope ytd-video-primary-info-renderer"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">V-rep 馬達驅動四輪車</yt-formatted-string></h4>
<p><span>V-rep 檔案連結: <a href="https://s40723210.github.io/cd2020/downloads/4%20wheel%20car.ttt">4 wheel car.ttt</a></span></p>
<p>剛開始可以使用內建的功能來創建模型，Add &gt; Primitive shape &gt; Cuboid(需要的 形狀)，給定所需形狀的參數值即可，創建出一個正方形本體，還有四個圓柱形輪子， 移動到相對應的位置，再來加上馬達 Add &gt; Joint &gt; Revolute，分別定位在四個輪 子的軸上，雙擊Revolute_joint圖示，在彈出的屬性框點擊Show dynamic parameters dialog，勾選 Motor enable，並設置 Target velocity 為 10，四個馬達都是如此。 </p>
<p>影片連結:<a href="https://youtu.be/y8DJ1sjuAqM">https://youtu.be/y8DJ1sjuAqM</a></p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/y8DJ1sjuAqM" width="560"></iframe></p>
<hr color="00ffee"/>
<h4 class="title style-scope ytd-video-primary-info-renderer"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">四輪車鍵盤控制轉向</yt-formatted-string></h4>
<p>V-rep 檔案連結: <a href="https://s40723210.github.io/cd2020/downloads/4%20wheel%20car%20keyboard.ttt">4 wheel car keyboard.ttt</a></p>
<p>四輪車加上轉向及鍵盤控制，先開啟之前做好的四輪車，將兩個前輪馬達複製貼上，再使兩個馬達原地轉向90度，創建兩個小正方體，位置與前輪一模一樣，<span>需要設定屬性避免與其他部件衝突，本體、輪子、小正方體都要關閉如下圖。</span></p>
<p><img alt="" height="136" src="https://s40723210.github.io/cd2020/images/4%20wheel%20car%20%E6%9C%AC%E9%AB%94%E5%B9%B2%E6%B6%89.PNG" width="371"/><br/><br/>將控制迴路啟用，來控制轉向的限制角度，兩個馬達都用預設即可，如下圖設定。<br/><br/><img alt="" height="431" src="https://s40723210.github.io/cd2020/images/4%20wheel%20car%20%E8%BD%89%E5%90%91%E8%A8%AD%E5%AE%9A.PNG" width="377"/></p>
<p>將之前的馬達速度都關掉，<span>點擊馬達圖示視窗下的</span><span>show dynamic properties dialog</span><span>，把</span><span>motor properties的速度改為0</span><span>，底下的</span><span>lock motor when target velocity is zero是</span><span><span color="#000000">馬達速度為零時鎖定馬達，可開可不開。</span></span></p>
<p><span><span color="#000000"><img alt="" height="171" src="https://s40723210.github.io/cd2020/images/4%20wheel%20car%20%E5%BE%8C%E8%BC%AA%E9%A6%AC%E9%81%94.PNG" width="380"/></span></span></p>
<p>最後把方塊拖移至對應馬達下，再整個放進本體下，把對應的前輪馬達放置方塊下，本體新增一個控制腳本，選擇cuboid，點擊菜單欄的Add &gt; Associated child script &gt; Threaded，將寫好的腳本複製貼上，更改前輪馬達的名子，這樣腳本才能控制，下圖為整個最終結構。<br/><br/><img alt="" height="355" src="https://s40723210.github.io/cd2020/images/4%20wheel%20car%20%E7%B5%90%E6%A7%8B.PNG" width="266"/></p>
<p><span><strong>四輪車鍵盤控制轉向程式碼:</strong></span></p>
<div>
<div class="syntaxhighlighter lua" id="highlighter_696434">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="lua comments">-- This script is threaded! It is a very simple example of how Ackermann steering can be handled.</code></div>
<div class="line number2 index1 alt1"><code class="lua comments">-- Normally, one would use a non-threaded script for that</code></div>
<div class="line number3 index2 alt2"> </div>
<div class="line number4 index3 alt1"><code class="lua plain">threadFunction=</code><code class="lua keyword">function</code><code class="lua plain">()</code></div>
<div class="line number5 index4 alt2"><code class="lua spaces">    </code><code class="lua keyword">while</code> <code class="lua plain">simGetSimulationState()~=sim_simulation_advancing_abouttostop </code><code class="lua keyword">do</code></div>
<div class="line number6 index5 alt1"><code class="lua spaces">        </code><code class="lua comments">-- Read the keyboard messages (make sure the focus is on the main window, scene view):</code></div>
<div class="line number7 index6 alt2"><code class="lua spaces">        </code><code class="lua plain">message,auxiliaryData=simGetSimulatorMessage()</code></div>
<div class="line number8 index7 alt1"><code class="lua spaces">        </code><code class="lua keyword">while</code> <code class="lua plain">message~=-1 </code><code class="lua keyword">do</code></div>
<div class="line number9 index8 alt2"><code class="lua spaces">            </code><code class="lua keyword">if</code> <code class="lua plain">(message==sim_message_keypress) </code><code class="lua keyword">then</code></div>
<div class="line number10 index9 alt1"><code class="lua spaces">                </code><code class="lua keyword">if</code> <code class="lua plain">(auxiliaryData[1]==2007) </code><code class="lua keyword">then</code></div>
<div class="line number11 index10 alt2"><code class="lua spaces">                    </code><code class="lua comments">-- up key</code></div>
<div class="line number12 index11 alt1"><code class="lua spaces">                    </code><code class="lua plain">desiredWheelRotSpeed=desiredWheelRotSpeed+wheelRotSpeedDx</code></div>
<div class="line number13 index12 alt2"><code class="lua spaces">                </code><code class="lua keyword">end</code></div>
<div class="line number14 index13 alt1"><code class="lua spaces">                </code><code class="lua keyword">if</code> <code class="lua plain">(auxiliaryData[1]==2008) </code><code class="lua keyword">then</code></div>
<div class="line number15 index14 alt2"><code class="lua spaces">                    </code><code class="lua comments">-- down key</code></div>
<div class="line number16 index15 alt1"><code class="lua spaces">                    </code><code class="lua plain">desiredWheelRotSpeed=desiredWheelRotSpeed-wheelRotSpeedDx</code></div>
<div class="line number17 index16 alt2"><code class="lua spaces">                </code><code class="lua keyword">end</code></div>
<div class="line number18 index17 alt1"><code class="lua spaces">                </code><code class="lua keyword">if</code> <code class="lua plain">(auxiliaryData[1]==2009) </code><code class="lua keyword">then</code></div>
<div class="line number19 index18 alt2"><code class="lua spaces">                    </code><code class="lua comments">-- left key</code></div>
<div class="line number20 index19 alt1"><code class="lua spaces">                    </code><code class="lua plain">desiredSteeringAngle=desiredSteeringAngle+steeringAngleDx</code></div>
<div class="line number21 index20 alt2"><code class="lua spaces">                    </code><code class="lua keyword">if</code> <code class="lua plain">(desiredSteeringAngle&gt;45*</code><code class="lua functions">math.pi</code><code class="lua plain">/180) </code><code class="lua keyword">then</code></div>
<div class="line number22 index21 alt1"><code class="lua spaces">                        </code><code class="lua plain">desiredSteeringAngle=45*</code><code class="lua functions">math.pi</code><code class="lua plain">/180</code></div>
<div class="line number23 index22 alt2"><code class="lua spaces">                    </code><code class="lua keyword">end</code></div>
<div class="line number24 index23 alt1"><code class="lua spaces">                </code><code class="lua keyword">end</code></div>
<div class="line number25 index24 alt2"><code class="lua spaces">                </code><code class="lua keyword">if</code> <code class="lua plain">(auxiliaryData[1]==2010) </code><code class="lua keyword">then</code></div>
<div class="line number26 index25 alt1"><code class="lua spaces">                    </code><code class="lua comments">-- right key</code></div>
<div class="line number27 index26 alt2"><code class="lua spaces">                    </code><code class="lua plain">desiredSteeringAngle=desiredSteeringAngle-steeringAngleDx</code></div>
<div class="line number28 index27 alt1"><code class="lua spaces">                    </code><code class="lua keyword">if</code> <code class="lua plain">(desiredSteeringAngle&lt;-45*</code><code class="lua functions">math.pi</code><code class="lua plain">/180) </code><code class="lua keyword">then</code></div>
<div class="line number29 index28 alt2"><code class="lua spaces">                        </code><code class="lua plain">desiredSteeringAngle=-45*</code><code class="lua functions">math.pi</code><code class="lua plain">/180</code></div>
<div class="line number30 index29 alt1"><code class="lua spaces">                    </code><code class="lua keyword">end</code></div>
<div class="line number31 index30 alt2"><code class="lua spaces">                </code><code class="lua keyword">end</code></div>
<div class="line number32 index31 alt1"><code class="lua spaces">            </code><code class="lua keyword">end</code></div>
<div class="line number33 index32 alt2"><code class="lua spaces">            </code><code class="lua plain">message,auxiliaryData=simGetSimulatorMessage()</code></div>
<div class="line number34 index33 alt1"><code class="lua spaces">        </code><code class="lua keyword">end</code></div>
<div class="line number35 index34 alt2"> </div>
<div class="line number36 index35 alt1"><code class="lua spaces">        </code><code class="lua comments">-- We handle the front left and right wheel steerings (Ackermann steering):</code></div>
<div class="line number37 index36 alt2"><code class="lua spaces">        </code><code class="lua plain">steeringAngleLeft=</code><code class="lua functions">math.atan</code><code class="lua plain">(l/(-d+l/</code><code class="lua functions">math.tan</code><code class="lua plain">(desiredSteeringAngle)))</code></div>
<div class="line number38 index37 alt1"><code class="lua spaces">        </code><code class="lua plain">steeringAngleRight=</code><code class="lua functions">math.atan</code><code class="lua plain">(l/(d+l/</code><code class="lua functions">math.tan</code><code class="lua plain">(desiredSteeringAngle)))</code></div>
<div class="line number39 index38 alt2"><code class="lua spaces">        </code><code class="lua plain">simSetJointTargetPosition(steeringLeft,steeringAngleLeft)</code></div>
<div class="line number40 index39 alt1"><code class="lua spaces">        </code><code class="lua plain">simSetJointTargetPosition(steeringRight,steeringAngleRight)</code></div>
<div class="line number41 index40 alt2"> </div>
<div class="line number42 index41 alt1"><code class="lua spaces">        </code><code class="lua comments">-- We take care of setting the desired wheel rotation speed:</code></div>
<div class="line number43 index42 alt2"><code class="lua spaces">        </code><code class="lua plain">simSetJointTargetVelocity(motorLeft,desiredWheelRotSpeed)</code></div>
<div class="line number44 index43 alt1"><code class="lua spaces">        </code><code class="lua plain">simSetJointTargetVelocity(motorRight,desiredWheelRotSpeed)</code></div>
<div class="line number45 index44 alt2"> </div>
<div class="line number46 index45 alt1"><code class="lua spaces">        </code><code class="lua comments">-- Since this script is threaded, don't waste time here:</code></div>
<div class="line number47 index46 alt2"><code class="lua spaces">        </code><code class="lua plain">simSwitchThread() </code><code class="lua comments">-- Resume the script at next simulation loop start</code></div>
<div class="line number48 index47 alt1"><code class="lua spaces">    </code><code class="lua keyword">end</code></div>
<div class="line number49 index48 alt2"><code class="lua keyword">end</code></div>
<div class="line number50 index49 alt1"> </div>
<div class="line number51 index50 alt2"><code class="lua comments">-- Put some initialization code here:</code></div>
<div class="line number52 index51 alt1"><code class="lua comments">-- Retrieving of some handles and setting of some initial values:</code></div>
<div class="line number53 index52 alt2"><code class="lua plain">steeringLeft=simGetObjectHandle(</code><code class="lua string">'Steer_left_joint'</code><code class="lua plain">)</code></div>
<div class="line number54 index53 alt1"><code class="lua plain">steeringRight=simGetObjectHandle(</code><code class="lua string">'Steer_right_joint'</code><code class="lua plain">)</code></div>
<div class="line number55 index54 alt2"><code class="lua plain">motorLeft=simGetObjectHandle(</code><code class="lua string">'Front_left_joint'</code><code class="lua plain">)</code></div>
<div class="line number56 index55 alt1"><code class="lua plain">motorRight=simGetObjectHandle(</code><code class="lua string">'Front_right_joint'</code><code class="lua plain">)</code></div>
<div class="line number57 index56 alt2"><code class="lua plain">desiredSteeringAngle=0</code></div>
<div class="line number58 index57 alt1"><code class="lua plain">desiredWheelRotSpeed=0</code></div>
<div class="line number59 index58 alt2"><code class="lua plain">steeringAngleDx=2*</code><code class="lua functions">math.pi</code><code class="lua plain">/180</code></div>
<div class="line number60 index59 alt1"><code class="lua plain">wheelRotSpeedDx=20*</code><code class="lua functions">math.pi</code><code class="lua plain">/180</code></div>
<div class="line number61 index60 alt2"><code class="lua plain">d=0.755 </code><code class="lua comments">-- 2*d=distance between left and right wheels</code></div>
<div class="line number62 index61 alt1"><code class="lua plain">l=2.5772 </code><code class="lua comments">-- l=distance between front and read wheels</code></div>
<div class="line number63 index62 alt2"> </div>
<div class="line number64 index63 alt1"><code class="lua comments">-- Here we execute the regular thread code:</code></div>
<div class="line number65 index64 alt2"><code class="lua plain">res,err=</code><code class="lua functions">xpcall</code><code class="lua plain">(threadFunction,</code><code class="lua keyword">function</code><code class="lua plain">(err) </code><code class="lua keyword">return</code> <code class="lua functions">debug.traceback</code><code class="lua plain">(err) </code><code class="lua keyword">end</code><code class="lua plain">)</code></div>
<div class="line number66 index65 alt1"><code class="lua keyword">if</code> <code class="lua keyword">not</code> <code class="lua plain">res </code><code class="lua keyword">then</code></div>
<div class="line number67 index66 alt2"><code class="lua spaces">    </code><code class="lua plain">simAddStatusbarMessage(</code><code class="lua string">'Lua runtime error: '</code><code class="lua plain">..err)</code></div>
<div class="line number68 index67 alt1"><code class="lua keyword">end</code></div>
<div class="line number69 index68 alt2"> </div>
<div class="line number70 index69 alt1"><code class="lua comments">-- Put some clean-up code here:</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><span><span color="#000000"></span></span>教學影片連結:<a href="https://youtu.be/0W1wmC1tr4A">https://youtu.be/0W1wmC1tr4A</a></p>
<p><span><strong><span color="#000000"><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/0W1wmC1tr4A" width="560"></iframe></span></strong></span></p><h2>Assignment3</h2>
<p><span>Due May 27, 2020 for class 2a and May 28, 2020 for class 2b.</span></p>
<p>According to the reading of Topic 2 and Topic 3, propose a Mechatronic project by using<span> </span><a href="https://www.coppeliarobotics.com/">CoppeliaSim</a><span> </span>or<span> </span><a href="https://cyberbotics.com/">Webots</a><span> </span>and<span> </span><a href="https://www.onshape.com/">Onshape</a>.</p>
<h3>MSModelingAndTFApproaches</h3>
<p><span>原文pdf連結:</span><a href="https://drive.google.com/file/d/1KRb8vX_LB_3hkLwK1z1LOP8wl_StIZOR/view?usp=sharing">MSModelingAndTFApproaches.pdf</a></p>
<h3>MechatronicDesignCases</h3>
<p>40723210提供</p>
<p>原文pdf連結:<a href="https://drive.google.com/file/d/1y0QH6vI8uMymK9JI35EShVFS40Q8uwwq/view?usp=sharing">MechatronicDesignCases.pdf</a></p>
<p>翻譯連結:<a href="https://s40723210.github.io/cd2020/downloads/MechatronicDesignCases%E7%BF%BB%E8%AD%AF.pdf">MechatronicDesignCases翻譯.pdf</a></p>
<h4 class="c5"><span><strong><span class="c13 c20">Ch11 實例探究</span></strong></span></h4>
<p class="c5"><span><img alt="" src="https://docs.google.com/drawings/d/s98Q00RBrIAB_YkelPE9Yqg/image?parent=e/2PACX-1vQYPgCKPYtBO4OMhbZ7QtdHwV1nCsCzUyYKhk5Upox2CZJvWV_-oNY2maYQ76FRIw&amp;rev=1&amp;h=176&amp;w=528&amp;ac=1" title=""/></span></p>
<p class="c5"><span class="c1">11.1 介紹</span></p>
<p class="c5"><span class="c1">在前面的章節中，我們提出了一些概念，並通過學術示例說明了它們的應用，以向讀者展示這些結果如何應用。更具體地說，我們已經了解瞭如何設計機電一體化系統。介紹了成功完成所需機電系統設計所必須遵循的不同步驟。我們已經介紹了在以下設計中必須使用的方法：</span></p>
<p class="c5"><span class="c1">•        機械部分</span></p>
<p class="c5"><span class="c1">•        電子電路</span></p>
<p class="c5"><span class="c1">•        C語言中用於實時執行的程序</span></p>
<p class="c5"><span class="c1">  這些工具已應用於一些實際系統，並提供了更多詳細信息以幫助讀者執行自己的設計。</span></p>
<p class="c5"><span class="c1">  對於控制算法，我們提供的大多數示例都是具有理想模型的學術模型。不幸的是，對於一個實際的系統，我們將擁有的模型只是一個可以在某些特定條件下描述該系統的實現，並且由於某些原因，該模型無法在算法的實時實現過程中按預期方式完美運行。這可能是由於不同的動態動力學可能導致某些頻率的行為改變而引起的。</span></p>
<p class="c5"><span class="c1">  本章的目的是向讀者展示我們如何實時實現前面幾章中針對實際系統開發的理論結果。我們將逐步進行並顯示所有步驟，以使讀者輕鬆閱讀。我們在本章中考慮的案例研究是在前幾章中討論和設計的案例研究。</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c10">11.2        速度 直流電機套件的控制</span></p>
<p class="c5"><span class="c1">作為第一個例子，讓我們考慮驅動機械零件的直流電動機的速度控制。該示例的選擇非常重要，因為大多數係統將使用此類直流電動機。我們將考慮的直流電動機由Maxon公司製造。該電動機非常重要，因為它帶有齒輪箱（比率6：1）和編碼器，該編碼器每轉給出一百個脈衝，我們每轉產生600個脈衝，我們通過使用正交方法將其變為24400個脈衝。每轉。如果在本示例中使用的系統具有更靈活和更多的優勢，則可以在前面介紹的控制算法的實時實現中使用。</span></p>
<p class="c5"><span class="c13">  該電動機的數據表給出了所有重要參數，因此容易獲得該執行器的傳遞函數。在此示例中，我們正在考慮的負載是一個帶有刻度的小磁盤，我們希望在速度上控制它，然後在位置上進行控制。這種設置在</span><span class="c9">圖11.1</span><span class="c13">和11.</span><span class="c9">2</span><span class="c1">中示出。我們正在考慮的圓盤的直徑等於0.06 m、質量等於0.050 Kg。利用這些數據和直流電動機的數據表之一，我們可以獲得磁盤速度和輸入電壓之間的傳遞函數。</span></p>
<p class="c5"><span class="c1">  首先讓我們專注於負載的速度控制。在這種情況下，為了建立該系統的傳遞函數（直流電動機執行器及其負載），我們可以使用數據表，磁盤上的信息以及Boukas[1]中的結果。</span></p>
<p class="c5"><span><img alt="" src="https://lh3.googleusercontent.com/aVu60I_ZdBohnp8B1pWkoOntA5yMWbulu333sToedV5EgPJ9OJPDA9Kb4Jsurnwdynj7YoUb9oQSZZGG5dGt1F37bhO02LziNYFNAjpdwXccA7prb2n48ZgyBtTJk8GLKhh-qck" title=""/></span></p>
<p class="c5"><span class="c9">圖11.1</span><span class="c1"> 直流電動機套件的電子電路</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c1">或繼續進行識別。使用第一種方法，[1]中第2章的結果是:</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/ORjADtBMAPj7hQfrn1aeL4pZIP54DB6SnQOn6I7S1uHRnXp2PSsERt0Gq9CxCsc3wlbxm_oYhJ4oNbOpFWyITYMEgqTTwr9S9H0gfz60A618TTYKvaM_Wpt8B4hQmHaWhakgB6E" title=""/></span></p>
<p class="c5"><span class="c13">和                            <span> </span></span><span class="c22">K</span><span class="c1"> = 48.91         </span><span class="c1">τ = 63.921毫秒</span></p>
<p class="c5"><span class="c1">  為了設計控制器，我們首先應該指定我們希望系統具有的性能。首先，我們需要係統穩定，還需要係統速度在過渡狀態下具有良好的性能，在穩態狀態下具有零誤差，以作為階躍參考。對於瞬態，我們希望負載的穩定時間小於或等於3τ/5的5％，而過衝則小於或等於5％。</span></p>
<p class="c5"><span class="c1">  為了完成適當控制器的設計，我們既可以連續進行設計，然後獲得應在軟件部分進行編程的算法，也可以直接在離散時間內進行所有設計。在本示例的其餘部分中，我們將選擇第二種方法。</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/qyVbpll2Wdh2N_jSPChOpK67dr7pDGod8-NNswMTQmPn719YwQj06at9arqYAOvEh9P3wcmB8u9oUwBJ5UTgIujFQb8lAbHvYX4RbjyYUoe7aEPCCiEXYf-vmFfmKa_sqGADvMc" title=""/></span></p>
<p class="c5"><span class="c9">圖11.2</span><span class="c1"> 實時實施設置</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c1">  根據系統傳遞函數的表達式以及所需的性能，結果表明我們至少需要一個比例積分器（PI）控制器。該控制器的傳遞函數由下式給出：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/K5F3MONJ8LZV4XYk-Oj54UNZLelJl8TKGipQjSTjBYCkGVN5wbeOyQ6S6CjmbiY0jYh12kcL1ys7Zvo28iEPKiWu50vQkbjwM0-fi015wVC50sRkqAhL8tD39oEO5UtBw1Hj4mE" title=""/></span></p>
<p class="c5"><span class="c1">其中KP和KI是要確定的結果，以迫使負載具有我們施加的性能。</span></p>
<p class="c5"><span class="c1">  使用零序持有者和Z-transform表，我們得到：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/_NTFjRbKP7fhgpln3z0_anJ1dm3D999RnBrY-mb0uNgRB7m6iLJ-IKE1F8uTT5JEkR9unGUZ2kIOILf9naB5EziIorgegPsc0XNK_7e_eY5mur8VfiS9wq5daRJhpvoerPsQFuk" title=""/></span></p>
<p class="c5"><span class="c1">  對於控制器，使用梯形離散化，我們得到：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/g_no0qPZFf2WSlmONwz--VLVkQ1XKApT2BVKMBAR-ZVa9TiJgik2Tniyr9PLupepA9fqwHAp4JhnNZ_bBxUvNjfg312aYScK6eJN5pqpx9w24C1hAK64G0Co3QqwaaDHtPVm5MQ" title=""/></span></p>
<p class="c5"><span class="c1">  將分子和分母除以z並回到時間，我們得到：</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/fWhw0QtNlB-MQ6_qe8yfMzGDjSA3vW88RTGV7oeLK7knn_erLYWWOSr5MkqPbyvtiwrTL0-G8Z8Z7AKKZpRakuNcwjpwX5yqUQOIwcztLZ9dPg26gj6DIpHJIIyFzS8r0kmd9Ho" title=""/></span></p>
<p class="c5"><span class="c1">  結合執行器及其負載和控制器之一的傳遞函數，我們得到以下閉環傳遞函數：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/DjC5aE-99wWoapmbnQP7T4ezMP1PUwVrNFBsPRuh5HlD8mdEn5M2KAaCFgYFWoiZ62zGdIZTMGIEdiiIVFcx1avXtdS9ZrXKA7eu59RNtGz6yFQXyh7QisfmRCK4KKlKNsz0o3w" title=""/></span></p>
<p class="c5"><span class="c1">  現在使用期望的性能，很容易得出結論，主導根點是:</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/iHsTY8W-0bX4WS1-AEeoPvsyhLiAw-wGFkNnog2TU3E-bx-zxHsw5ifr93JnjP_ECi94vwJ9pZSxFgJ7uVbUctS0WJMu2ne9Z7HaSgz7xQ0PTlqkkFY1cyb4qhUz54mq_Svr2BE" title=""/></span></p>
<p class="c5"><span class="c1">其中ζ和ωn分別代表我們系統控制閉環的阻尼比和固有頻率。</span></p>
<p class="c5"><span class="c1">  根據控制理論（請參見Boukas [1]），眾所周知，過衝d％和5％的建立時間ts由下式給出：</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/IzAdCcN5XW1G2wMwkfdqCp4jxi2ka_Ye4CKh-4x0Tu_cafv3JIdIv7z51dytMLB8zr2d5lxo-6djWitZxkhggzHslmoi_VE27ZbSr0dzR2PCQ5M6WMa2L3_RjAQ2TEh8ijWdKbg" title=""/></span></p>
<p class="c5"><span class="c1">使用我們的性能和這些表示，我們得出以下結論:</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/0JcBSPi51xfq-nR32UiptAl9ghnFnxx93ZbshoH8DFPAQY-8UZno2TV3voIeWgO766faT6EAAMVvxqkyhrUhWskSKLx3JEhiRTsJYzYveXXQcA4gihWhjDPJgMKjTJRY0Wx8HFc" title=""/></span></p>
<p class="c5"><span class="c1">它具有以下主要優勢：</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/MgrZfzhtkMLCyVPMukSrvSOq0i1zP1WCs5x7bGiO-zg6WyMs9Wp0s_NUabfZA13g8qgpV2CE3rdTTUbv_RKomvgj31kz2-jQS0whthkAkdCNSkDqeyzxaVGhBEPCfKSxEyCriAo" title=""/></span></p>
<p class="c5"><span class="c13">且T =τ/10= 0.0064的變換，我們得到以下結果</span><span class="c1">域中的主要根點：</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/IsrY1i2QbMjhlACfNWpucDZOpwvt1hYT1tLU85jTz3xjjlzwWfBoli-5UGbwflkceZE4zPNyHVnQ0XFDYchpGzEjS6IH0BMvCFNGkzlrmmjy2A4bYiENj491-wG1A8yhimxTark" title=""/></span></p>
<p class="c5"><span class="c1">  對於這些根點，我們具有以下特徵方程式：</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/xAn8nbXksfjsEU_D8FGOE8FyxINyIdVlvi7YEsRxPeNY3Ktp6rzqNWgj54Mf2CYWtO1ZI9zlgQK421J1UmDUCqStO_pkudLi-h7XFECV0feyJYA6tRER5J459kdrljUaMLcgsYY" title=""/></span></p>
<p class="c5"><span class="c1">  現在使用根點放置技術，我們得到：</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/HpZoEwATHmLCF5fC3zsR9gLrZ1oP0l4NaUOa9YTdGxjLCWHqJlJXxK32gZMXfnWCX2CJYgO-XgwBWG8dgy_5pcLbGQWuwIWQiyL5fyUdP2P6Jey1NmZ_wyE1u5leV7G1WJli72o" title=""/></span></p>
<p class="c5"><span class="c1">這意味著：</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/CYE8XSPBmREHj5TlLf5vpOSETA5IMbEEzX9xoO9NNBuRUWf66j0K4TnnIWb7Be9XQwsa7tCSNyTnqjICvJAQ5GBp2_ObNQo1iUDf3tRa85OZQOawidpw87U5Iuxb1MoFrA9T8hk" title=""/></span></p>
<p class="c5"><span class="c1">使用K，T和τ的值，我們得到增益KP和KI的以下表達式：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/q0CJAFTbhbDeobaS9m33Cn3JOAtOPKHkBYYhdjwayGed2qALjxbgFkmGEknbSsBG9Pw1bJStp9T56Uf2jtHvIG_DuSYM0rkhs-71baEiouL2hQLPQ9TsjQBWluEVtwIT8RV2jss" title=""/></span></p>
<p class="c5"><span class="c9">備註11.2.1<span> </span></span><span class="c1">在這種情況下，必須謹慎，因為我們不在乎傳遞函數零的位置，因此在實現此控制器時可能會有些意外。顯然，我們將獲得的性能（穩定時間和過衝）將取決於零的位置。有關此問題的更多詳細信息，請向讀者介紹Boukas[1]。</span></p>
<p class="c5"><span class="c1">  至現在實施該PI控制算法，並確保達到理想的性能，我們將使用Microship1的微控制器。這種選擇是由於我們在此類微控制器方面的經驗所致。讀者可以記住，其他製造商的任何其他微控制器都可以做些小改動。在本示例中，我們將使用Microhip的單片機dsPIC30F4011。</span></p>
<p class="c5"><span class="c1">  我們實現的代碼使用C語言編寫。採用這種語言是因為其簡單性。該實現具有以下結構：</span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">//
// Put here the include
//

#include "p30F4011.h"	// proc specific header

//
// Define a struct
//
typedef struct {
// PI Gains
float K_P; // Propotional gain
float K_I; // Integral gain
//
// PI Constants
//
float Const1_pid; // KP + T KI/2
float Const2_pid; // -KP + T KI/2
float Reference; // speed reference

//
// System variables
//
float y_k; // y_m[k] -&gt; measured output at time k
float u_k; // u[k] -&gt; output at time k
float e_k; // e[k] -&gt; error at time k

//
// System past variables
//
float u_prec; // u[k-1] -&gt; output at time k-1
float e_prec; // e[k-1] -&gt; error at time k-1

}PIStruct;

PIStruct thePI;

thePI.Const1= thePI.K_P+T*thePI.K_I/2;
thePI.Const2=-thePI.K_P+T*thePI.K_I/2;
thePI.Reference=600;

//
// Functions
//
float ReadSpeed(void);

float ComputeControl(void);

float SendControl(void);

//
// Interrupt program here using Timer 1 (overflow of counter Timer 1)
//
void __ISR _T1Interrupt(void) // interrupt routine code
{
// Interrupt Service Routine code goes here
float Position_error;

//
// Read speed
//
thePI.y_m=ReadSpeed();

thePI.e_k= thePI.Reference-thePI.y_m;

//
// Compute the control
//
ComputeContrl();

//
// Send control
//
SendControl();

IFS0bits.T1IF=0; // Disable the interrupt
}
int main ( void ) // start of main application code
{
// Application code goes here
int i;

// Initialize the variables Reference and ThePID.y_m (it can be read
from inputs) Reference = 0x8000; // Hexadecimal number
(0b... Binary number) ThePID = 0x8000;

// Initialize the registers
TRISC=0x9fff; // RC13 and RC14 (pins 15 and 16) are configured as outputs
IEC0bits.T1IE=1; // Enable the interrupt on Timer 1

// Indefinite loop
while (1)
{
}
return 0
}

% ReadSpeed function
int ReadSpeed (void)
{
}

% ComputeControl function
int ComputeControl (void)
{
thePI.u_k=thePI.u_prec+thePI.Const1*thePI.e_k+thePI.Const2*thePI.e_prec;
}

% SendControl function
int Send Control (void)
{
sendControl()

//
// Update past data
//
thePI.u_prec=thePI.u_k;
ThePI.e_prec=thePI.e_k;
}
</pre>
<p class="c5 c18"><span class="c1"></span></p>
<p class="c5"><span class="c1">  從該結構可以看出，首先我們注意到系統將進入循環，並在每次中斷時調用函數：</span></p>
<p class="c5"><span class="c1">•        ReadSpeed;</span></p>
<p class="c5"><span class="c1">•        ComputeControl;</span></p>
<p class="c5"><span class="c1">•        SendControl;</span></p>
<p class="c5"><span class="c1">並採取適當的措施。</span></p>
<p class="c5"><span class="c1">  ReadSpeed函數在每個採樣時間返回加載速度，該速度將由ComputeControl函數使用。SendControl功能通過L293D芯片將適當的電壓發送到執行器。</span></p>
<p class="c5"><span class="c1">  使用編譯器HighTec C獲取十六進制代碼，並使用PicKit-2將文件上傳到微控制器的內存中。 有關如何獲取十六進制代碼的更多詳細信息，我們邀請讀者閱讀編譯器HighTec C或Microchip的編譯器C30的手冊。</span></p>
<p class="c5"><span class="c1">  在這種情況下，國家方法是微不足道的，我們將不發展它。</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c10">11.3        直流電機套件的位置控制</span></p>
<p class="c5"><span class="c1">讓我們專注於負載位置控制。遵循與上一節中開發的負載速度控制類似的步驟，我們首先需要選擇我們希望系統具有的理想性能。進行以下展示：</span></p>
<p class="c5"><span class="c1">•        系統穩定在閉環狀態；</span></p>
<p class="c5"><span class="c1">•        建立時間ts為2％等於我們可以擁有的最佳時間</span></p>
<p class="c5"><span class="c1">•        超調等於5％</span></p>
<p class="c5"><span class="c1">•        階躍函數作為輸入的穩態等於零</span></p>
<p class="c5"><span class="c1">  使用性能和傳遞函數，很容易得出結論，比例控制器KP足以滿足這些性能。</span></p>
<p class="c5"><span class="c1">  在此示例中，我們將使用連續時間方法進行控制器的設計。在上一章的基礎         上，我們的系統模型如下：</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/xzIi4P4aR5-thvWVnB8n71egZu_4Io64ECyGU3LbcsB7KniLdgPb4gdvfPbeh-p-EJ1-tjFe4AxhtIGWNz2LNOAb4MLobkOK_iQfICNqP3x5ZE7SoQq3wul-u6xS-exdBuQBOCc" title=""/></span></p>
<p class="c5"><span class="c1">其中K和τ取與速度控制相同的值。</span></p>
<p class="c5"><span class="c1">  讓傳輸控制器由以下方式給出：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/9ZULqOXhCnAS0DRGvLRgoXSbVC2gxkCH835sBCeYH5--Fn3BCXbu2GqGYN78-dKZlwt9gNzQ2WICceGknwZx3qx-Z1V-V4Ad2BzVe-tFg4WXvlakJosktaBIfVGY5lo_jnR1V9M" title=""/></span></p>
<p class="c5"><span class="c1">  使用這些表達式，閉環傳遞函數由下式給出：</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/zewc6NQhxSLZIWxpjOasg7DAJuWWVIMBtjDg5s5h6YJVsSHe_pXCJIcQuJVBjq2MdAGJNN7dt1izuTJmmG6Am33xhQYYYLgaMZ2RTFAcZvlQxQcupmzG02WFzpREUMFp5HeG3U4" title=""/></span></p>
<p class="c5"><span class="c1">  由於系統類型為1，因此使用比例控制器輸入的階躍函數的誤差等於零。</span></p>
<p class="c5"><span class="c1">  根據規範，以下複雜的兩根：</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/02TtlJt_kCMhVo3Z5yp-saPGNo_PpyqXxYnGMxTLvq7EJ9t8wXJQEhbMUEtfoSbAvJD3Xlugg4ECxs7Jmqya_3SYWZxyjQZ9By1geOyiIor9y_JLVCM7Ru0ZRtsR_wTc5MvJ9l0" title=""/></span></p>
<p class="c5"><span class="c1">將完成這項工作，相應的特徵方程式如下：</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/jrKAYcKYK3rO2DVJMQldrn5JgEhrcktqduFE6lPFiGEf34X4PzrrQMGuoY7fttRMvlNBqmAJ0vmR_6F2wtRxJkaJqHGDwhqXdokLXjvAkfXpmHyqI5dHUF2-ixhuOUQEL0x0psY" title=""/></span></p>
<p class="c5"><span class="c1">  與閉環系統之一等效，我們得到：</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/4qLnkpjvs8Ir6kjaoJWzUfIQ0hLPt6rfCsVihD16B4f7pdtFxlbnIkjcheSVu8WVkorLNBdO-qzvJ6t0JVW0ry0_RuH84LyB12zBfrfTixPzpldEy6h5xIYfAi_sGCkCYwTIDqc" title=""/></span></p>
<p class="c5"><span class="c1">  為了確定最佳穩定時間ts為2％，請注意，我們有：</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/F0b7ebk4hOjx63jkDHzoYrtC81oOchEvTN927ouVEKnYDhher-xUu24JFVeRlpnKj0Y9ap1HwQmAgE7WGv3ifF_l4-jv7oiazUV0KuGx2j4mL8H2O0ubEoIg4awqbry9Ou4KAE0" title=""/></span></p>
<p class="c5"><span class="c1">  現在使用事實：</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/kPWRWXa1kIBy-5AzAwVmaVerr_35X1R49gzG3X1bFIfcPzZjWAlzNBsAllGmsRH3zxr3niZhNt7gu0IXIm3fyRzfrP1XzG5JpESjlcwoMMNitwFG_ThOAfYOqUUIqwEcbExMd84" title=""/></span></p>
<p class="c5"><span class="c1">我們獲得：</span></p>
<p class="c3"></p>
<p class="c5"><span class="c13">  因此，使用此控制器可以在2%處獲得的最佳建立時間是系統恆定時間的8倍。小於可獲得的任何值。實際上，如果我們在改變KP時關注閉環系統的根源，這是微不足道的。這由</span><span class="c9">圖11.3</span><span class="c1">給出。為了將控制器的增益固定為所需的根點s1,2 = 7.5 j，我們使用該圖並選擇一個ζ= 0.707。得出KP = 0.1471。</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/-OAeKCdILZzKtjB_87fwqOIEgFdK2SL6ZpRsS3hBkAxgr8O6sqEcDqecms5ctg6t79f77sX2koSmufJgKy3J99FqZ32Bl58c4Xyt-5r_-QMS6V4OHEiF_vv_Dmo-3NUumLi9ZII" title=""/></span></p>
<p class="c3"><span class="c9">圖11.3</span><span class="c1"> 帶比例控制器的直流電動機的根軌跡</span></p>
<p class="c5"><span class="c13">  使用該控制器，幅度等於30度的階躍函數的時間響應由</span><span class="c9">圖11.4</span><span class="c1">表示，從中我們可以得出結論，所設計的控制器以2%的穩定時間等於0.5115 s滿足了所有期望的性能。但是，如果我們實現該控制器，則實際情況將與仿真有所不同，因為齒輪箱的齒隙並未包含在所使用的模型中，因此實時結果將有所不同，誤差永遠不會為零。為了克服這個問題，我們可以使用比例和微分控制器，它可以在2%處提供更好的建立時間。讓該控制器的傳遞函數由下式給出：</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/x4NoNamIzURlsaa3QV9cwFfT4fDoOegL8GxPHNY4sR7u4nmk4sRsD9sIc07osnKILQiuqB7ctqilaWlkcXwUP3Q7o9dupJJIFWQ_21lpMGc_hCxyQcqpoy0CdX5NNljlBu8widI" title=""/></span></p>
<p class="c5"><span class="c1">其中KP和KD是要確定的增益。</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c9">備註11.3.1</span><span class="c1"> 重要的是要注意，比例和微分控制器的使用將在閉環傳遞中引入零，如果放置得當，則可以縮短建立時間。根據其位置，過沖和建立時間將是受到影響。有關此問題的更多詳細信息，請參閱[1]。</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/fgUdKw3Trwo-BrN0kxOf3E7AyBkoiyRq0mhx4CKcybc9bi5WlBb-c1KNFd_EJIP4Nq1lPHn--KaxXotCT8cI-Mj5a4ZqA6tCm37LEKX7ZhKiBnrwxgMEBAym5wcq3EhNZ6Mf3qU" title=""/></span></p>
<p class="c3"><span class="c9">圖11.4</span><span class="c1"> 幅度為30度的階躍函數的時間響應</span></p>
<p class="c3 c7"><span class="c1"></span></p>
<p class="c5"><span class="c1">使用該控制器，閉環傳遞函數由下式給出:</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/eGbeqrkQzixC2nWGCcZ6AoDYWokVCG8UwpAlMnD7eZUx24KtRqrwfwGR_yUXm2DcMlIV8_w6RE4U13CeacFL-cho2jIV2pvl772Axo4X5P0OKl0UU4Y3yP7hJNWnvah7sJd1Q9w" title=""/></span></p>
<p class="c5"><span class="c1">  和以前一樣，控制器的設計使用了兩個複雜的根點。如果將兩個特徵方程式相等，則得到：</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/KT0XUMqWECWFtzJKE0CRGA55Bq7c-Updp7v0UVfT54N-ifBfXa1TKENPTrqRuo7TiPxp4kdTIyY6UobgJddCAbiR5E51FnMpgYTN4lsTTc9g8J0oHYqSE7X-P0kpFHzl0a9Lh-I" title=""/></span></p>
<p class="c5"><span class="c1">  在這種情況下，我們有兩個未知變量KP和KD以及兩個唯一確定增益的代數方程。它們的表達式如下：</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/bmo8ynBcO1OT-7WqINRec3yURYU8AFnh-SwyenE7EHM8yQTihjkKqRqxX-cLgv7RQbutNwIiz0R95EG2Mjd4bSCQcHxFlS7GTgsZcfA3on6Iw4XjETpLLF31SiLZqcEqrQhzGqM" title=""/></span></p>
<p class="c5"><span class="c1">  現在使用期望的性能，我們得出與之前類似的結論，即等於等於30度幅值階躍函數的輸入的穩態誤差等於零，並且與過衝等於5%的阻尼比ζ等於0.707。我們可以將其固定為系統時間常數的一部分的穩定時間ts在2%處給出：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/VvZoq7JyTibTW0A4-bx3_KoaLTVTIiiUuL21Suhau9belPMl8rbOxigkBjCB9zvwn54fUpVP2LpNkUCxlDCLggVyKd0R77K8IttGw1rRGdkwWjtk9JPC_7ShoqiKPhfLzwTovm4" title=""/></span></p>
<p class="c5"><span class="c1">  現在，如果將穩定時間固定為3τ，我們將得到：</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/ZNeU6Peg_MhT7ZkaLfn58pf4eONf2fQjfu2CS6LRRavwsUG-7CSpMLONyWEaNWz3d5eIYpj_HLwuWdefs_i_t_oeqcQGFzZgF5oEBjpJe-SoraTwH0SXxNIJph13Uv7kjXI5VMw" title=""/></span></p>
<p class="c5"><span class="c1">  使用這些值，我們可以得到以下控制器增益值：</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/J45Tv1P_9NH94sQPMl4T_lfGejxfxNpvN5G_tCBeSVtKx-uL6d4dSETcpXu6aCaXeOVdbimaDYNGPS1_KTQiHacKoiYkVvGYWXb36Hzv9okwS-D3OYEa0afPukgAOErdXmmVPLU" title=""/></span></p>
<p class="c5"><span class="c1">它給出了以下複雜的兩根：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/zvgn2Zvpbz9NphMnLhO4BT_YfBENE44HgE5gg3VBSj1DgI1NnHWOgVb-qjoPH8VQyP0bGv2NVQTB4b3AyQgucQErOMslK9euFCqj1QxvbmyZu3msGkpgKudECdjJ156tpUsQSHI" title=""/></span></p>
<p class="c5"><span class="c1">零為：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/sT8twLdIZyyv352_hTb2UddPerDf2uc-J4_1wR3zkti3A-za5z6llKnpbPOmGPPBzeH0mF2IwQZgW2z55eG6cuaKL_Jg93a5Qf5d7ARoXhNLAMuCBT88lO5caHVAHJyV3-PHTY0" title=""/></span></p>
<p class="c5"><span class="c13">  使用該控制器，幅度等於30度的輸入的時間響應如</span><span class="c9">圖11.5</span><span class="c1">所示。從該圖可以看出，過沖和建立時間少於使用比例控制器獲得的過沖和建立時間。</span></p>
<p class="c5"><span class="c13">  至實施比例或比例和微分控制器，我們需要得到控制律的遞推方程。為此，我們需要使用前面介紹的不同方法來離散化控制器的傳遞函數。讓我們使用梯形方法，該方法包括將s替換為</span><span class="c1">。這給出：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/mzcpXz6P0MDpYswgSGWigfLtd75KD4bGmvKT_GWuGvH_CNJDgbl71yzoMJe4ECJIm8Ni05Zvo9EdVapK8YuuVkdr_kDaFMGtw3Bm_MNgos3YzWf3npv3jSqrJ4b1eYpBaHb92nA" title=""/></span></p>
<p class="c5"><span class="c1">  如果我們通過控制分別表示u（k）和e（k）以及瞬時kT處參考與輸出之間的誤差，我們將得到以下表達式：</span></p>
<ol class="c19 lst-kix_list_2-0 start" start="1">
<li class="c5 c32"><span class="c1">對於比例</span></li>
</ol>
<p class="c3 c23"><span><img alt="" src="https://lh3.googleusercontent.com/Jci-oGribC1QTRvNrVGwTXv66i0RMoILwggOVWO1z1xgKf6G_pcHCU1Ou7MZN2rAWgoFrrYP3_LjkOzHfmhY2QAqLFajbwK3Q0Ts5WGgV5Y0N8Hlm-XrPB6C0TMEiMvDZ4AohjE" title=""/></span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/Fd6IliWL3zhhWd6nxW1LPKSdjkPmrC6UUUZtsSl6H6gqPtG3URlrrehWByJln0viCJTNWwd1jrKgjE2c4B9XHH192r-CtAg_zUOAQnvjah4G-XtmlP4-uk758F-YsUQnGRpex8k" title=""/></span></p>
<p class="c3"><span class="c9">圖11.5</span><span class="c1"> 幅度為30度的階躍函數的時間響應</span></p>
<p class="c3 c7"><span class="c1"></span></p>
<ol class="c19 lst-kix_list_2-0" start="2">
<li class="c5 c32"><span class="c1">用於比例和微分控制器</span></li>
</ol>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/aLhnwW6-AjSpR3o4zqNNO--np5K4_mBJJW9SmC7hCbI6hVYBGheI7mQvpJczW9s2M2eqNd9X6uiNBIE6GymJAVlpXGvXpXFeiCn20cV9gGYjlULeEa5zMTcANUcUjGwFezTdSeQ" title=""/></span></p>
<p class="c3"><span class="c1">  實現是該控制器使用相同的功能，但有一些小的更改。列出相應的功能是：  </span></p>
<p class="c5 c8"><span class="c1"></span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Main program %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

main
% Data

% Variables

% While loop
while (1)
do
ReadSpeed;
ComputeControl;
SendControl;
end;
% ReadSpeed function

% ComputeControl function

% SendControl function</pre>
<p class="c5"><span class="c1">  現在讓我們使用此示例的狀態空間表示，並設計一個狀態反饋控制器，以保證所需的性能。對於這種情況，我們將首先假定完全訪問狀態，其次通過假設僅可以訪問該職位來放寬此假設。像我們之前所做的那樣，我們可以連續進行，也可以不連續進行。</span></p>
<p class="c5"><span class="c1">  先前我們建立了該系統的狀態空間描述，其描述為：</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/jYovX7QBU7LTCV7jidK57a8E0mQ2n0X7l69bzDWFo-Zu-o7VrVRWjWZw7VAfmuQknEQOH4gOd-UNrFT3qTbrvsvU1H__B5DoyDl1S_G4VHlre6mPsdxTcG5h-SIpAYyXVK0a364" title=""/></span></p>
<p class="c5"><span><img alt="" src="https://lh3.googleusercontent.com/-7OcbDbVbKzW7Y6w6rFcTmVAtKaSAlflhPLfscizbzJjSmXjr_IsWz9uxk1FdpR_5z16-61dyxanPeD2btS0_9i2ONMG8CjjcpVGyPhW0efvcOAZpoGOiRRQDa69Lh7to5y3vY8" title=""/></span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/z90J8x--hL5T6-cOH1TWRDV8V5qc92R9uwHg-fEhldlDdWvikBKxYtc9Mdtf5Ss9u6BYa-Q1I65U6nV6oHjAUl3zx65H0UdjRraKzYQuDbX4PEyULrmATKYituJSWRWo3951A4Y" title=""/></span></p>
<p class="c5"><span class="c1">  通過均衡這兩個方程式，我們可以得到以下結果：</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/EEf7lcHWzksCjyWyFptI843DRTadMkhH8176H5Zvp_muYvsLsY90elsVJEYv-ay0iKBAZNXTNoF_m0ZOTtOTaWzLlEfgI_7HX3TDYVCWq24ilYI8V6TiSFXc32n3oHkGVm18DVU" title=""/></span></p>
<p class="c5"><span class="c1">  使用該控制器，幅度等於30度的輸入的時間響應如圖11.6所示。從該圖可以看出，超調和建立時間就是我們想要的。重要的是要注意穩態狀態下錯誤的存在。如果在循環中添加一個積分動作，則可以消除此錯誤。有關此的更多詳細信息，請向讀者介紹[1]。</span></p>
<p class="c5"><span class="c1">  對於第二種情況，由於我們無法訪問負載速度，因此我們可以從位置計算負載速度，也可以使用觀察者來估計系統狀態。如前所述，我們用於觀察者設計的根點應該比控制器設計中使用的根點更快。</span></p>
<p class="c5"><span class="c1">  擇以下根點（s1,2，為控制器設計中所用實數的四倍）：</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/UwOxykWqXZ6OoqiuJxi_iX1R0Mmpk_nDpBtDV3Iql7o08wQp3g2-mJvC48xeFDIXB3h6zkqNz-FosJntJKDhpJrDNlETjScSVi468N_zSPg1DI_QeH4AEht2QZkWvHQZgl9z4vI" title=""/></span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/lJ22uUmtU_yA9fQii8DUgWg4zWs459K5S8FOQryYF5_4wbvNdDi655zzvEBgVSdvtfyDCzIHHkSQohDfpu-dPjMmaUOw6K898YT8q6_xzDDc0ylvepmHC5cMAC4f1qNl0jVQe3E" title=""/></span></p>
<p class="c3"><span class="c9">圖11.6</span><span class="c1"> 幅度為30度的階躍函數的時間響應</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c1">我們為觀察者帶來以下結果：</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/T1hu-jvAwOyKlXyrX18gbOnlBHezqZziGmM0o2xCfzjOXgg_b-GK74ssCsyBTYGrdfMvh2Jcoj1U1rQUZtRZlYBZBVFUCoiTGqLWPXaRRi9WSivvXG6iAndCRmGXHjhB9Ijts6s" title=""/></span></p>
<p class="c5"><span class="c1">  控制器的增益與對狀態向量的完全訪問情況相同。</span></p>
<p class="c5"><span class="c1">  在下面的Matlab中，我們同時提供控制器和觀察者的設計，並進行仿真，以顯示系統和觀察者的狀態相對於時間的行為。</span></p>
<p class="c5 c6"><span class="c1">clear all</span></p>
<p class="c5"><span class="c1">%data</span></p>
<p class="c5"><span class="c1">tau=0.064</span></p>
<p class="c5"><span class="c1">k=48.9</span></p>
<p class="c5"><span class="c1">A = [0 1;0 -1/tau];</span></p>
<p class="c5"><span class="c1">B = [0 ; k/tau];</span></p>
<p class="c5"><span class="c1">C = [1 0];</span></p>
<p class="c5"><span class="c1">D = 0;</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c1">% controller design</span></p>
<p class="c5"><span class="c1">K = acker(A,B,[-3+3*j -3-3*j]);</span></p>
<p class="c5"><span class="c1">L = acker(A’,C’,[-12+3*j -12-3*j])’;</span></p>
<p class="c5"><span class="c1">% Simualation data</span></p>
<p class="c5"><span class="c1">Ts = 0.01;</span></p>
<p class="c5"><span class="c1">x0 = [1 ; 1];</span></p>
<p class="c5"><span class="c1">z0 = [1.1 ; 0.9];</span></p>
<p class="c5"><span class="c1">Tf = 2; %final time</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c1">%augmented system</span></p>
<p class="c5"><span class="c1">Ah = [A -B*K;</span></p>
<p class="c5"><span class="c1">L*C A-B*K-L*C];</span></p>
<p class="c5"><span class="c1">Bh = zeros(size(Ah,1),1);</span></p>
<p class="c5"><span class="c1">Ch = [C D*K];</span></p>
<p class="c5"><span class="c1">Dh = zeros(size(Ch,1),1);</span></p>
<p class="c5"><span class="c1">xh0 = [x0 ; z0];</span></p>
<p class="c5"><span class="c1">t=0:Ts:Tf;</span></p>
<p class="c5"><span class="c1">u = zeros(size(t));</span></p>
<p class="c5"><span class="c1">m = ss(Ah,Bh,Ch,Dh);</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c1">%simulation</span></p>
<p class="c5"><span class="c1">[y,t,x] = lsim(m,u,t,xh0);</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c1">%plotting</span></p>
<p class="c5"><span class="c1">figure;</span></p>
<p class="c5"><span class="c1">plot(t,y);</span></p>
<p class="c5"><span class="c1">title(’Output’);</span></p>
<p class="c5"><span class="c1">xlabel(’Time in sec’)</span></p>
<p class="c5"><span class="c1">ylabel(’Output’)</span></p>
<p class="c5"><span class="c1">grid</span></p>
<p class="c5"><span class="c1">figure;</span></p>
<p class="c5"><span class="c1">plot(t,x(:,1:size(A,1)));</span></p>
<p class="c5"><span class="c1">title(’States of the system’);</span></p>
<p class="c5"><span class="c1">xlabel(’Time in sec’)</span></p>
<p class="c5"><span class="c1">ylabel(’System states’)</span></p>
<p class="c5"><span class="c1">grid</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c1">figure;</span></p>
<p class="c5"><span class="c1">plot(t,x(:,size(A,1)+1:end));</span></p>
<p class="c5"><span class="c1">title(’states of the observer’);</span></p>
<p class="c5"><span class="c1">xlabel(’Time in sec’)</span></p>
<p class="c5"><span class="c1">ylabel(’Observer states’)</span></p>
<p class="c5"><span class="c1">grid</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c9">  圖11.7與11.9<span> </span></span><span class="c1">給出了輸出、系統狀態和觀察者狀態的說明。</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/wZz-5ZLprrq90gNG1UEvE18QWjHWPsAujGEj9Vr2Q2rgtc3U4BvnXFE4ZsHVvIuFHZ9_EYMq0BsEF7gPnwAsVAe2OcFV1sxFTr-a5jlCb-yV3vPycOcDsazkq-dQ9iIS6cJwWrc" title=""/></span></p>
<p class="c3"><span class="c9">圖11.7</span><span class="c1"> 輸出與時間</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c1">  我們還可以使用線性二次調節器設計狀態反饋控制器。實際上，如果我們為成本函數選擇以下矩陣：</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/r7EI3pgs1L5wZfg5u-H2NGvL9XBMerGg7SaMK51wTCXqgYBKvpllFhte_8h5YpVd-F89dAPMOiMBesyY4AVzc-yFDc-apPR_YCKCAp8vjsNStaMd64aH84Ux11VDdRH13Ficzq8" title=""/></span></p>
<p class="c5"><span class="c9">備註11.3.2</span><span class="c1"> 通常，對於成本函數的矩陣的選擇沒有魔術規則。但是通常，例如，我們對控件使用較高的值將迫使控件採用較小的值，並可能防止飽和。</span></p>
<p class="c5"><span class="c1">  使用這些矩陣和Matlab函數lqr，我們得到：</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/9GWVLwzLqfrPLRe0v783mtUIr4BnTm7QpbOIgVyEd3gKNNoLh5ZMGsFdDLBMfT4xWGfX8V4VhKkjhx2kwko_dRVKGC15fH9m68MtX13Cn824r9PQCpz0LenJ_SmuSK8JJSyhxdo" title=""/></span></p>
<p class="c5"><span class="c1">  我們也可以使用魯棒控制部分的結果設計狀態反饋控制器。由於系統沒有不確定性，也沒有外部干擾，所以我們可以為名義動態設計一個狀態反饋控制器。使用系統數據和Maltlab，我們得到：</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/FkLgMYieAZ8VToykD8ISqXToiXepDmjOmHhb2duRkkTDr5HUmh4wgEDPzh_amm7ra-KfLUygV27dVJ85BNdP_ihTGanHWeGN2DdF482Jk4pG-nEmFuokkWUwTaeGCXhr6PVmi6A" title=""/></span><span><img alt="" src="https://lh5.googleusercontent.com/j3lTvwA6aqZU9IYSWHdW5J6d5vm67zTfF5TFGt4x7mnmqZYB3fORyCVsL9eMR9X-OAKsfALFljgycJtnnIhePvOmXywqF33Uto2SnwCILpDwc_wldLsq7Hf15jM7ilTa7JRuMZA" title=""/></span></p>
<p class="c3"><span class="c9">圖11.8</span><span class="c1"> 系統狀態與時間</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c1">  給出了相應的控制器增益:</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/59ttw3Z8aOnt_yjpjcboCNcfJv1k_LHigeLNg0X-yu84Fi6QphlqUmK78vBw63u_ctVrXhr4dszZAqpwiCw-vOlmnnogfp0lYXqAtwz7vJAUjf2YA9T-q5t5K6G8xoy9rSKfH6w" title=""/></span></p>
<p class="c5"><span class="c9">備註11.3.3</span><span class="c1"> 由於我們有直流電動機套件的連續時間模型，因此我們用它來設計控制器增益。在這種情況下，我們解決了以下LMI：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/VorJBtpu30sRDmMxTksaWcSvZWeQ4QVmFRSLHPhd7E03WhpglQ5x8Vg9Qk2Xr7wI3FOKVXT-PQiGXVUJIhUmKtPPAMuzUbeFoVAhMnfCFtgP4TWGbQ3x6s3DwAmZlArPHiDXNzY" title=""/></span></p>
<p class="c5"><span class="c13">  增益K由下式得出：K = YX</span><span class="c28">-1</span><span class="c1">。</span></p>
<p class="c5"><span class="c1">  有關連續時間情況的更多詳細信息，請向讀者介紹Boukas [2]及其中的參考文獻。</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c10">11.4        平衡機器人控制</span></p>
<p class="c5"><span class="c1">從控制的角度來看，平衡機器人是一個具有挑戰性的系統，因為它是一個不穩定的開環系統。該系統吸引了許多研究人員，為此已經提出了許多設計方案。在這裡，我們將介紹</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/QfYZq_Z-sO9ec8fcy0w9_WRpSsSiujVNESZUk0n2XQav6r385fxt4BwUag6_At_fB6sLgAsgLeVJZtL1cp9095RqtZkAhd8lTox-5TIZgfYltgqUwJj9ALISMoSphrEn3jCmgSM" title=""/></span></p>
<p class="c3"><span class="c9">圖11.9<span> </span></span><span class="c1">觀察者狀態與時間</span></p>
<p class="c5"><span class="c9">  圖11.10與11.11<span> </span></span><span class="c1">給出了機器人的概念。它是為研究目的而開發的，目的是使機電一體化的學生能夠實現他們的控制算法並熟悉複雜的系統。該機器人有兩個獨立的輪子，每個輪子都由一個直流電動機通過一個傳動比為1：6的齒輪驅動。每個電機都有一個編碼器來測量軸的速度。這兩個電機連接到機器人的主體。其他傳感器（如加速度計和陀螺儀）用於測量傾斜角。引入了適當的濾波器以消除這些措施的噪聲，從而獲得有用的控制信號。</span></p>
<p class="c5"><span class="c1">  機器人的大腦圍繞30F4011系列的MicrochipdsPIC構建。在Microchip的C30使用PCKit2生成可執行代碼之後，所有的編程都以C語言完成，並插入到dsPIC中。</span></p>
<p class="c5"><span class="c1">  如果我們參考第4章，則數學模型如下：</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/__bOwFqZv5X2Rhr_HJkX9ub5BWurq7GfJIFk6Q86R4Hh0A3PB_JoqV74lodOWrvymggtoobS-e1UVWQA0bFvIuRhWuk-kA2UMhWVPhWBZd1uBeXuORiYkf8Km5JoLDyMZZ1Hf18" title=""/></span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/McfwCZbrDXBM1vGJXSv3IkJ6rpxteXfnBYXTu5fEPYdkaT3AIv-0f4eMeq0BEi-AstszvYtOCUhuTZPgW0bRAoc9UsVQuompDUNHlQX8N24LaI8N7CJyv0Z9eBmJlNdaTAvyW88" title=""/></span></p>
<p class="c3"><span class="c9">圖11.10</span><span class="c1"> 平衡機器人</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c1">而</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/2KG5UXsvOafrYihswq1kxx86oNrVAGPCmP5KP3cZwtU2PPqOwJyhMXaVttQEuT6W_ZLqyQOPe87cB5ODPsYLTUKtazTfJAwAjHuWpb3k5Anknw_lEHQmwsg-FMJFtbJLW-QsusA" title=""/></span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/_zljVJiWRdSVcxjvSzIgV_Gq261ZggZ8Se50Vv76HZKBS0Z9ppr4DEr05edxWN9mUvP_3Wcp_Wo0rMHWRjjU-CyViOTl-Z7jtEQrCO6QyWlDYhvj3BnraPhjoaqII0iDcdhBH3E" title=""/></span></p>
<p class="c3"><span class="c9">圖11.11</span><span class="c1"> 平衡機器人的電子電路</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c1">  由於系統在開環中不穩定，因此讓我們設計一個狀態反饋控制器，該控制器具有以下性能：</span></p>
<p class="c5"><span class="c1">1.        系統閉環穩定；</span></p>
<p class="c5"><span class="c1">2.        超調小於或等於5％;</span></p>
<p class="c5"><span class="c1">3.        2％的穩定時間等於1.5 s;</span></p>
<p class="c5"><span class="c1">  從規格中我們得到：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/rvFpPvJfVHy3K-rOwNKw2IYBHCHJwMqVy2QACCt4P201RvmZ4sSZAtsmki29DCEOxpNbsGG02Qn2SEyV6K9OYpVcQKRISC6hBB-eTW5ba-vF4cxlRyQ0vjC1EI69PFclo38jdsU" title=""/></span></p>
<p class="c5"><span class="c1">  相應的主根對由下式給出：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/ztZOweCS9QVyN0AxTHI4p4456hBgM_tPzkJzSOEHodK06FD1xCq8MQhage-SRAxPDxHTM17o1fH7iLFb0sOafyXJ_2or_HjFi23TVIfzfxUyx38-zMlm0A63SDO_qizslXbwIuM" title=""/></span></p>
<p class="c5"><span class="c1">  由於矩陣A的等級為4，因此我們需要再放置兩個根點以確定狀態反饋控制器增益K。讓我們選擇以下主根：</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/WghDMvGDPjhAMhqEHIwwFuD9mqaCXpGf8me1VxwMmB5nu77cyJJEY3VaUQT-gTGp05ppNs9ukYd2tWsgUIFDn92e2_1Uzl56gOH6MhSyJA0W0EmmNTZVRUg0mghLFXqjxh2EpKY" title=""/></span></p>
<p class="c5"><span class="c1">使用功能acker，我們獲得了以下結果：</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/S4oMkL8LAKSaZJcAJpWnO4LMGdu1F5l7eQRtL61kcsDbx-mykyKZoTbvLDEBY5PVIBaPUSdxdYJj3-tp2tP8GCJMNQdHkXgrMTtPyJ54Q2SLowSUfLHZjFxjqv3LCxKiiwbhr-c" title=""/></span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/iz0dksGiuKUk1rWqSTu1ekbXUpRAQuuO0jorLlgaG6tNgiLs7kV3yvf2QiTBQC3uG8klcjJbaOpOO6xdn4sNUrjg5B-GWmCPZAFKrVJmG5dZY2GtZextS-gT1gGT4z59L7KrwxA" title=""/></span></p>
<p class="c3"><span class="c9">圖11.12</span><span class="c1"> 輸出與時間</span></p>
<p class="c3 c7"><span class="c1"></span></p>
<p class="c5"><span class="c13">  該控制器的模擬結果在</span><span class="c9">圖11.12和圖11.13</span><span class="c13">中示出。系統從初始狀態開始</span><span><img alt="" src="https://lh5.googleusercontent.com/6qPg_d7um7FoQhCHUtSnZKtpqQ8SocZm-sQ2QLXRJm5hPJLGSdXJZsk7pv9vUtqPbARb7tsRIc4y82Gvblg8b3SV7sCsU9qXDX3m2X7uwS8kTs2tYXJmSmW4CCF5pUwTDxWkhog" title=""/></span><span class="c13"> 輸入為零。要是我們嘗試發送輸入參考，我們將在狀態或輸出中出現錯誤。克服這需要添加一個整體動作。如果我們用</span><span><img alt="" src="https://lh3.googleusercontent.com/GUREV-ZM3Odbhlg3fJaQQJaWc4EhXuSS_M7DjLVc5M392s8zVDOAp24xV5JYpqjRXY62Bcg_weC0nWuj87atqpFUZb4loaO5fjW4QkUKWd_tTfVz3J5VCsKpj5lYsiJaHehEVfo" title=""/></span></p>
<p class="c5"><span class="c1">xr（t）為位置參考，然後跟隨[1]，我們得到：</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/6C7HBC0K4ua9P2XLCEDrOv81p42XcGkbUznsc0KPoUy3g7hFD6SELY2uKHGXEKyGp0NyndGFbQP30KNw0r0FZBEtJKakK_L9dZ4Is7_wBTaGC-2E0aPjZkYcyNhiLThbZD-iGuA" title=""/></span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/7ZBcawdUFxKdfBUFpo5OYrwB5HZD9ur7DKvD_kgXwz5pHt-jLAaeWve5ftCS70P0fQqyaXiSAmjYDPKWKBN4U-PjXILIxaZyWAH6A0OJr5dsp4jBpED2pG1Bek_ImQUykBd2fnk" title=""/></span></p>
<p class="c3"><span class="c9">圖11.13</span><span class="c1"> 狀態與時間</span></p>
<p class="c5"><span class="c1">而</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/96QCrfJCWbL6nLusTS0GZ6o7Z4D81XDhBQtYTTKIdlSb6sUde3llcEvkxwgYXia-Dn_QRZtmQz_QFAMbqEVpl6_47Aqxp3tGbav44utyvn-LOuUNLszbJbOF26LO5O_8ktDHr_0" title=""/></span></p>
<p class="c5"><span class="c1">  新的動力學變為五階，我們需要修復三個主導根點以及規範中的主導根點。這些根固定為以下根：</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/QgQn-9c9X7JJwSVnKfkw285xT1A6EB5g8jvmAke79i0MX9fgohgp8tzbezo89lxcHYoJnKSm-26AqhKSd_izjOynrce0EHvL4acPapWtsaqR6shQpfdSMIQqbqLhcKxQZs4SSkk" title=""/></span></p>
<p class="c5"><span class="c1">  使用功能acker，我們獲得了以下結果：</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/AbguuNSC0---rmWcebr50QtBuEPX0fKhVzPlfhmv7HMlKtnkbJtagVd9XaeQVUDm4qPYWzpTm-TISc_zNbSWKhDYn5gwy7W9vLQ-z-eBJb9bLdA309KWxqi51da6V5GW_3jaEnk" title=""/></span></p>
<p class="c5"><span class="c1">  我們還可以使用線性二次控制技術設計狀態反饋控制器。實際上，如果我們選擇以下矩陣：</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/YCogJaRga0ycixXadUSxw23VoviDXJNwPW3PesRNJOC0Wz37lH-tNwfD6Xryh9vu19wJIktiNOjfcNN5Vvq-My3QNt-KGlMWbjJCKoSfp_x-BwdGsrZrPpMI1o8Jc6iNYJpkteQ" title=""/></span></p>
<p class="c5"><span class="c1">並使用Matlab函數lqr求解Ricatti方程，我們得到：</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/gokCeWpRJ95n2J90vpMG2zlWl3WCUeFocVcQO9ZyWQfiqNUrbrtGIakVNaQFE8gYTwAshbdDdPBWuZNxbs00snVk-JXWR2Ie1FPk9DFpnXlLFFAm3BuUknz4YvoyAexqA33vUoY" title=""/></span></p>
<p class="c5"><span class="c1">  閉環的相應特徵值由下式給出：</span></p>
<p class="c3"></p>
<p class="c5"><span class="c1">  可以類似地獲得該控制器的仿真結果，並省略了細節。</span></p>
<p class="c5"><span class="c1">  對於該系統，我們還可以使用穩健控制理論設計狀態反饋控制器。可以連續時間或離散時間完成。由於我們的模型是連續的，因此我們將使用LMI連續進行設計。求解適當的LMI（用於矩陣尺寸不同的直流電動機套件的LMI，我們得到：</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/9qtq3Hse4Ao6XCsmZZULdSod_qhy_lvUms3d6Dgzh1b9Z_PUGwCsqFJXtjDStGXsCNxsLefl1YENUcvZqBIT-tPKHmPgQFWT4yef1j4dvHpStu0My3RYRw-6hreCG6P7JblXTvk" title=""/></span></p>
<p class="c5"><span class="c1">為狀態反饋控制器提供以下增益：</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/monQFLaGCu7j_22Q1YlOobZQTcylEvylZZE-uvotcgdHxjrP1U9XQFCYyTNLNHbLKFo3yVuWlBN76ZgDYWCEUgMytJRwudq5d2vhCFupLXK1IDdM7YLEQUFY75T_ssFZmlMXxis" title=""/></span></p>
<p class="c5"><span class="c1">  閉環的相應特徵值由下式給出：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/w9nasTmYZCiZrWPeouY7CGEiiEj7v28CVfgvaryIFnrM6_gY1Xn8rx3B1LtMB07nd3W6_PU4tgaaEXIDlx-DS2UFUEfg0nZFpvNYKJxbsizKaPf0TMTujoCDBeNSywTtCd8rNWg" title=""/></span></p>
<p class="c5"><span class="c1">  對於其他控制器的設計可以很容易地獲得，我們將此作為因為設計是為了編寫Matlab程序而為讀者進行的類似於我們在文本中給出的內容。</span></p>
<p class="c5"><span class="c1">  作為第一個示例，讓我們考慮兩輪機器人的H∞控制問題。在這種情況下，我們在狀態動態中添加一個項。 該項為Bw（t），其中w（t）是具有有限能量的外部干擾。 通過γ= 0.1求解適當的LMI，我們得到：</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/Z8M-OCDU7BjF4YaxoWXXLjngsC_mCZsYSx6tPeNcrPcWrwpOjrbUUqukORTcEgozdZUk0HJPUJH3HzsmqZZTqINiCwtOVHfHwjqOSTfCZ-j8us-IHa71LCmxocYRp0BeMuR5mrY" title=""/></span></p>
<p class="c5"><span class="c1">為狀態反饋控制器提供以下增益：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/2UdWc0b-gUmLGNOCNuKCbfdOM5xYXl53ZaoRrwzUIV7N-X0fdbKZud5LF_-1qTrzFh2ibp7JFd78bhYdM4cHIMvYJPBc1XAO8C5xaS5n3s4ohcQrv0IkyaOZJ2D_Q8uevCBTNK4" title=""/></span></p>
<p class="c5"><span class="c1">  閉環的相應特徵值由下式給出：</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/9kajIvUMP-eg0ytqH3MibJIiBBh8Hsf1r4BkZ8f6ROiHtAKPdvNX0jqHHxWHGW2Y7Yh39fWd93PvHD1UtcGV2s5eJmGZxzCbD-uAmg9w7GNlW1dc3C8dh93rdSiWA8L-ikDZ1R8" title=""/></span></p>
<p class="c5"><span class="c1">  對於其他控制器的設計，可以很容易地獲得，並且我們將此作為讀者的練習，因為設計被引入來編寫類似於我們在本文中給出的Matlab程序。</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c10">11.5        磁懸浮系統</span></p>
<p class="c5"><span class="c13">在本節中，我們將介紹前面介紹的磁懸浮系統。由我們的機電實驗室開發的機電系統由兩部分組成：一個固定的部分，代表線圈並產生電磁力，另一個是我們希望通過作用於電磁場產生的電磁力而放置在某個位置的鐵磁物體。線圈。該系統的目的是通過輸入電壓調節電磁鐵中的電流來控制移動物體的垂直位置。使用霍爾效應傳感器測量物體位置。dsPIC30F4011周圍的電子電路通過L298（集成電路）為線圈供電，電流與致動器的指令電壓成正比。由於磁力只具有吸引力，互導放大器會轉為否定命令。該系統如</span><span class="c9">圖11.14</span><span class="c1">所示。</span></p>
<p class="c5"><span class="c1">  該系統的數學模型由以下方程式給出:</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/6OSytHoDDKwM6PNstIvpQopqbJNvV9SBiqOZUHO4PvMVhshTBkGkfdVzrs5-kJ7zEsvYUJcdWggXnVGXccpbbO95ca65Hxj64xeymbYpiF_t74oFQfxX8z14_-e6Fkr4_MLrhHw" title=""/></span></p>
<p class="c5"><span class="c1">其中m是運動物體的質量，l（t）R+是從電磁體測量的距離，F1和F2分別是當電流為i（t）時線圈產生的力以及電磁體與電磁體之間的電磁力。永久磁鐵放置在移動物體的頭部。</span></p>
<p class="c5"><span class="c1">  這些力的表達方式如下：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/d59BIFJ-LGIljhm5cUxUpS7n0HKuY68vHWF_rxYO5VMIC6fUHtuLS23VV1PSjcvVLWZKIbHMXuD9rP3oRcguuryH5mKwnTDDlybdL5I-N6Wxlx-Mi-IEKnUB7eI4i2aMMxKFZiI" title=""/></span></p>
<p class="c5"><span class="c1">  我們可以線性化這個非線性模型，得到以下信息（請參閱第1章）：</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/NCXD4SJHeBgFmzRSzsLG7uKtUGBZFsB5INHnpAUMgvb3wuzxygX2LufIYSqnh3ETRYHs1ugDqXT8hPYm-0bmqVJstIUfNnt--Ug7ax1xhka_i0qb2Y8ZPsFMDwEB_SD8iXuvAgM" title=""/></span></p>
<p class="c5"><span class="c1">而</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/wzLegC-C77uQYni826V1uUZeAfsxKO52vdiOq9DcTudTh8fYMDekHrCmMuemmHePqMATTFZ8arhhEcRVqrkzsJqpmwPGSAP2uoCac-bI_A5U3QBxQ7Z7ZoT9D8C4_bhkEmI4Tso" title=""/></span></p>
<p class="c5"><span class="c1">  該系統的數據由表11.1給出。使用此數據，矩陣由下式給出：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/YowfOOoYyBCmU0WmoSEAVLgbs0SYLaf05OKKPryOW76jg4-pIl10j20_oJS7Nu3fz_wXZNK0YLLydiyUTT2o3mL63LI5T6R1BwjytXQ9v1Hzyf4eZzqiXGA62wd9mXGWZSLoY_U" title=""/></span></p>
<p class="c5"><span class="c1">  重要的是要注意，系統在開環中不穩定，因為它具有積極的一面。可以通過計算的特徵值來檢查矩陣A。</span></p>
<p class="c5"><span class="c1">  讓我們設計一個狀態反饋控制器來保證以下性能：</span></p>
<p class="c5"><span class="c1">1.系統穩定閉環</span></p>
<p class="c5"><span class="c1">2.超調量小於或等於0.2％</span></p>
<p class="c5"><span class="c1">3.％2的建立時間等於0.05秒</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/tdVEceCC8O3zB0Hj_25vhKmSsVsXgzRTKiuGSGlMhgznHSt9k5dDsICjCo9v1qtLdAW4y1U3I8Pet9rTXL4_MwKdYonUSq0y-XtI1DSQ5mWOHsq0f0cS_yCXYzxFzaWVF2xxucw" title=""/></span></p>
<p class="c3"><span class="c9">圖11.14</span><span class="c1"> 磁懸浮系統</span></p>
<p class="c3"><span class="c9">表11.1</span><span class="c1"> 磁懸浮系統的數據</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/VdkKwrku13AijaqKtBe_L_jeI3SQxHUURylKY2hVUH53L-c92b-HQXsFbk5BC5oUUWcWn2NA4B4bvVjdw6OfwRoGhtqQOBFk19ynOul1rAj3sY_152fi-9GtutZDC75btFp6olQ" title=""/></span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c1">  由於過衝小於或等於0.2％，因此ζ= 0.9的2％的時間建立時間由下式給出：</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/3CZ0b43yEc1Zje5pDZIXwFydZjC1cm5QZXJ7WPTY9nL-TZWkwW9anXlEpk2AHdNpROPel-iHZ0ColTkXuC63vM3ZJXVIvbzUxpDns0UVFXf5peAJhFtbOeLP9t5cpoViFoun98o" title=""/></span></p>
<p class="c5"><span class="c1">wn是自然脈衝。如果將穩定時間固定為0.05秒，我們將得到：</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/8EJgFW9xPYQN7JQ8t8GQ1HjxCv0ZfXKL-rZDNk8KNGSw48aAN5wVHqqe2EsUbDmtcCuNpnHwJM7q3DssJ0k578I5Sroo7xY2MwL4fEBEm1e5FOGiDAEfTqj3yO8FnXcsxtx_KeI" title=""/></span></p>
<p class="c5"><span class="c1">  設計的主要根點如下：</span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/rp6pRQhlkYtuZ2NcOoCKuNgyzVbVBEMNcWN4ADasql6WxmlOkZGHO7CCA1Xvc_AfgyFhOJRrQw2ouP0w6Ld7ZwVzOm3zbbbX06ePXsy7NeofWCkYY_yc-mSufgMBahI6qMLxEpo" title=""/></span></p>
<p class="c5"><span class="c1">  使用這對根，我們得到：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/CN0FnFmuZJ2HOROw40ar005BDd8t9POlXFKIEctvC0jgQ9hs_GzRswe3QQuGIIyLZTD3QCoSKG5MsJD9e56Y_MnYfiDLjs-GBpOT-iIoKBBr7xSZJg0iKdqzuV2b2_wbh685Vos" title=""/></span></p>
<p class="c5"><span class="c13">  使用該控制器，從給定的初始條件開始的時間響應如</span><span class="c9">圖11.15</span><span class="c1">所示。從該圖可以看出，過沖和建立時間就是我們想要的。</span></p>
<p class="c5"><span class="c1">  對於第二種情況，由於我們無法訪問負載速度，因此我們可以從位置計算負載速度，也可以使用觀察者來估計系統狀態。如前所述，我們用於觀察者設計的根點應該比控制器設計中使用的根點更快。</span></p>
<p class="c5"><span class="c1">  選擇以下根點（s1,2，為控制器設計中所用實數的四倍）：</span></p>
<p class="c3"><span><img alt="" src="https://lh6.googleusercontent.com/EVGmpfZxvz3unTz2EG-pXYrVRZ4OH3A_jAprmwYKBQ5laRhCVz27pVkVkxNJU9J0WtyjIdw8DCdmbeY7DvLKHRFYQJLso79l3JDCvb50wk5uIhWJtiaIW8MBkMdwEZrIC_SMEBk" title=""/></span></p>
<p class="c3 c7"><span class="c1"></span></p>
<p class="c3"></p>
<p class="c3"><span class="c9">圖11.15</span><span class="c1"> 運動物體的時間響應</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c1">我們為觀察者帶來以下結果：</span></p>
<p class="c3"><span><img alt="" src="https://lh5.googleusercontent.com/Uu0vHxGY1z06mI_CZ-DUebYhiRDrPc73n4-5snQ6bnaurgysDtkfemUwubZ7JTXKxRMHBa518gjRJwCC1PtIqS0c5cmN0F2EdCqNFRXQUT7HbD0OlcoLebUpe2dOemMMtar1rf0" title=""/></span></p>
<p class="c5"><span class="c1">  我們可以像我們對直流電動機套件和雙輪機器人所做的那樣試驗所有其他控制器，但是我們更喜歡讓這一部分作為練習供讀者練習工具。注意，我們邀請他/她在連續時間和離散時間情況下進行設計並比較結果。該系統的尺寸可以做到這一點。</span></p>
<p class="c5"><span class="c1">  下面給出了用於對該系統的狀態反饋控制進行編程的示例：</span></p>
<p class="c5"><span class="c1"></span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false"> #include &lt;p30fxxxx.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;adc10.h&gt;
#include &lt;math.h&gt;
#include &lt;uart.h&gt;

//
// Configuration
//
// Interne frequency (30 MIPS) instructions/sec
// Number of samples: 7,37*16/4 = 29480000

_FOSC(CSW_FSCM_OFF &amp; FRC_PLL16);
_FWDT(WDT_OFF);
_FBORPOR(PBOR_OFF &amp; MCLR_DIS);
_FGS(CODE_PROT_OFF);
_FICD( ICS_NONE );
__C30_UART=2;

//
// Variables

#define Freq_pic 29480000 // PIC Frequency

#define a11 7.8510061454215840e-001
#define a12 2.2727760074413661e-004
#define a21 5.0829248960838420e+001
#define a22 1.0000643300984893e+000
#define b11 3.7771272752681438e-005
#define b12 4.5392069137012870e-004
#define b21 8.7496385285734044e-003
#define b22 1.0852723324638587e-001

#define Ts 2.2727272727272727e-004
#define u_max 1.1789999999999999e+001
#define ref_tension 5.0000000000000000e+000
#define ref_pic 1.0240000000000000e+003
#define duty_cycle_ref 5.8481764206955049e+001
#define x_ref 7.8768775539549939e-003
#define u_ref 2.0000000000000000e+000
#define y_ref 8.5691877396730676e-001
#define K0 5.2128678707944724e+004
#define K1 3.9336557697049994e+002

double y[2] = {0.0, 0.0};
double u[2] = {0.0, 0.0};
double y_tilde[2] = {0.0, 0.0};
double tension_tilde[2] = {0.0, 0.0};
double tension = 0.0;
double duty_cycle_tilde = 0.0;
double lim_Sup = 0.0;
double lim_Inf = 0.0;
double position_tilde[2] = {0.0, 0.0};
double vitesse_tilde[2] = {0.0, 0.0};
double integrale_tilde[2] = {0.0, 0.0};
double duty_cycle = 0.0;
double temps_total = 0.0;
double n = 6553500.0/65536.0;
int compteur = 0;
int compteur_freq = 0;
int uart_flag = 1;
unsigned long Val_reg = 0;

//
// Functions
//

void init(void){

INTCON1bits.NSTDIS=0; // Activation of the level of interruption
TRISE = 0; // Configuration of PORTE as output
TRISD = 0; //Configuration of PORTD as output
PORTEbits.RE8 = 1;
PORTEbits.RE2 = 0;
PORTDbits.RD0 = 1;
ADPCFG= 0xFFFF; // Configuration of the pins of PORTB as digital
I/O
}

void init_ADC (void){

SetChanADC10(ADC_CHX_POS_SAMPLEA_AN3AN4AN5 &amp;
ADC_CHX_NEG_SAMPLEA_NVREF);

ConfigIntADC10(ADC_INT_DISABLE);

OpenADC10(ADC_MODULE_ON &amp; ADC_IDLE_CONTINUE &amp; ADC_FORMAT_INTG
&amp; ADC_CLK_AUTO &amp; ADC_AUTO_SAMPLING_ON &amp; ADC_SAMPLE_SIMULTANEOUS,
ADC_VREF_AVDD_AVSS &amp; ADC_SCAN_OFF &amp; ADC_CONVERT_CH_0ABC
&amp; ADC_SAMPLES_PER_INT_1 &amp; ADC_ALT_BUF_OFF &amp; ADC_ALT_INPUT_OFF,
ADC_SAMPLE_TIME_1 &amp; ADC_CONV_CLK_SYSTEM &amp; ADC_CONV_CLK_32Tcy,
ENABLE_AN4_ANA &amp; ENABLE_AN5_ANA, SCAN_NONE);
}

void init_Timer1 (void){

INTCON1bits.NSTDIS=0; // Activation of mode 16 bits of the Timer1
T1CONbits.TON = 1; // Autorisation du Timer1
T1CONbits.TGATE = 0; // Dsactivation du mode Timer Gate
T1CONbits.TSIDL=1; // Synchronisation of Timer1 sur le Idle mode
T1CONbits.TCKPS = 0; // Choice of the Prescaler 1:1
(1=1:8, 2=1:64)
T1CONbits.TCS=0; // Selection of the interne clock (0=FOSC/4)
IFS0bits.T1IF = 0; // Put to zero the overflow bit for the
interrupt of Timer
IEC0bits.T1IE = 1; // Activation of the interruption of Timer1
PR1 = 6699; // Sampling frequency at 4400 Hz environ
IPC0bits.T1IP = 5; // Priority 5 for the interruption of the
Timer1

}

/* ROUTINE D’INITIALISATION DE L’UART */

void init_UART (void){

ConfigIntUART2(UART_RX_INT_DIS &amp; UART_RX_INT_PR0
&amp; UART_TX_INT_DIS &amp; UART_TX_INT_PR0);

// Configuration of the register

U2MODEbits.UARTEN = 1; // UART pins controlled by UART
U2MODEbits.USIDL = 0; // UART communication continue in
Idle Mode

U2MODEbits.WAKE = 1; // Wake up enable in sleep Mode
U2MODEbits.LPBACK = 0; // Loopback mode disabled
U2MODEbits.ABAUD = 0; // Autobaud process disabled
U2MODEbits.PDSEL = 0; // 8-bit data, no parity
U2MODEbits.STSEL = 0; // 1 stop-bit.

// Configuration du registre U2STA

U2STAbits.UTXISEL = 0; // Transmission Interrupt Mode
Selection bit
U2STAbits.UTXBRK = 0; // UxTX pin operates normally
U2STAbits.UTXEN = 1; // Transmit enable
U2STAbits.URXISEL = 1; // Interrupt occurs when one charater
is received
U2STAbits.ADDEN = 0; // Address detect disabled

U2BRG = 31; // Value for 57600 bps baudrate
}
//
// Initialization of the complementary mode PWM
//
void init_PWM (void){

Val_reg = 1023; // Frquence de 30000 Hz environ
lim_Sup = (u_max*(2*Val_reg + 1)/(2*Val_reg + 2)) - u_ref;
lim_Inf = -u_max - u_ref;

PTCONbits.PTEN = 1; // Activation of the time base
PTCONbits.PTSIDL = 1; // Configuration in Idle Mode
PTCONbits.PTCKPS = 0; // Selection de 4TCY ( Prescale: 00 = 1:1;
01= 1:4; 10 = 1:16; 11 = 1:64)
PTCONbits.PTMOD = 0; // Selection of the free running mode

PTMRbits.PTDIR = 0; // Increment of the time base
PTMRbits.PTMR = Val_reg; // Register value of the Time base

PTPER = Val_reg; // Value of the signal period

PWMCON1bits.PMOD1 = 0; // Selection the mode PWM complementary
PWMCON1bits.PEN1H = 1; // Activation of the pins in mode PWM
PWMCON1bits.PEN1L = 1; // Activation of the pins in mode PWM

DTCON1bits.DTAPS = 0; // Time base unit is 1TCY
DTCON1bits.DTA = 0; // Value of the DT for the unity A
PDC1 = 0; // zero of the dutycycle

}

void __attribute__((interrupt, auto_psv)) _T1Interrupt (void){

if (IFS0bits.T1IF){

PORTEbits.RE2 = !PORTEbits.RE2;
PDC1 = (2.0 * (Val_reg + 1) * duty_cycle)/100.0; // Calcul de la
valeur du registre PDC1
y[0] = (ReadADC10(2)*ref_tension)/ref_pic; // Signal of the
sensor in Volts
y_tilde[0] = y[0] - y_ref;

position_tilde[1] = position_tilde[0];
vitesse_tilde[1] = vitesse_tilde[0];
integrale_tilde[1] = integrale_tilde[0];
y_tilde[1] = y_tilde[0];
tension_tilde[1] = tension_tilde[0];

position_tilde[0] = (a11*position_tilde[1]+a12*vitesse_tilde[1]
+b11*tension_tilde[1]+b12*y_tilde[1]);
vitesse_tilde[0] = (-a21*position_tilde[1]+a22*vitesse_tilde[1]
+b21*tension_tilde[1]+b22*y_tilde[1]);
tension_tilde[0] = (K0*position_tilde[0]) +
(K1*vitesse_tilde[0]);// + N*ref;

if(tension_tilde[0]&gt;lim_Sup){tension_tilde[0] = lim_Sup;}
// Saturation of the tension tilde
if(tension_tilde[0]&lt;lim_Inf){tension_tilde[0] = lim_Inf;}

tension = u_ref + tension_tilde[0];
duty_cycle_tilde = tension_tilde[0]*(50.0/u_max);
duty_cycle = duty_cycle_ref + duty_cycle_tilde; // Computation
of the duty cycle in percentage

temps_total += Ts;

compteur_freq = 0;

compteur++;
if(compteur == 10){ // Print data every 1 ms
compteur = 0.0;
uart_flag = 1;
}

IFS0bits.T1IF = 0; // put to zero of the overflow bit
}
}

/* PROGRAMME PRINCIPAL */

int main (void){

init();
init_PWM();
init_ADC();
init_UART();
init_Timer1();
while(1){
init();
init_PWM();
init_ADC();
init_UART();
init_Timer1();
while(1){
if (uart_flag){
printf("%lf %lf %lf %lf %lf %lf %lf\n\r",
temps_total, tension, u_ref, y[0], y_ref,
position_tilde[0], x_ref);
uart_flag = 0;
}
}
}
</pre>
<p class="c5 c7"><span class="c1"> </span></p>
<p class="c5"><span class="c10">11.6 結論</span></p>
<p class="c5"><span class="c1">本章涵蓋了一些案例研究，這些案例是在我們位於蒙特利爾的E'cole PolytechniquedeMontre´al的機電一體化實驗室中開發的。我們詳細介紹了機電系統設計的所有步驟。重點放在每個提出的系統的控制算法的設計。</span></p>
<p class="c5 c7"><span class="c1"></span></p>
<p class="c5"><span class="c10">11.7 問題</span></p>
<p class="c5"><span class="c1">1.讓我們考慮一個具有以下數據的動態離散時間系統：</span></p>
<p class="c3"><span><img alt="" src="https://lh4.googleusercontent.com/tLvMu6A86TSu9XLv0sivBCsLnX5mxamPLD52eSuhf6GZsXLY_vBZAcb0cSaY9ag6ULrOoBTiDosip4ZIKVfDNE-lcV51xE0ZFnVeNOhljsOg5DyG8l5AeV2Z4VwXpfdiZU9YKZc" title=""/></span></p>
<p class="c3"><span><img alt="" src="https://lh3.googleusercontent.com/FiJzdCIzxadQH8MhMazSLflU55YZBVtIHE5tSM-Ng3RoHTGZ1ekFQw6rRWpEIB5VSHzOgHhebx8JCcmKdfHPKYxI1z2-rd3G-qL1UPG31BGfKoD73YmrT7WvBWL-8eNBo5-6WLY" title=""/></span></p>
<p class="c4"><span class="c1">(a)        為標稱系統設計以下控制器：</span></p>
<p class="c5 c8"><span class="c1">i.        狀態反饋控制器</span></p>
<p class="c5 c8"><span class="c1">ii.        靜態輸出反饋控制器</span></p>
<p class="c5 c8"><span class="c1">iii.        動態輸出反饋控制器</span></p>
<p class="c4"><span class="c1">(b)        為不確定係統設計以下控制器：</span></p>
<p class="c5 c8"><span class="c1">i.        狀態反饋控制器</span></p>
<p class="c5 c8"><span class="c1">ii.        靜態輸出反饋控制器</span></p>
<p class="c5 c8"><span class="c1">iii.        動態輸出反饋控制器</span></p>
<p class="c4"><span class="c13">(c)        如果我們在狀態動力學中有一個額外的術語會增加外部干擾：</span><span><img alt="" src="https://lh4.googleusercontent.com/oOHzMsZvlM4J6S2qTul1b6RPmxGw_oaim86q6MM4wOrRg8XdYc8GOm2r-prx7eRCUI2PtJtYJQbGP6e6X4UMPgaxE4PX39V_5HRWX6F8CwNtXe5rZsHCQkSgLIvqlFWSbenFOus" title=""/></span><span class="c1">。為標稱和不確定係統設計控制器（狀態反饋、靜態輸出、動態輸出反饋），以確保H∞性能。</span></p>
<p class="c4"><span class="c1">(d)        設計狀態反饋，靜態輸出反饋和動態反饋控制器，以確保所有容許的不確定性的保證成本。</span></p>
<p class="c5"><span class="c1">2.在這個問題中，我們邀請您進行小船的設計，您可以使用操縱桿控制小船，使其例如在小紫膠中移動。</span></p>
<p class="c4"><span class="c1">(a)        給出原理圖設計（電池、電動機等）</span></p>
<p class="c4"><span class="c1">(b)        建立數學模型</span></p>
<p class="c4"><span class="c1">(c)        修正您想要的規格，並設計合適的控制器以達到這種性能</span></p>
<p class="c5"><span class="c1">3.在這個問題上，我們邀請您進行小型飛機的設計，您可以使用操縱桿控制小型飛機的飛行。</span></p>
<p class="c4"><span class="c1">(a)        給出原理圖設計（電池、電動機等）</span></p>
<p class="c4"><span class="c1">(b)        建立數學模型</span></p>
<p class="c4"><span class="c1">(c)        修正您想要的規格，並設計合適的控制器以達到這種性能</span></p>
<p class="c5"><span class="c1">4.在這個問題上，我們要求設計真空吸塵器。此設備應為自動設備，並避免其環境中的障礙物。設計便宜的，可以通過發射器、接收器和操縱桿進行無線通信的控制器也很重要。</span></p>
<p class="c4"><span class="c1">(a)        給出原理圖設計（電子電路、電機等）</span></p>
<p class="c4"><span class="c1">(b)        建立數學模型</span></p>
<p class="c4"><span class="c1">(c)        修正您想要的規格，並設計合適的控制器以達到這種性能</span></p>
<p class="c5"><span class="c1">5.在這個問題上，我們邀請您繼續進行機電系統的設計，該系統控制乒乓球的小球的位置。可以使用壓縮空氣來定位球。</span></p>
<p class="c4"><span class="c1">(a)        給出原理圖設計（電子電路、電機等）</span></p>
<p class="c4"><span class="c1">(b)        建立數學模型</span></p>
<p class="c4"><span class="c1">(c)        修正您想要的規格，並設計合適的控制器以達到這種性能</span></p>
<p class="c5"><span class="c1">6.在此問題中，我們希望設計一種單腿機器人，該機器人可以在保持垂直位置的情況下使用一個輪子移動。提供此類機電一體化系統的設計。</span></p>
<p class="c4"><span class="c1">(a)        給出原理圖設計（電子電路、電機等）</span></p>
<p class="c4"><span class="c1">(b)        建立數學模型</span></p>
<p class="c4"><span class="c1">(c)        修正您想要的規格，並設計合適的控制器以達到這種性能</span></p>
<p class="c5"><span class="c1">7.太陽能是可以使用的替代能源。在這個問題上，我們要求您設計一個太陽能係統，以使太陽能電池板產生的能量最大化。</span></p>
<p class="c4"><span class="c1">(a)        給出原理圖設計（電子電路、電機等）</span></p>
<p class="c4"><span class="c1">(b)        建立數學模型</span></p>
<p class="c4"><span class="c1">(c)        修正您想要的規格，並設計合適的控制器以達到這種性能</span></p>
<p class="c5"><span class="c1">8.在這個問題中，我們要求設計一種可通過操縱桿通過發射器和接收器控制在水上進行密封的胡佛。</span></p>
<p class="c4"><span class="c1">(a)        給出原理圖設計（電子電路、電機等）</span></p>
<p class="c4"><span class="c1">(b)        建立數學模型</span></p>
<p class="c4"><span class="c1">(c)        修正您想要的規格，並設計合適的控制器以達到這種性能</span></p>
<h3>MechaFutureAndChallenges</h3>
<p>40723210提供</p>
<p><span>原文pdf連結:</span><a href="https://drive.google.com/file/d/118Vho5ECQfQ1XK_hnlptpCVdNgQ00HuZ/view?usp=sharing">MechaFutureAndChallenges.pdf</a></p>
<p><span>翻譯連結:</span><a href="https://s40723210.github.io/cd2020/downloads/MechaFutureAndChallenges%E7%BF%BB%E8%AD%AF.pdf">MechaFutureAndChallenges翻譯.pdf</a></p>
<h4 class="c21" id="h.gjdgxs"><strong><span class="c9">Ch1機電整合未來</span></strong></h4>
<p class="c0"><span class="c10">1.1 挑戰</span></p>
<p class="c0"><span class="c2">自從</span><span class="c20">Tetsuro Mori</span><span class="c1">提出機電一體化系統的概念以來已有40多年的歷史，它表達了電子部件的可用性對固有機械系統的控制和操作的日益增長的影響及重大迅速的技術變革。</span></p>
<p class="c0"><span class="c1">特別是系統內部的重點已從硬件轉移到固件和軟件，從而導致引入了一系列圍繞使用智能設備的消費產品，其中許多產品本質上仍是機電一體化的，因為它們帶來了將機械工程的核心與日趨完善的電子設備和軟件結合在一起， 當與增強的本地和遠程通信結合使用時，這導致了基於智能對象彼此通信的能力的系統的發展，因此可以根據上下文有效地進行自我配置。</span></p>
<p class="c0"><span class="c1">相反的這導致了如計算機物理系統，物聯網和大數據[2-11]等概念的發展，其中通過智能對象和信息的組合來驅動交互。(參照圖1至圖4。 1.1、1.2和表1.1中)，用戶通過智能對象訪問雲端結構已利用由一系列通常不知名或不可見的資源提供的資源。</span></p>
<p class="c0"><span class="c1">表1.1所表示的供應量的增長也導致了複雜的用戶系統的可用性的增長，例如，智能手機越來越多地結合了高質量的靜態和視頻成像功能，以至於它們現在比傳統相機負責更多的圖像 。</span></p>
<p class="c0"><span class="c1">它還導致引入了一系列用於行為監控的用戶設備如智能手錶和平板電腦，所有這些設備都能夠通過Internet媒體與其他智能設備進行交互，如圖1.3和1.4一起說明了此類設備的日常使用情況[12-15]，以上所有這些對機電一體化系統的設計，開發和實施以及機電一體化本身的未來都有影響[16，17]。</span></p>
<p class="c0"><span class="c2">2014年，在瑞典卡爾斯塔德舉行的機電一體化論壇會議上，來自世界各地的許多從業人員被要求以簡單的方式提供他們對機電一體化在未來幾年所面臨的最重大挑戰的看法及收到的響應如圖1.5所示，並將在本章的以下各節中進行詳細討論。</span><span><img alt="" src="https://lh6.googleusercontent.com/UZ9PsPsT4Mi1nDK-n8-MpOYdfCEjEUlnijEfHPFEy5hyN_sLa4hMJb0yOMIpwg1ldiGuU0sOxrqAi-YnqKL_fv18CzGQG-lsbpTMKqAN7RFyVSPtl9JvBFbPZ4xpyd46RLYUUj4" title=""/></span></p>
<p class="c0"><span><img alt="" height="426" src="https://lh6.googleusercontent.com/2AWFv5b6YKc6hMR7dY2Xd7l1HubwKp_XEpWfprd28-awdv27gOD3MDG666UmiM-RZ9mclC8k4jNJJcHwZaS5GgYqvWBTUBZd1rYvZLRWX9YTC4Bd_oDseUOv-vAT9uSmYZX8dUQ" title="" width="569"/></span></p>
<p class="c0"><span class="c1">它還導致引入了一系列用於行為監控的用戶設備，智能手錶和平板電腦，所有這些設備都可以通過Internet媒體與其他智能設備進行交互。 圖1.3和1.4一起說明了此類設備的日常使用情況[12-15]。 以上所有這些對機電一體化系統的設計，開發和實施以及機電一體化本身的未來都有影響[16，17]。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c10">1.2 挑戰性</span></p>
<p class="c0"><span class="c1">通過以上回答，關鍵問題可以總結為：</span></p>
<ul class="c4 lst-kix_list_1-0 start">
<li class="c3"><span class="c1">設計</span></li>
<li class="c3"><span class="c1">隱私和安全</span></li>
<li class="c3"><span class="c1">複雜性與道德</span></li>
<li class="c3"><span class="c1">人口老齡化</span></li>
<li class="c3"><span class="c1">用戶</span></li>
<li class="c3"><span class="c1">可持續發展</span></li>
<li class="c0 c11"><span class="c1">教育</span><span><img alt="" height="370" src="https://lh6.googleusercontent.com/qhMUnhYVQ6gjQW0kVLX9vkjzyO-jyJn694BtIJ8dAl2JvOQMG_tzT28g0IuftDhiiMK20Fdnf8LODnQ7aH3qukW7O1TQHtkUxZ7vcX5bW4HgFwz-YRGY5LxNrmhWwdGGlPmJel0" title="" width="522"/></span></li>
</ul>
<p class="c0"><span class="c1">以下各節將簡要討論其中的每一個。</span></p>
<p class="c0"><span class="c1">1.2.1 設計</span></p>
<p class="c0"><span class="c1">工程設計的常規方法通常遵循如圖1.6的簡化V模型所定義的路徑，通過結構化的系統定義實現集成，然後通過適當的測試制度支持的系統開發過程來支持驗證和確認，透過通過規範、測試、驗證和確認過程將各個模塊和子模塊（包括來自外部資源的模塊和子模塊）綁定到設計中，以確保整個系統的功能。</span></p>
<p class="c0"><span class="c1">通過設計理論與設計實踐之間的協同相互作用，這種方法已經發展了許多年，但是在這種情況下，設計理論必然不可避免地落後於實踐，但在這種實踐中，人們正在探索新技術所帶來的可能性，也許不一定完全了解其能力或含義。</span></p>
<p class="c0"><span><img alt="" src="https://lh5.googleusercontent.com/NCSVx4kYLdUdNySqlrdObyC92UX5mNU8okXXn7wBdiWv2MnWfZLwnXkHQ08lcIHhO7-NGcQXAjvmE5NfAae5_JCoZGroHipnoD1tbVfxcoXAfR_txnH0eLtqUht-nu-SnbliIqs" title=""/></span></p>
<p class="c0"><span><img alt="" src="https://lh5.googleusercontent.com/ET9_ZEY_kW_J3fC2nr5-yC-TCc-MuIVaKOngb9HstzO29KsA0Nr99Ik1HHwEaXzdQ4ZzhRGUwnopH26uM_0otgbqfHDFJt21pg-GtN5lXqQNjtJMQQCRdxY3cC8Bjoj-4z52Q3U" title=""/></span></p>
<p class="c0"><span class="c1">對於網絡物理系統和物聯網來說系統是一個動態實體，智能對象（用戶）根據上下文和需要進入或離開，而在大多數情況下基於雲的組件在被採用之前對於用戶是未知的，並且它們很可能適用於任何功能性智能對象，這就給設計人員帶來了確保系統不易被其包含的問題，同時認識到系統可以根據需要進行自我配置的問題。</span></p>
<p class="c0"><span class="c1">因此從本質上講，用戶指定了系統功能和內容，然後系統自動配置從雲中選擇具有信息的所需軟件和數據組件，則成為其價值由用戶上下文確定的商品，在涉及物理組件的地方，例如在智能家居環境中，標識和選擇將由用戶在指導下進行，設計人員面臨的一個挑戰是提供工具以使動態系統配置的含義能夠在設計過程的最早階段就得到探索，並將這些結果適當地集成到設備功能中[18]。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">1.2.2隱私和安全</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">與物聯網相關的許多設備都具有收集大量個人數據的能力，其中許多可能保存在用戶不知道的區域和方式中。 然而這些數據將受到分析的可能性的影響，而誤解的相關風險會影響隱私[20-23]，但是這必須與潛在的提取有益知識的能力進行權衡，特別是在基於IoT的應用程序（例如eHealth）的背景下[24]。 在更廣泛的安全性範圍內，系統在個人和公司級別上保護自身免受入侵的能力越來越重要。</span></p>
<p class="c0"><span class="c2">表1.2根據信息系統審計與控制協會[19]進行調查顯示了感知到的威脅級別。</span><span><img alt="" src="https://lh6.googleusercontent.com/MYFSRx7z1i09sYbZCkx0Scxl04LkoXwhXxzNEWtlk8dhQXTFl4GQiZfn1_DZYjYrVqpGo-030fo1wO38s1JXlMJoTDqj3IrxOzEs5Lryc_ipXZyZpbnFzBew1arJSnjL0O6iOpE" title=""/></span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">很明顯在物聯網，網絡物理系統和大數據各自的上下文中，系統設計人員將隱私置於其設計過程的核心的負擔越來越重，這必須反映在設計中過程本身以及支持該過程的方法和工具。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">1.2.3複雜性與道德</span></p>
<p class="c0"><span class="c1">隨著系統變得越來越複雜並開始具有更大的自主權，從醫療保健到自動駕駛汽車的所有應用和環境，所有利益相關者了解其性質和功能的能力提出了問題[25-28]。 在對一個人或多個人的福祉或生命負有責任的情況下尤其如此</span></p>
<p class="c0"><span class="c1">委託給系統[29]。 其他問題包括：</span></p>
<ul class="c4 lst-kix_list_2-0 start">
<li class="c3"><span class="c1">技術的雙重用途-諸如無人機之類的技術可以與有益的應用相關聯，例如在作物管理中，也可以用於軍事和其他目的。</span></li>
<li class="c3"><span class="c1">技術對環境的影響-將技術引入環境可以以多種方式破壞和改變該環境，即使根本目的是良性的。</span></li>
<li class="c3"><span class="c1">技術對全球財富分配的影響-技術的使用可以增加不同社會群體之間的距離，即使在同一國家[13]。</span></li>
<li class="c3"><span class="c1">數字鴻溝和相關的社會技術鴻溝-訪問和使用通過雲提供的服務的能力之間的距離越來越大。</span></li>
<li class="c3"><span class="c1">確保公平獲取技術-控制對技術的訪問可能會限制開發。</span></li>
<li class="c3"><span class="c1">技術成癮—個人沉迷於他們使用的技術[30]。</span></li>
<li class="c3"><span class="c1">技術鎖定-個人可以被鎖定在特定技術中，一個簡單的例子就是在Apple和Android之間進行選擇。</span></li>
<li class="c0 c11"><span class="c1">人類的非人性化和擬人化-通過消除對其活動和福祉的責任[31]。</span></li>
</ul>
<p class="c0"><span><img alt="" src="https://lh3.googleusercontent.com/Jy8dbBEbliYPVTnoPRLHMHy8ZDPkJcrxGFWzcD_Bn4alOO1mk1soU1yh-YZdhM9uSznQCM1iQ5Tbo7Ea62bCnZ0T-tKZVnMhgz2QPbq-6LeuBWmTjcEeLzhvlkKLw4ifHqH9ZHE" title=""/></span></p>
<p class="c0"><span class="c1">1.2.4人口老齡化</span></p>
<p class="c0"><span class="c1">面對人口老齡化，圖1.7顯示了歐洲範圍內過去和預期的年齡組分佈變化，[1]提出了一些問題，即如何最好地利用技術來支持老年人，並試圖為他們提供更高水平的老年人服務，特別是有必要確保物理和信息領域內的流動性達到適當水平，以防止個人保持獨立性並與社會互動[33，34]。</span></p>
<p class="c0"><span class="c1">1.2.5用戶</span></p>
<p class="c0"><span class="c1">由此可以看出，具有互聯網功能的設備的可用性通過使用社交媒體對社交行為產生了重大影響，但與以往相比，還提供了更便捷的信息訪問方式。這樣的設備還支持與環境的交互級別提高，例如在智能家居中，此外可穿戴設備的引入為eHealth和mHealth等領域的發展提供了機會，以支持個人福祉[35]，從而引發了隱私和個人數據控制問題。</span></p>
<p class="c0"><span class="c1">但是這還需要開發新形式的用戶界面，以支持更廣泛範圍的用戶與此類系統進行交互的能力，特別地越來越需要能夠以不需要復雜形式的通信或關於基礎技術的知識的方式來捕獲用戶意圖和上下文。</span></p>
<p class="c0"><span class="c1">1.2.6可持續發展</span></p>
<p class="c0"><span class="c1">人們已經認識到有必要朝著以個人及其需求為中心的更加可持續的社會形式轉變，並以有效管理和使用所有可用資源為基礎進行結構化，如圖1.8所示，在機電一體化[36，37]的背景下這融入了諸如智能的概念家庭和智慧城市，其中信息用於管理日常活動。</span></p>
<p class="c0"><span class="c1">例如在德國城市中找到一個停車位需要大約4.5 km的行駛，這對於排放約140 g CO2 / km的車輛將產生至少630 g不必要的CO2，並且明顯更多在走走停停的交通中。通過適當的通信將可用停車位的知識與車輛目的地聯繫起來，多餘的部分可以消除[38]。表1.3中提出了其他影響城市的可持續發展問題。</span></p>
<p class="c0"><span class="c2">因此總體來說，正在朝著建立以個人為核心的可持續社會邁進，以解決諸如人口老齡化，資源可獲得性和管理，氣候變化和彈性等問題[40-44]。有關機電一體化和物聯網，實現可持續性的基本要求是有效管理和使用所有資源；通過綜合使用一系列智能對象提供的信息來實現技術，物理和人類的工作。</span><span><img alt="" src="https://lh6.googleusercontent.com/-T1WVw9wldg_ijO5Mpzhb1rQ_EbyFL6p_TUuBXhDCnDhBnkHhjaN-EZXedKrZIF5RmVE0V7Pe2Pf9nd6MfwCBToBSgZ8VWZUC4z2OE-ODSMnBZTQ-mswROGPfB-UHnk_uypGtQY" title=""/></span><span><img alt="" src="https://lh3.googleusercontent.com/QJyQzBJN8EG9vMpK6KGj5L9DYy2SS5gUX37qsToJDLUfoospBc4OEvBsTaPqjtzPVWYeKNShD-cho-IuCLaCg47wVhR2_ZSwWIUTpNwXqlGP5KcZvB_buL2T_GuOOnCbUEiEENg" title=""/></span></p>
<p></p>
<p class="c0"><span class="c1">反過來說這意味著通過採用新穎、創新的方法來理解構建和管理物理和信息環境及其之間的關係，可以有效適當地利用信息來支持個人參與其生活方式的各個方面，圍繞物聯網配置的知識經濟的一部分考慮以下兩種不同的城市場景：</span></p>
<p class="c0"><span class="c1">方案1：新建設-目的是從一開始就實現物理和信息環境的集成，並獲得對高速寬帶網絡等設施的訪問以及在這些環境中部署全套智能技術的能力。</span></p>
<p class="c0"><span class="c1">方案2：建立的社區-這些社區代表了大多數人口，這意味著在引入基礎架構方面的變化將需要考慮對現有環境的影響以及該環境對技術需求的適應性。</span></p>
<p class="c0"><span class="c1">1.2.7教育</span></p>
<p class="c0"><span class="c1">機電一體化教育一直面臨著在適當水平的技術內容與對機械工程、電子學和信息技術等核心學科的集成要求的理解之間取得平衡的挑戰[16、17、45-47]，如圖1.9 [17]所示鑑於過去40多年來技術基礎的增長，機電一體化課程設計者在實現這種平衡方面面臨的挑戰變得更加複雜。</span></p>
<p class="c0"><span><img alt="" src="https://lh3.googleusercontent.com/-61w2-N5ldB8vZ4YpaWdyzWCZLblxLViLa0w77M21WlJwpragDLE8_QWLuEYByS60HN-TXblllbsyZQrxjkpK30AKYkaNPMFgHhtKMuk233GnYSyrb7NyIVnUQUY4S1eBfAtjMM" title=""/></span></p>
<p class="c0"><span><img alt="" src="https://lh4.googleusercontent.com/KIrNcmRRKD6Nyiw9acbGR8A35-V1cRvkY8i6lGKWxOtfqPhT1YYUiVayY4oBVHq6_lODOALx1CM9NFol4UBod1HacePm4nJhhxAvE91MHO_5K6qPsQpRgEA2cL-k6wE3u2RRlQI" title=""/></span></p>
<p class="c0"><span class="c1">除了與技術發展相關的課程設計面臨的挑戰外，還需要考慮許多其他因素。 這些包括：</span></p>
<ul class="c4 lst-kix_list_3-0 start">
<li class="c3"><span class="c1">交貨變更</span></li>
</ul>
<ol class="c4 lst-kix_list_4-0 start" start="1">
<li class="c5"><span class="c1">大規模在線公開課程（MOOCS）[48]。</span></li>
<li class="c5"><span class="c1">基於教程和研討會的學習支持。</span></li>
<li class="c5"><span class="c1">混合學習[49]。</span></li>
<li class="c5"><span class="c1">社交媒體對學習的影響[50]。</span></li>
</ol>
<ul class="c4 lst-kix_list_3-0">
<li class="c3"><span class="c1">結構性問題</span></li>
</ul>
<ol class="c4 lst-kix_list_6-0 start" start="1">
<li class="c5"><span class="c1">–分佈式學習資源。</span></li>
<li class="c5"><span class="c1">–內容的時間值。</span></li>
<li class="c0 c16"><span class="c1">–協同工作。</span></li>
</ol>
<p class="c0"><span class="c1">因此，未來的關鍵因素是鼓勵通過教育採用創新的機電一體化方法（圖1.10）。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">1.3章節結構</span></p>
<p class="c0"><span class="c1">本書由邀請作者組成的一系列章節構成，每個作者都是機電一體化特定領域的專家，在各種情況下作者都面臨著以自己的研究或專業知識為出發點來建立當前技術水平的挑戰，然後試圖隔離和識別，未來幾年需要或可能發生重大發展的關鍵領域，各章本身的組織如表1.4所示。</span></p>
<p class="c0"><span class="c1">1.4總結</span></p>
<p class="c0"><span class="c1">儘管核心技術和概念基本上保持不變，但自最初提出該概念以來機電一體化的性質已經發生了重大變化，並且這種變化可能會以加速的速度持續下去。 解決方案中已經確定了一些需要解決的問題和挑戰前幾節，並將在後續章節中進行開發和擴展。</span></p>
<p class="c0"><span><img alt="" src="https://lh6.googleusercontent.com/oUmS6Ln7M9Ou95Hx5tlctqd_H-X9o3ABSwrPu8d9PIk4pF4j5-wwvgSSShG2SF3dPEdMBftnany5c5EuDFlOFtRDbTxNoRx1HtvKfwLyFpiR3hB9ovXmm3MVVWnQ-ZZHCcJMbLM" title=""/></span></p>
<p class="c0"><span class="c1">致謝作者要感謝許多同事，研究人員和學生多年來對本章和本書的背景，結構和原理的投入，由於人數太多了不能單獨命名，但是我們由衷感謝大家！</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c14"><span class="c9">Ch2機電工程干擾</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">2.1它是如何開始的</span></p>
<p class="c0"><span class="c1">機電一體化領域始於1970年代，當時機械系統需要更精確的受控運動。 這迫使工業界和學術界探索傳感器和電子輔助反饋，同時在生產設施中主要使用電驅動代替機械凸輪軸。</span></p>
<p class="c0"><span class="c1">引入反饋控制的運動構成了使機械工程師和電子工程師能夠更好地協作並相互理解語言的基礎，在那時控制工程部門大部分是工業和學術界的電氣開發或研究部門的一部分並且採取了各種舉措來發展共同的語言或方法，一些機構推動機電一體化成為一門新興學科。</span></p>
<p class="c0"><span class="c1">在工業設計中，設計團隊通常被迫在規範級別上從他們的特定學科知識中進行更深入的了解，計算機輔助設計和仿真工具確實在1980年代末和1990年推動了該領域的發展，機電一體化的工作方式是光存儲設備的開發，例如圖2.1 [1]，機械設計人員的團隊使用他們的有限元程序，以及電子和控制專家以及他們的特定仿真工具共同開發了機制，這些機制在製造性、成本和動力學方面都有非常嚴格的規範。</span></p>
<p class="c0"><span class="c2">在1980年代的同一時期，在許多行業和學術界機械工程師越來越多地開始著手解決動力學和控制問題，並且機械工程部門中也出現了控制小組，所有這些都標誌著人們逐漸擺脫了單一原則，圖2.2 [1]的學科方法。</span><span><img alt="" src="https://lh3.googleusercontent.com/9y_3GSV8MsnPBpGUbwVIMkn90drGqVjCbyklE4DtvXgKjuGigZQIJ31SN2pcIp30Bu7DlPIj90T9H8jt0fY6coyCVIuHpAa0mSjXeVGsr_mD1y9WeqcCaQBpil1Z-DcuJ8h5jQ8" title=""/></span></p>
<p class="c0"><span><img alt="" src="https://lh5.googleusercontent.com/RnFGcCCZFDCrKlvs8GldDATw_xQLNf4-Ecl16KZE4GIAUn5m-dVs-tg3lib7rH0t7YPXpRhP_wH4ewHvT_mh5_Rnc5tAhRV4ORCkxgw-p2t7CqKcjiCMhQq0SofWPcxF7nrx5EI" title=""/></span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">2.2計算機控制設備</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">個人計算機的快速發展，使人們能夠更好地使用仿真和設計工具，從而在早期階段改善了總體設計過程和設計思想交流的質量，但是基於PC的數字化計算機控制的機電一體化系統的測試和實施，這要求解決計算機科學工程的作用，並表明需要包括軟件學科，但是范圍仍然很有限，這也導致了越來越多的系統工程領域的出現，作為在工業上研究更複雜的產品和高科技系統的一種方式，考慮使用“通用”語言或至少更好地理解彼此，顯然在硬件和軟件領域之間的瑣事要比在硬件領域本身內的瑣事少得多。</span></p>
<p class="c0"><span class="c1">從研究的角度來看，這些問題始於離散的時間級別，即如何使用計算機來實現控制功能，從而盡可能地保持以前使用模擬實現的性能，但是很快將更高級別的監督控制模式帶入了機電一體化領域，這迫使人們進行研究以轉向離散事件系統中更為困難的問題，從而面臨機械系統中持續的時間動態變化， 這導致了系統和控制學科內混合系統的研究領域，這部分形成了硬件（“舊的”機電一體化）和軟件（計算機科學）領域。</span></p>
<p class="c0"><span class="c1">2.3應用</span></p>
<p class="c0"><span class="c1">機電一體化思想帶來的性能提升是深刻且獲得廣泛認可，機電一體化的應用可以在許多產品和生產環境中找到，儘管在早期電動機的控制是一種常見的應用，但是機電一體化的思想也用於液壓系統、壓電驅動執行器、生產設備、科學設備、光機電一體化、汽車機電一體化等的建模和控制中。</span></p>
<p class="c0"><span class="c1">在過去的幾年中，由於監督了機電一體化論文的流入，使得醫療設備高精度系統、無人機（UAV），汽車和機器人技術上提交了更多的應用論文，關於建模語言和工具的科學成就的論文減少了，這可能意味著適當的工具現在更加普遍，機電一體化教育方面的論文似乎也是如此，這是1990年代後期的熱門話題，在那裡找到了很好的例子包括為學生做的實驗工作。</span></p>
<p class="c0"><span class="c1">關於所謂的機電一體化設計方法的討論文件已經很少了，因為到現在為止，很明顯，機電一體化在實踐中所做的部分創新更多地與幫助學科進行交流有關，最好是通過使用共享模型或量化模擬，機電期刊提交中涉及的科學方法主要出現在系統和控制領域，其中機電應用位置通常用作驗證或僅作為展示用例，一個新興的領域是使用優化算法，不僅用於找到最佳控制律且越來越多地用於組件設計，直到作為新的設計工具進行系統拓撲優化[2]，機電一體化項目和社區的核心仍然是機械工程，電氣工程以及系統和控制領域與計算機科學和物理之間的相互關係仍然相當有限，但這將轉移到未來幾年。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">2.4複合物理場</span></p>
<p class="c0"><span class="c1">高端機電一體化系統（例如用於光學光刻或電子掃描探針的圖2.3的晶圓掃描儀）以及在空間應用和科學儀器中的誤差預算越來越接近於在各種源上的平坦分佈。</span></p>
<p class="c0"><span class="c1">例如現代晶圓掃描儀在由熱和冷卻流體引起的振動與由致動器激發的機械模態振動一樣重要，這與極端條件和要求有關；以超過10 g的加速度移動80 kg的質量，並達到以下精度</span></p>
<p class="c0"><span class="c1">納米具有mKelvin溫度變化[3]，這意味著“常規”機電一體化及其運動控制系統現在開始與熱和流體控制動力學產生動態相互作用，現在整體性能評估和設計改進不僅涵蓋機械和電氣/電子和軟件學科，而且還涉及物理問題，例如基於熱和流體偏微分方程的建模而當我們將增材製造的可能性包括在內時，這會對機電一體化設計思想產生什麼影響？如果可以使用3D工業金屬或陶瓷打印機自由調整我們的機構形狀，那麼如何獲得整體最佳設計？</span></p>
<p class="c0"><span><img alt="" src="https://lh5.googleusercontent.com/r8YqVQYlTRNLjzOZpEEd6iF5ndjO0u3hE9txrk-hYV9EExjtwOoXYdmcZbZoJ5VOY9hfJfbedBkWAYa38Qk3uNV9rUSxESkT5D2fRaUxEj0HCo-bRGoCKSpZZirZpTg9Pt48CWA" title=""/></span></p>
<p class="c0"><span><img alt="" src="https://lh4.googleusercontent.com/zNV93C7jx7RGCdcXDppd8XpFPsg0IJI6LvVG96onuQKv88oZvdu9aMpak1oi-B8KkKgc1ohUvhu1vJxFMVR6OtFUu4Q5pudmRxFFpiewLZkVnXVc6Cesc1z19pAPbiv70_MRrCM" title=""/></span></p>
<p class="c0"><span class="c1">如果我們能夠通過適當的系統工程和更多學科來處理這種複雜性，那麼現在只能將性能折衷提升到一個新的水平。</span></p>
<p class="c0"><span class="c1">在圖2.4中以性能與資源圖的形式描述了這種趨勢，資源可以是金錢、人員、開發時間、計算機能力，能源等。性能通常是準確性，吞吐量和可靠性。曲線表明，達到更高的性能確實會花費越來越多的資源，直到不可行為止。在圖中，還繪製了示例，首先是一種簡單的變速箱系統，其性能較低（在準確度方面），並且還需要有限的資源，圖中的第二個示例是現代晶圓掃描儀，作為極端性能和需要大量資源的示例。</span></p>
<p class="c0"><span class="c1">曲線表明為了進一步促進創新我們需要結合兩種方法，首先通過解決所有相關學科，例如物理問題我們將能夠提高性能，其次通過引入系統工程方法，我們可以以更好的方式處理。</span></p>
<p class="c0"><span class="c1">2.5機器人</span></p>
<p class="c0"><span class="c1">與上述高端系統幾乎相反，機器人技術領域也影響機電一體化領域，在這裡不是需要多物理學科，而是計算機科學領域來應對非結構化和不斷變化的環境，在機器人技術方面，開發方向是視覺、地圖和本地化，因此不僅要了解環境（“世界建模”）還要了解人工智能（AI）領域，這已經是數十年的承諾但可能會在未來迅速發展，未來幾年由於即將推出的自動駕駛汽車，這兩個領域目前都處於加速階段，在動力總成（即電力傳動和變速箱）領域以及計算機科學的應用（例如現代汽車中的傳感器）領域，汽車行業的破壞是巨大的，包括實現的自主功能的迅速發展實際上，這與機電一體化，人工智能，控制系統有關！</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">機器人技術領域（包括自動駕駛汽車）可以被視為機電一體化領域之外的一個單獨的研究領域，但是例如工業機器人的速度要求或外科機器人（例如圖2.5的Preceyes機器人）的精度要求必須包括在內，機器人動態行為的描述，從剛體建模到柔性系統的轉變直接使其成為機電一體化的核心，系統工程思想和系統拓撲優化也是如此，在車輛的混合動力系統中也是如此，那麼機電一體化在哪裡結束而機器人技術在哪裡開始呢？</span></p>
<p class="c14"><span><img alt="" src="https://lh5.googleusercontent.com/Pm3GnuzUxCwVcE6Bpr-8cuzDXGXSm3BZGJ6SHcS27TmntHbXZdF1cSuTQ46eLpgUIs85Th2TbQSLqQPwzlwOZ6OEUCJh6iYmnz-CQEiWclxXB79gjW84FOoRWAxUdrA97Diwtd8" title=""/></span></p>
<p class="c0"><span class="c1">2.6網絡物理系統，智能產業和物聯網</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">從分散式機電一體化系統向聯網系統的轉變被稱為網絡物理系統領域，指的是控制論領域，研究的問題是如何保證穩定性，圖2.5 Preceyes眼科手術機器人[5]以及數據包（信息）丟失期間或之後的性能，以及如何處理可變延遲，該領域甚至離機電一體化的硬件還很遠，但是發展如此之快以至於我們應該問一個問題，即如何在遠程狀態監視和服務領域中將網絡控制系統的潛力納入其中，在接下來的十年中物聯網（IoT）的爆炸式增長進一步要求找到該問題的答案[6]。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">機電一體化將滿足物聯網的一個應用是我們製造業的未來。工業4.0或智能工業的關注點是關於聯網的現代工業自動化。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">•如果共享物流知識優化一個工作站的性能作為整個物流或運營的一部分，如果生產設施中的服務和維修可靠，則對於通過製造工廠的貨物流意味著什麼？工作站是否靈活並且可以適應？</span></p>
<p class="c0"><span class="c1">•這對工業機器人和智能機電一體化生產設備意味著什麼？</span></p>
<p class="c0"><span class="c1">•這將如何影響我們的機電設備和產品的設計要求？物聯網不僅會改變現代化的工廠，據估計到2020年將有500億台設備連接到互聯網，這意味著它將進入我們的家庭，家用設備以及汽車，當可穿戴電子設備被進一步推動時，我們被傳感器包圍我們只需要朝著致動的一步就可以閉合環路，並由此再次進入機電一體化的世界[6]！</span></p>
<p class="c0"><span class="c1">2.7指向集成系統</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">觀看這些發展我們可能會質疑機電一體化到底是什麼或將是什麼，機電一體化是否受到干擾？它已經蒸發到系統工程中了嗎？它是否是支持學科的一部分？它是否擴大成為網絡物理的中堅力量？而且，如果生物系統也將具有技術設備（人類互聯網），那麼機電一體化學科的作用是什麼？我們應該如何在機電一體化思維方面對人們進行教育？在圖2.6中，使用系統工程的作用來實現學科和技術貢獻的必要整合。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">在本書中許多提到的發展將得到解決，我們不會對機電一體化的未來及其教育有確切的答案，但是我們也知道由於我們無法預測未來因此它應該是強大且適應性強的！我們肯定知道技術發展的步伐正在加快因此我們也應該如此！</span></p>
<p class="c14"><span><img alt="" src="https://lh6.googleusercontent.com/FoNrdkVq4Kayh5h__KMMxIfB-WEO4_TGMAgLZlni8oY98HLS3EdHKpH2mSb08fcYcxlna_L5oiypOx4bCNl9EnFm-K5CGSmrsa4Ote_kPabiRvoH3EXMgqc74dVhqyDmToM8-vI" title=""/></span></p>
<p class="c7 c14"><span class="c9"></span></p>
<p class="c14 c7"><span class="c9"></span></p>
<p class="c14"><span class="c9">Ch3機電一體化的未來挑戰</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">3.1引言</span></p>
<p class="c0"><span class="c1">在航空航天工業中掌握機電一體化系統的設計是一項主要要求，確實程序成本的很大一部分花在了這些系統的設計上，這也代表了產品性能的很大一部分。 在本章中我們將揭露工業界在機電一體化領域未來幾年將面臨的一些主要挑戰，這些挑戰涉及設計機電一體化系統其驗證/確認及其操作。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">3.2設計中的挑戰-架構和規模</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">3.2.1使用模型確定體系結構的大小</span></p>
<p class="c0"><span class="c1">嵌入式技術系統的物理體系結構，例如圖3.1a [1]的飛行控制系統的機電執行器或圖3.2b [2]的供電網絡的電力電子模塊是來自不同技術的組件的組合，Van der Auweraer等人的工作、[3]和Hehenberger等……[4]強調了這樣的多域系統的設計需要不同的建模層，如圖3.2所示：</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<ol class="c4 lst-kix_list_7-0 start" start="1">
<li class="c3"><span class="c1">機電一體化層必須考慮組件之間的功能和物理耦合，通常使用0D / 1D模型[3]（也稱為集總參數模型）完成此級別的建模，以代數方程、常微分方程（ODE）或微分代數方程（DAE）表示</span></li>
<li class="c0 c11"><span class="c1">基於幾何表示在上一層中需要一個特定的域層來描述性能極限和參數，特定域現象通常通過偏微分方程（PDE）表示，對於這種水平的建模可以使用解析模型來簡化幾何或者對於復雜的2D和3D幾何，例如通過使用數值逼近法（例如有限元方法（FEM））來實現。</span></li>
</ol>
<p class="c0"><span class="c1">從系統集成商的角度出發，功率元件的設計應允許通過多種相互作用的技術來優化組件的尺寸和規格，該系統級設計與組件設計不同需要在機電一體化層中使用專用模型來表示特定領域層的關鍵信息[5-7]。</span></p>
<p class="c0"><span class="c1">被Budinger等人稱為“估計模型”[7]，它們使設計人員能夠輕鬆考慮多個設計約束，這些模型直接和明確地將一些主要特徵（例如組件的整體尺寸）鏈接到大小確定[5]和優化[1]所需的次要特徵及估計模型所需的能力如下：</span></p>
<ol class="c4 lst-kix_list_8-0 start" start="1">
<li class="c3"><span class="c1">提出易於處理並在不同計算工具中實施的表格。</span></li>
<li class="c3"><span class="c1">使自己易於進行分析操作。</span></li>
<li class="c0 c11"><span class="c1">可在與最初使用它們的區域稍有不同的區域中重複使用。</span></li>
</ol>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">為了滿足這些約束而我們通常使用簡化的分析模型，其中比例定律已被證明可以有效地代表大範圍變化中的物理現象[6]，但是這些模型僅在特定條件下有效，其中可以提到幾何形狀和材料相似性以及行駛物理現象的唯一性。</span></p>
<p class="c0"><span class="c1">對於系統設計人員而言模型應盡可能具有預測性，在這種情況下，能夠精確預測物理現象的詳細有限元模型仍然很耗時。儘管最近有工作在減少模型階數上，但在初步設計階段，有限元模型的計算成本仍然很高。使用元建模技術，因此，[7，8]為此很有趣。機電設計的挑戰是開發元建模技術，該技術專門用於從集成商的角度選擇系統組件，Budinger等人的論文[7]提出了一種基於比例定律的元建模方法，該方法從局部數值模擬（FEM）中提取估計模型的簡單全局表達式。</span></p>
<p class="c0"><span class="c1">為了滿足這些約束通常使用簡化的分析模型，其中比例定律已被證明可以有效地代表大範圍變化中的物理現象[6]，但是這些模型僅在特定條件下有效，其中可以提到幾何形狀和材料相似性以及行駛物理現象的唯一性，對於系統設計人員而言模型應盡可能具有預測性，在這種情況下能夠精確預測物理現象的詳細有限元模型仍然很耗時，儘管最近有工作在減少模型階數上但在初步設計階段有限元模型的計算成本仍然很高，因此[7，8]為此很有趣。機電設計的挑戰是開發元建模技術，該技術專門用於從集成商的角度選擇系統組件，Budinger等人的論文[7]提出了一種基於比例定律的元建模方法，該方法從局部數值模擬（FEM）中提取估計模型的簡單全局表達式。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">3.2.2機電一體化設計學科</span></p>
<p class="c0"><span class="c1">系統篇</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">圖3.1中系統的設計受到以下主要方面的驅動，以滿足各種要求：機身與驅動負載之間的集成（質量，幾何包絡），耐環境（熱和振動），瞬時功率和節能 ，動態性能，使用壽命，可靠性，對故障的耐受性或耐受性。 表3.1總結了這些不同的設計觀點以及基於模型的設計可能的關聯建模級別。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">優化此類系統時這些多種設計觀點產生了真正的挑戰，為了在同一循環中考慮這些標準來自多學科設計優化（MDO）的工具可能會有用[8]，MDO是工程領域，它使用統計和優化方法來解決設計問題，這些問題同時包含了以2D / 3D FEM分析，0D / 1D模擬和代數計算為代表的所有相關學科，每個特定的計算都被視為一個黑匣子可以直接調用它並通過實驗設計（DoE）進行分析，所有計算都可以鏈接在一起並用於設計探索、靈敏度、優化和穩健性分析，iSight [9]、Optimus [10]和ModelCenter [11]是此類框架的示例。</span></p>
<p class="c0"><span class="c1">優化任務需要較少的模型計算時間，替代模型或元模型[8]是另一種模型的簡化或近似描述模型，可以用於表示機電一體化層中的特定領域層模型（FEM），機電一體化層通常在時域中處理動態系統並使用瞬態時間仿真，但是在設計優化期間，依靠評估負載曲線的主要諧波來近似時域行為的方法[12]可能很有吸引力。</span></p>
<p class="c0"><span class="c1">這些優化和統計支持工具允許以自由選擇的順序鏈接設計過程的步驟，但是它們在選擇如何構造計算中的連接或將哪些參數作為設計參數，約束或目標考慮在內時沒有提供幫助。</span></p>
<p class="c0"><span><img alt="" src="https://lh4.googleusercontent.com/orxbiRIuzcklA6XcwFzJzLcxygPsKy2ItNqKuauEc4wKechO-lr5BK_l66AxpDaiiU491Jm-XsAxqFrLRDjTyWUNWd2CiQopVaWjLKs8TmgAaInaz8uFulzTAEfCIVvTbtHxQH0" title=""/></span></p>
<p class="c0"><span class="c1">基於知識的工程（KBE）是一門結合了基於知識的方法和計算機輔助設計的學科對設計支持也很有用，KBE軟件包專用於集中特定產品設計的所有知識和專長，這些環境中使用的科學概念和方法如下：</span></p>
<ol class="c4 lst-kix_list_9-0 start" start="1">
<li class="c3"><span class="c1">知識庫和計算機輔助設計：使用非定向的代數方程式（聲明性方法）來充分利用組件的知識[13]。這些組件可以輕鬆組裝以描述不同的體系結構。</span></li>
<li class="c0 c11"><span class="c1">約束網絡，圖論和優化：以聲明形式最初定義的一組方程式經過定向，以便獲得可用於優化算法的計算程序。</span></li>
</ol>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">可以通過符號計算、間隔計算或人工智能來支持對等式的適應或分析。這些KBE工具可以是：</span></p>
<ol class="c4 lst-kix_list_10-0 start" start="1">
<li class="c3"><span class="c1">鏈接到Genus Designer [14]中的CAD軟件，該軟件捕獲配置規則並為Solidworks執行過程自動化。</span></li>
<li class="c3"><span class="c1">如Enventive [15]中所述，專門用於平面機構的概念設計（優化，公差，靈敏度分析）；</span></li>
<li class="c3"><span class="c1">開發了多個領域，例如FST研究所軟件（TUHH大學），該軟件在相同的基礎上支持飛機升力機構[16]，液壓網絡[17]和EMA的初步設計；</span></li>
<li class="c0 c11"><span class="c1">常規語言，例如TKSolver [18]、Ascend [19]、Cades [20]、Design 43 [21]或PaceLab suite [22]，它們通常是說明性語言，可以根據不同的輸入使用一組代數方程式在設計目標上。</span></li>
</ol>
<p class="c0"><span class="c1">這些工具可以為設計人員提供有趣而重要的幫助，尤其是當系統由於多種技術而變得複雜時，結合MDO工具和專用的元建模技術它們可能代表機電一體化系統設計的未來。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">3.2.3綜合最佳架構的能力</span></p>
<p class="c0"><span class="c1">在設計機電一體化系統時，可以在體系結構級別設想許多解決方案選擇最合適的體系結構的任務是一項複雜的任務，目前主要通過手動定義評估和比較設想的體系結構來完成，在體系結構級別使用設計綜合和優化技術可以使設計人員設想更廣泛的解決方案，其中包括潛在的創新解決方案並在形式上進行比較（使用定義明確的指標）用以選擇合適的解決方案。</span></p>
<p class="c0"><span class="c1">工程設計綜合[23]是一套技術，可基於對人工製品的目的其預期特性和設計知識（明確形式化或提取的）的知識對工程人工製品（2D / 3D形狀、建築等）進行綜合。優化技術迭代地修改一些初始解決方案（通常是隨機生成的）以優化所測試解決方案的特性，但是他們幾乎不考慮設計知識以生成可行的解決方案。</span></p>
<p class="c0"><span class="c1">耦合設計綜合和優化可以生成可行的解決方案，並找到性能最佳的解決方案。由於探索的設計空間可能更大並且該過程不受認知偏見（例如信念）的影響，因此它通常比手動過程更有效，但是這需要能夠評估任何生成的解決方案以及所有定義的選擇，標準（優化目標/約束）這種類型技術的使用示例是機器人手臂[24]、真空吸塵器[25]或飛機駕駛艙[26]的設計。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">3.2.4機電整合的安全性和可用性研究系統篇</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">可靠性，可用性，可維護性和安全性（RAMS）標准通常是在設計過程中進行的研究的一部分。為了針對這些標準（可靠性，可用性，可維護性等）量化不同體系結構的性能，必須對每種考慮的替代方案進行大量此類研究，當前這些研究由建立機電系統RAMS模型並對其進行分析以得出結論的專家進行，RAMS模型通常使用專門的形式來構建，例如Petri網、貝葉斯網絡、可靠性框圖或更高級的語言，例如Altarica [27]和Figaro [28]。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">為了加快研究速度，將RAMS研究與（描述性或行為）體系結構模型聯繫起來將是一個優勢，實際上RAMS研究期間可以重用設計模型中嵌入的許多信息，第一種方法考慮使用RAMS數據（故障模式，可靠性比率等）豐富設計模型，以便能夠自動生成RAMS模型。例如，SysML [29]模型（具有特定配置文件）可用於自動計算系統級故障率[30]，另一種方法考慮將設計模型鏈接到RAMS模型確保RAMS模型的一致性，在MODRIO項目[31]的框架中，開發了一個原型以從Modelica [32]模型和Figaro知識庫[33]自動生成Figaro模型，使用Modelica特定的構造從知識中聲明與Figaro塊的對應關係邊緣基礎和其他必要信息。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">3.2.5產品的功能虛擬表示</span></p>
<p class="c0"><span class="c1">機電系統的設計和集成是一個多學科的設計過程需要多個領域進行協作和交換信息，在當今的大型公司和擴展型企業中掌握這些信息流對於提高設計效率至關重要。</span></p>
<p class="c0"><span class="c1">改善團隊之間溝通的一種方法是共享集成了所有觀點的產品的通用虛擬表示，這種表示方式使不同的團隊可以查看其他團隊的約束並始終可以訪問設計的最新版，此外它還可以在仿真過程中考慮來自其他領域的影響。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">綜合觀點還可以為決策提供更堅實的基礎因為它可以了解所有相關學科的所有限制和目標，這種表示形式的主要技術推動因素是能夠在使用不同工具和數據格式的不同團隊之間交換工程數據，以及能夠集成來自不同學科的模型的能力。</span></p>
<p class="c0"><span class="c1">3.3驗證和驗證中的挑戰</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">3.3.1虛擬驗證系統的能力</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">機電一體化系統的驗證對工業界（尤其是在航空航天業中）是一項非常昂貴的任務。確實，這既需要係統可用，又需要開發和製造測試平台，而這些測試平台通常無法在程序之間重複使用。降低測試成本的一種方法是虛擬測試。該實踐旨在開發虛擬手段（系統模型和系統仿真環境）來測試系統並驗證其是否符合要求。例如，實際機翼上的測試可以用有限元模型代替。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">虛擬測試的主要好處是成本，因為虛擬測試台的成本通常比實際測試台低得多並且通常可以從一個程序重用到另一個程序，確實許多系統在程序之間都是相似的並且它們的模型通常可以在有限的範圍內適應新設計的需要努力，不太明顯的好處是虛擬測試台可以在比系統在其生命週期中遇到的實際刺激更近的條件下刺激系統，例如在機翼彎曲測試中載荷局部施加在實際的試驗台上，而載荷則可以均勻地施加在虛擬的試驗台上從而以更準確的方式表示實際載荷，在系統模型中某些方面（例如熱效應）也可以更輕鬆地考慮到，而如果需要進行實際測試則它們需要非常昂貴的測試手段，要啟用虛擬測試必須很好地管理驗證過程的多個方面，首先必須對模型及其仿真環境進行驗證，這可以通過將結果與測試台數據或飛行測試數據進行比較來完成，在這方面需要模型校準和不確定性管理技術。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">3.3.2正式向模型供應商發出模型請求</span></p>
<p class="c0"><span class="c1">模型越來越多地用於在系統上執行驗證和確認（V＆V）活動，這些模型通常由系統的供應商（內部或外部客戶）設計，但是在功能有效性範圍精度等方面能夠陳述模型期望的內容仍然是一個挑戰，實際上請求者對總體仿真環境（即其他交互模型，仿真輸入等）具有很少的看法，而很少以正式的方式傳達給模型開發者，在將預期模型實際提供給模型請求者之前這通常會導致多次迭代。</span></p>
<p class="c0"><span class="c1">最近模型身份證被提出作為模型要求的標準描述[34]，MIC允許描述模型的某些所需特性以指導模型的開發，首先必須定義模型的接口以描述模型的端口和交換的變量，第二模型信息的四個部分必須填寫如下：</span></p>
<ul class="c4 lst-kix_list_3-0">
<li class="c3"><span class="c1">物件-型號名稱、粒度級別、參考文檔</span></li>
<li class="c3"><span class="c1">對像上下</span><span class="c17"></span><span class="c1">文用法-時間計算、工具</span></li>
<li class="c3"><span class="c1">方法-模型尺寸、方法、線性</span></li>
<li class="c0 c11"><span class="c1">模型質量-準確性、驗證、確認</span></li>
</ul>
<p class="c0"><span class="c1">這種標準化模型規範的另一潛在用途是對現有模型的重用，實際上對模型的特徵進行形式化可以在模型數據庫中進行後搜索，並可以在不同的上下文中重用模型。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">3.3.3在工業合作夥伴之間交換和無縫集成模型的能力</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">關於構建用於驗證機電系統的多系統仿真平台的目標，主要要素是交換和集成模型的能力，目前模型集成商傾向於迫使其供應商使用一種工具並遵循特定的建模程序（例如AP2633 [35]），在這方面模型供應商希望使用自己的工具對系統進行建模，因此能夠交換和集成來自不同工具的模型將是巨大的進步，功能模型接口（FMI）計劃[36]通過為動態模型的交換和協同仿真提供獨立於工具的標準而朝著這個方向發展，它允許生成“中性格式”模型（以C代碼和xml1文件的形式），這些模型可以無縫集成在兼容平台中。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">當前大約有70種工具支持該標準，這些標準模型交換形式的使用提供了靈活性因為可以使用許多不同的工具來開髮用於仿真平台的組成模型，因此模型提供者可以自由選擇和更改其首選工具而不會影響整個仿真框架，在模型集成商方面還可以確保靈活性，因為集成平台可以在一組可用工具中進行選擇和更改而不會影響現有模型。</span></p>
<p class="c0"><span class="c1">這種類型的標準還可能替代內部開發的工具之間的許多點對點接口，這些工具是為滿足特定需求而內部開發或由工具供應商出售的，對於公司而言這可以節省大量開發或許可成本。</span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">3.3.4通過模型對機電系統進行形式驗證</span></p>
<p class="c0"><span class="c1">在早期設計階段檢測系統缺陷一直是基於模型的系統工程（MBSE）的核心，以減少全球開發時間同時提高最終產品的質量，迄今為止仿真是驗證開發中系統行為的最常用方法，但是存在一個固有的主要缺點即有限數量的測試方案的局限性。</span></p>
<p class="c0"><span class="c1">正式的驗證技術可以證明模型確實符合其規範即使情況是無限的，其中模型檢查能夠以自動化過程在計算機上執行驗證，在航空航天、鐵路、微型計算機等高科技工業領域以及更普遍地在開發任何關鍵的嵌入式系統時，使用模型檢查已經是一種普遍做法以確保獲得最佳的可靠性能力，技術和工具已經發展起來克服了模型檢查的某些原始限制，如今可以處理具有連續和離散零件的物理模型而這被稱為混合模型檢查，這開闢了新的應用前景尤其是在機電一體化領域。</span></p>
<p class="c0"><span class="c1">在當前的現有技術中，混合模型檢查器通常限於證明安全性（即係統將永遠不會進入一組特定的狀態）因為它們經常依賴於過度逼近，這使他們成為證明飛機避碰機動性正確性的良好候選人。</span></p>
<p class="c0"><span class="c1">圖3.3顯示了另一個案例，衛星的任務是根據請求捕獲地球圖像並在可見時將其下載到地面站，目標是根據特定的地面站配置和每個軌道的最大請求數量，正式驗證衛星的存儲緩衝區不會超出，請求是離散的而數據轉移是連續建模的。</span></p>
<p class="c0"><span class="c1">混合模型檢查器在表達能力（例如它們支持哪種微分方程）和它們提供的過逼近方法方面彼此不同，當證明安全性還不夠時混合定理證明如KeYmaera [37]可以用作機電一體化背景下的另一種形式驗證選擇，這些嘗試使所需屬性的數學證明自動化，但是通常需要用戶在演示過程中進行一些高級輸入才能得出結論這對於復雜的系統可能非常棘手。</span></p>
<p class="c0"><span><img alt="" src="https://lh5.googleusercontent.com/wW2xkCCGcA9UPzpdSyukQJpBV7n0c553xRNca6NUgKUObCeCBKDtcNusRdhepV4NfXoXljuiB8lWo9pc1uteonGjAUGQQA7hvZQZRtfzqDl4K5ngHndiiER6sJI0TbrP-8J3KxM" title=""/></span></p>
<p class="c0 c7"><span class="c1"></span></p>
<p class="c0"><span class="c1">3.3.5優化測試活動的能力</span></p>
<p class="c0"><span class="c1">有時，由於復雜的建模偽像或可伸縮性問題對機電一體化系統進行形式驗證是不可行的，不論是否可能一旦構建了產品以檢查其是否符合規格模型並根據要求對其進行驗證仍然需要進行測試活動，在任何情況下都可以執行有限數量的測試用例（先在模擬中，在現實生活）必須找出最相關和最具代表性的模型。</span></p>
<p class="c0 c15"><span class="c1">趨勢是自動生成最佳測試用例有兩個主要因素決定如何完成此任務，首先是測試選擇標準該標准定義了驅動測試用例生成的因素，其次是測試生成技術即實際產生結果的算法，兩者的典型示例在下面給出[38]。</span></p>
<p class="c0"><span class="c1">測試選擇標準：</span></p>
<ol class="c4 lst-kix_list_11-0 start" start="1">
<li class="c3"><span class="c1">結構模型覆蓋標準-這些利用模型的結構來選擇測試用例。他們根據從控制流到代碼的思想處理整個模型的控制流。</span></li>
<li class="c3"><span class="c1">數據覆蓋標準—想法是將數據范圍分為等效類，並從每類中選擇一位代表。通常通過邊界值分析來補充這種劃分，在邊界分析中，還額外選擇了由約束條件確定的數據範圍或邊界的臨界極限。</span></li>
<li class="c3"><span class="c1">需求覆蓋標準-旨在覆蓋所有受測非正式系統（SuT）需求。 SuT需求對系統或測試模型/代碼的可追溯性可以支持該標準的實現。幾乎所有測試方法都將其作為目標。</span></li>
<li class="c3"><span class="c1">測試用例規範-當測試工程師以某種正式符號定義測試用例規範時，這些規範可用於確定將生成哪些測試。明確決定應涵蓋哪組測試目標。</span></li>
<li class="c3"><span class="c1">隨機和隨機準則—它們大多數適用於環境模型，因為環境決定了SuT的使用模式，一種典型的方法是使用馬爾可夫鏈來指定預期的SuT使用情況配置文件，另一個示例是除了SUT的行為模型之外還使用統計使用模型。</span></li>
<li class="c0 c11"><span class="c1">基於故障的標準-這些標準依賴於通常會以故障模型形式設計的典型故障的知識。</span></li>
</ol>
<p class="c0"><span class="c1">測試生成技術：</span></p>
<ol class="c4 lst-kix_list_12-0 start" start="1">
<li class="c3"><span class="c1">隨機生成-通過採樣系統的輸入空間來完成測試的隨機生成。</span></li>
<li class="c3"><span class="c1">圖形搜索算法-專用圖形搜索算法包括節點或弧覆蓋算法，例如中文Postman算法2，該算法至少覆蓋每個弧一次。</span></li>
<li class="c3"><span class="c1">模型檢查-模型檢查是一種用於驗證或偽造系統屬性的技術，但可用於基於給定的反例來生成測試用例。</span></li>
<li class="c3"><span class="c1">符號執行-符號執行的想法是運行一個不具有單個輸入值而是具有一組輸入值的可執行模型。這些表示為約束。通過這種做法，將生成符號跟踪。通過使用具體值實例化這些跡線，可以得出測試用例。</span></li>
<li class="c3"><span class="c1">定理證明-通常使用定理證明來檢查直接出現在模型中的公式的可滿足性。在這裡，它使用數學過程來搜索模型的可能執行路徑，從而找到測試用例和反例。</span></li>
<li class="c0 c11"><span class="c1">在線/離線生成技術-通過在線測試生成，算法可以在測試執行期間對SuT的實際輸出做出反應，這個想法也用於實施反應性測試脫機測試意味著測試用例在運行之前就已生成，一組測試用例僅生成一次並且可以執行多次。</span></li>
</ol>
<p class="c0 c13"><span class="c1">最合適的測試生成技術通常取決於要處理的源模型的類型，一些方法是根據測試模型創建測試用例的而另一些方法則將設計模型作為輸入，如圖3.4所示兩者都可以是行為模型，但第一種描述了測試人員對SuT進行測試的方式（即他給出了哪些刺激以及他進行了驗證），而後者則描述了SuT的工作方式，因此觀點（測試者與實施者）以及目標（驗證與解決方案）不同。</span></p>
<p class="c0 c13"><span class="c1">3.4運營中的挑戰</span></p>
<p class="c0 c13"><span class="c1">3.4.1使用設計模型改善維護的能力</span></p>
<p class="c0 c6"><span class="c1">當前在航空航天系統的維護中很少重複使用設計模型。但是有關係統行為的知識可用於改善診斷預後和維護計劃，在診斷中行為模型可用於將對系統的觀察結果與某些故障模式或組件的某些退化相關聯。由於可以檢測到系統故障的根本原因而無需檢查所有部件，因此這允許以更準確和更快的方式估計組件的當前狀態（例如，過濾器堵塞）和維護操作的性能。</span></p>
<p class="c0 c13"><span class="c1">同樣預測活動會嘗試預測系統的未來狀態以便預測故障併計劃預防性維護任務。例如，通過分析傳感器傳來的數據來估算系統的剩餘使用壽命，就可以規劃特定的維護任務（例如，重新加註儲罐）預測所需的資源（備件）並相應地調整操作。</span></p>
<p class="c0 c6"><span class="c1">從技術上講使用模型進行診斷/預後通常需要狀態估計技術（例如線性回歸、卡爾曼濾波器）這些技術允許通過播放模型的某些參數（故障、降級）來最小化實際系統和模型上的觀測值之間的誤差，由於模型的幾種配置可能與觀察到的行為相匹配因此觀察到的變量的定義是有效診斷的主要驅動力，實際上由於所需的計算資源並非總是可以嵌入模型，但是可以根據透射遙測（離線PHM）在地面上完成診斷/預後任務。</span></p>
<p class="c0 c13"><span class="c1">3.4.2使用設計模型改善控制能力</span></p>
<p class="c0 c13"><span class="c1">設計模型用於改善操作的另一種用途是將其用於系統控制，實際上在某些情況下，有必要在系統的控制邏輯中使用行為模型中包含的知識，這稱為模型預測控制（MPC），如果系統動力學較慢（例如化工廠）或控制系統必須考慮以下因素，則MPC的使用特別適合系統的長期使用情況（例如計劃任務的資源使用情況），MPC的用法示例是能源管理例如可以在功率控制算法中使用混合動力推進車輛的簡單模型來優化燃油消耗和給定特定任務的電池使用，與經典控制算法相比這可以顯著提高性能，但是這種智能算法的認證仍然是一個挑戰。</span></p>
<p class="c0 c6"><span class="c1">而且由於嵌入式模型受實時需求的限制，並且由於設計模型通常不是為此類應用程序而設計的因此必須實現模型的簡化，這種簡化過程會在模型的實時性能和表示性之間進行權衡。</span></p>
<p class="c0 c13"><span class="c1">3.5結論</span></p>
<p class="c0 c13"><span class="c1">從工業角度看機電一體化系統設計中的一些主要挑戰已暴露出來，這種發展的主要動力是減少開發成本和時間以及在成本和性能方面改進設計產品，可以看出許多挑戰都涉及產品的虛擬化以改善其設計、驗證或操作。實際上，虛擬化可以以較低的成本在開發的不同階段提供更大的靈活性。</span></p>
<p class="c0 c6"><span class="c1">在設計中組件的多樣性和特定領域藉由機電一體化系統需要在設計過程中將FEM和系統級模型無縫集成，為此借助基於圖形的MDO方法，未來的工作可以集中在用於機電一體化大小調整活動和模型易於組裝的專用元模型上，而在V＆V中未來的工作應集中在機電系統的正式驗證上，因為它將大大降低認證成本。</span></p><h3>MechaEducFutureNeed</h3>
<p><span></span>40723210提供</p>
<p>原文pdf連結:<a href="https://drive.google.com/file/d/1AFADmyNrwprE7AesaFAecZZquIfzbLw-/view?usp=sharing">MechaEducFutureNeed.pdf</a></p>
<p>翻譯連結:<a href="https://s40723210.github.io/cd2020/downloads/MechaEducFutureNeed%E7%BF%BB%E8%AD%AF.pdf">MechaEducFutureNeed翻譯.pdf</a></p>
<h4 class="c17"><span><strong><span class="c5 c22 c26">Ch15機電一體化教育：滿足未來需求</span></strong></span></h4>
<p class="c2"><span class="c15 c7">15.1簡介</span></p>
<p class="c2"><span class="c0">在員工大會、會議和部落格上熱烈討論的所有主題中，未來的教育效果和相關性似乎總是在上升。教授們回想起自己的教育經歷和在學術界達到目前的地位而奮鬥的過程，這是因為目前缺乏數學和缺乏學生才能以及從硬設計轉變為即插即用的思維方式。軟件即服務（SaaS）、雲計算以及平台即服務（PaaS）和機電一體化系統之間存在明顯的脫節。</span></p>
<p class="c2"><span class="c0">  雖然從構成物聯網（IoT）的計算單元內部進行抽象可能會加快產品的發布速度，但在實際應用領域中工作的機電工程師卻正在考慮軟件及其原始碼的完整性、可靠性。實際環境中的時間，如何管理組件升級以及故障後的系統恢復。本章包含作者經驗中的真實經歷、困難、挑戰和討論主題，旨在突出機電工程師必須了解的知識並說明創新和技術靈活性的必要性。選擇本章的每個小節都是為了突出技術和非技術主題，這些主題應該成為機電一體化教育不可或缺的一部分。</span></p>
<p class="c2"><span class="c0">  在2014年6月於瑞典Karlstad,Sweden舉行的2014年機電一體化會議上，作者是受邀小組成員，進行了激烈的討論。他在製造系統集成行業和學術界工作了近五十年。本章中表達的是他本人的觀點，旨在發起討論，並希望在其讀者機構的教學人員和管理人員中實現機電一體化教育的真正進步。隨著教學交付機制從傳統的講課課堂遷移到更多的基於結果的教學大綱和技術增強的學習中，希望讀者能夠決定機電一體化和類似學科的最佳行動方案學習課程。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c15 c7">15.2教育經歷與就業</span></p>
<p class="c2"><span class="c0">對教育過程進行快速的審核，很明顯與專業相反，沒有機電一體化的真正知識。比較在大學甚至大學前的共同核心教育，不在本章的範圍之內。目的是強調如何構成未來工程學隊列的學生、教授與眾不同的相似元素，從而降低在線交付的效率。</span></p>
<p class="c2"><span class="c7">  儘管在撰寫本文時，在線教學可能處於上升之中，North Carolina Charlotte大學（UNCC）的教學中心列出了150種不同的教學方法，但不能肯定所有方法都適用於機電一體化。這些範圍從著名的</span><span class="c5">老師的演講</span><span class="c7">（排名第一）到</span><span class="c5">小組集體討論</span><span class="c7">（排名第150）。排名第106的是</span><span class="c5">技術和教學資源的使用</span><span class="c7">。 該章作者最喜歡冒險的是＃127</span><span class="c5">參觀民族餐廳</span><span class="c0">。 但是，什麼是最適合學生的呢？</span></p>
<p class="c2"><span class="c0">  有許多教學方法。 表15.1是Southern Nevada大學（CSN）網站的，並總結了可以與各種教學方式相關的一些教學方法。</span></p>
<p class="c2"><span class="c0">  學術讀者將隨時隨地聯想到他們機構中的課程是如何進行的。在完整的CSN網站之後，有興趣的讀者可能會發現這些方法如何轉化為有趣的在線環境。</span></p>
<p class="c2"><span class="c11 c7">15.2.1機構</span></p>
<p class="c2"><span class="c0">在美國，有一千多所擁有一所工程學校的學院和大學。如果增加歐洲、中國和印度的工程部門數量，則這個數字將大大增加。就課程而言，大多數學校都受到理事機構的監管（例如，美國的ABET），但是美國沒有通用的核心課程。</span></p>
<p class="c2"><span class="c0">  這意味著在機構A中所教的內容在機構B中可能是膚淺的，甚至根本沒有。在國外，問題更加嚴重。某些國家/地區的一些工程學校沒有通過其本身以外的會議。通過授予工程學學位，這些機構承諾為他們的畢業生提供好工作和更好的生活，甚至根本不認為他們在國內或國外都享有良好的工作。這對學生不利。</span></p>
<p class="c2"><span class="c8 c5">表15.1 教學方法和教學風格</span></p>
<table class="c18">
<tbody>
<tr class="c10">
<td class="c14" colspan="1" rowspan="1">
<p class="c17"><span><span class="c7 c24">方法</span></span></p>
</td>
<td class="c14" colspan="1" rowspan="1">
<p class="c17"><span class="c7 c24">註釋</span></p>
</td>
</tr>
<tr class="c10">
<td class="c14" colspan="1" rowspan="1">
<p class="c4"><span class="c0">演講</span></p>
</td>
<td class="c14" colspan="1" rowspan="1">
<p class="c2"><span class="c0">一種靈活的方法，幾乎可以應用於任何內容。 儘管講座可能非常吸引人，但它們使學生處於被動角色。經驗豐富的工作人員可以將他們的實際經驗融入課程材料中，以顯示班級的相關性。</span></p>
</td>
</tr>
<tr class="c10">
<td class="c14" colspan="1" rowspan="1">
<p class="c3"><span class="c0">講座討論</span></p>
</td>
<td class="c14" colspan="1" rowspan="1">
<p class="c2"><span class="c0">將講座與簡短問題期或一系列簡短問題期相結合。</span></p>
</td>
</tr>
<tr class="c10">
<td class="c14" colspan="1" rowspan="1">
<p class="c3"><span class="c0">示範</span></p>
</td>
<td class="c14" colspan="1" rowspan="1">
<p class="c2"><span class="c0">讓學生根據講師的表現學習過程或程序。學生可以參與示範和練習。</span></p>
</td>
</tr>
<tr class="c10">
<td class="c14" colspan="1" rowspan="1">
<p class="c4"><span class="c0"></span><span class="c0">模擬</span></p>
</td>
<td class="c14" colspan="1" rowspan="1">
<p class="c2"><span class="c0">模擬使學習者處於看似真實的情況下，他們可以做出決策並體驗決策的結果而不會冒險。</span></p>
</td>
</tr>
<tr class="c10">
<td class="c14" colspan="1" rowspan="1">
<p class="c3"><span class="c0">協同學習</span></p>
</td>
<td class="c14" colspan="1" rowspan="1">
<p class="c2"><span class="c0">學生通過相互討論與課程相關的問題和主題來處理信息並獲得知識。</span></p>
</td>
</tr>
<tr class="c10">
<td class="c14" colspan="1" rowspan="1">
<p class="c17"><span class="c0">合作學習</span></p>
</td>
<td class="c14" colspan="1" rowspan="1">
<p class="c2"><span class="c0">一小組學生一起解決問題或完成任務。</span></p>
</td>
</tr>
<tr class="c10">
<td class="c14" colspan="1" rowspan="1">
<p class="c4"><span class="c0"></span><span class="c0">實例探究</span></p>
</td>
<td class="c14" colspan="1" rowspan="1">
<p class="c2"><span class="c0">這涉及個人或學生群體一起分析案例，這通常是一種現實情況，旨在突出問題和解決方案。</span></p>
</td>
</tr>
<tr class="c10">
<td class="c14" colspan="1" rowspan="1">
<p class="c4"><span class="c0"></span><span class="c0">角色扮演</span></p>
</td>
<td class="c14" colspan="1" rowspan="1">
<p class="c2"><span class="c0">學生通過採用與之相關的不同角色來解決問題。角色扮演涉及識別，執行和討論問題。小心謹慎，這可能非常有效，特別是在系統工程的非技術方面，例如人力資源管理。</span></p>
</td>
</tr>
<tr class="c10">
<td class="c14" colspan="1" rowspan="1">
<p class="c4"><span class="c0"></span><span class="c0">基於問題和探究學習</span></p>
</td>
<td class="c14" colspan="1" rowspan="1">
<p class="c2"><span class="c0">講師給學生一個問題，學生必須通過收集數據，組織數據並嘗試進行解釋來解決。 學生還應該分析他們用來解決問題的策略。</span></p>
</td>
</tr>
</tbody>
</table>
<p class="c1"><span class="c8 c5"></span></p>
<p class="c2"><span class="c5"> <span> </span></span><span class="c0">為了解決這個問題，許多知名大學和學院都開設了在線和遠端研究生課程。 機電一體化，機器人技術和其他學科在旨在成為教育對象的領域中很受歡迎。</span></p>
<p class="c2"><span class="c11 c7">15.2.2學院教職員工</span></p>
<p class="c2"><span class="c0">大學教學人員、講師和教授最好是成熟的，並且具有一定的實際行業經驗。他們沒有經過真正的教學培訓，就按照所教的內容進行教學、理論豐富，並且與學生的興趣或最終職業無關。大多數教學人員在教學，課堂管理或法律和道德事務上都沒有或很少接受過正式培訓。</span></p>
<p class="c2"><span class="c0">  《美國新聞與世界報導》每年對排名靠前的學校進行排名，但該排名通常反映出研究支出，所授予博士學位的數量（如果適用），在其機構內擁有最終學位和研究員身份的員工人數。 該等級可以包括畢業率和保留率。 可以為每位工作人員規定教學方法，但是在合同續簽問題上，教學方法的重視程度肯定低於受資助的研究。</span></p>
<p class="c2"><span class="c0">  英國教學質量評估（TQA）等工作旨在強調和獎勵學校和學院的良好教學實踐，與研究評估練習（RAE）處理研究的方式幾乎相同。 優秀的研究人員和教學人員有責任在TQA和RAE評審中提高成績。 在美國，工程部門需要接受全國范圍內ABET的定期認證程序，但只能獲得學士學位。 但是，什麼是最適合學生的呢？</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c11 c7">15.2.3大學生</span></p>
<p class="c2"><span class="c0">舉例來說，在美國，許多工程專業的學生在相當集中的課程中花費了兩年多的時間（例如，電氣工程），並且可能在第一年或第二年選擇自己的專業。在進行這些研究的同時，學生將接觸到道德、法律問題和陳述。在歐洲，學生可以進入已經知道他們所選領域的課程，並經歷四年的主題學習。 一些學校在最後一年之前註入工作經驗，而另一些則從事最後一年的學生項目。</span></p>
<p class="c2"><span class="c0">  幾乎不用說，成功的學生將具有良好的學習技能和對工程學的興趣，而缺乏學習精神的學生則表現較差，並經常轉入其他（自認為更容易）的課程或機構。 這是一個眾所周知的結構，即學生在上大學之前如何學習科學、技術、工程和數學（STEM），這是該大學生選擇哪些研究領域的主要指標；這將在本章末尾顯示，在全球範圍內有所不同。儘管獲得了獎學金和經濟援助，但地理位置、需求和社會地位確實可以確定哪些機構對申請人可行。</span></p>
<p class="c2"><span class="c0">  全球的工科學校有些挑剔，要獲得學士學位，需要四年甚至五年的學習時間。 機電一體化當然是由學士，碩士和博士學位級別的人教授的，但通常是由熱情的工作人員擁護。 是否吸引學生攻讀研究生學位以幫助員工進行研究和教學，而不是行業僱用？ 這對學生最好嗎？</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c11 c7">15.2.4機電一體化用人單位</span></p>
<p class="c2"><span class="c0">現在想像一下，該學生已經成功地在一家技術公司找到了工作，該公司為本章的目的生產或使用機電一體化系統。這樣的雇主對專業知識有進一步發展他們的產品或服務的需求，並對即將畢業的畢業生或技術人員寄予厚望。</span></p>
<p class="c2"><span class="c0">  在法律和醫學專業中，創新者必須先完成居住才能獲得認證，然後才能執業，而在工程學中，成為一家機構的特許會員在很大程度上被認為是可選的、珍貴的且無關緊要的。 對於新員工來說，通常是經驗豐富的工程師，直到他們可以自己分配給項目專家為止。由此，讀者可以推斷出項目失敗的原因，成本超支的發生方式以及產品從未達到客戶預期的效果。 什麼對公司最合適？</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c15 c7">15.3機電一體化：現實世界中的小插圖精選</span></p>
<p class="c2"><span class="c0">以下內容包含了本章作者的經驗中的三個真實的事實短片，旨在反映機電一體化教育中的必要主題。出於保密原因，省略了公司名稱或公司名稱，但希望讀者會發現示例有用。每個小節將簡要描述一個真實的系統及其設計、問題如何自我呈現、問題的解決方法，最重要的是，機電技術工程師可以使用什麼教育技能來解決問題。為了更好地說明這一點，第一種情況比其他兩種情況更為詳細。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c11 c7">15.3.1注塑成型監控系統</span></p>
<p class="c2"><span class="c8 c5">總覽</span></p>
<p class="c2"><span class="c0">一家注塑公司與系統工程公司簽約，以設計和實施其主要場所的生產監控系統，該系統最多可運行40台高科技模塑機。 每天大約有35台機器定期運行，每天生產數千萬個塑料小零件。這些組件按重量包裝在盒子中，然後傳遞到質量控制和庫存中。 圖15.1顯示了一個典型的注塑（IM）工廠。</span></p>
<p class="c17"><span><img alt="" src="https://lh4.googleusercontent.com/FhlGlOWiy_4sT_dmVNXym8ElVKw0ex-Q9F6Qn1U1icLjv5-IiVw5NXc4P3XQdPJMaeqZ4b5S_lfzN21slnyVQuFeTnlzZoOjdjf-2J2T1aVM_p06lVEt27M8X8ryxm6dq8YdgBk" title=""/></span></p>
<p class="c2"><span class="c5">圖15.1</span><span class="c0">典型的美國注塑操作（由Rodon Group，Hatfield PA提供）</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c0">  工廠在逐個工作的基礎上生產各種物品。任何機器上的工作變更都需要花費大量的精力來清除先前的有色原始材料和必要的模具安裝，並且新的液態塑料會滲入系統中以用於下一項工作。機械師可能會多次循環機器，直到新零件完美為止，但是這些測試操作永遠不會出現在生產數量中。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c8 c5">要求摘要</span></p>
<p class="c2"><span class="c0">系統的要求包括以24×7為基礎對每台機器的每個週期進行測量，將實際性能與工廠工作指令進行比較，在整個工廠提供顯示屏以及定期下載 庫存數據到大型計算機。從數據完整性的角度來看，這實際上是很難做到的，因為並非所有的機器週期都會產生例如 技術人員進行新工作或清除卡紙。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c8 c5">系統設計</span></p>
<p class="c2"><span class="c0">與工業客戶多次會面後，圖15.2作為初步的系統設計出現了。在大多數工業自動化設置中，主要組件是相當標準的。可編程邏輯控制器（PLC）是工業過程控制代理、可抵抗斷電，並具有本地存儲、通信功能以及多個輸入和輸出數據端口。</span></p>
<p class="c2"><span class="c0">在設計了系統之後，在對系統進行了更詳細的現場檢查之後，提出了以下迄今為止無法預料的問題：</span></p>
<p class="c2"><span class="c0">1.如何長距離連接機器信息？</span></p>
<p class="c2"><span class="c0">2.如何在如此長的距離上連接所有系統設備？電信號都是低質量的，注塑機會隨機產生明顯的噪聲。</span></p>
<p class="c2"><span class="c0">3.顯示多少信息有用？</span></p>
<p class="c2"><span class="c0">4.操作員和技工如何提供特定數據進行顯示？</span></p>
<p class="c2"><span class="c0">解決這些問題後，實際上確實需要重新設計系統併購買其他軟件和硬件，然後對系統進行編碼和安裝。</span></p>
<p class="c17"><span><img alt="https://scontent.frmq2-2.fna.fbcdn.net/v/t1.15752-9/97107811_632633217288351_8921498280475492352_n.png?_nc_cat=100&amp;_nc_sid=b96e70&amp;_nc_ohc=bDSw5Vxox9QAX8blfUz&amp;_nc_ht=scontent.frmq2-2.fna&amp;oh=a3d085cc29e70198d4c95a4f98f6000d&amp;oe=5EDCAF60" src="https://lh5.googleusercontent.com/t6SQaeftb4Zf9XXUZVDn8BLtzb-IL4niE7gaZkiEsLO61DqYf2E7SGno03ARIuZU2NPuXtwrR_NCnINL19oVPxx_mRO3BTEoXGrrh3qPDoBo1D3TVDnpCjjRo02BXWgLPPb1h4c" title=""/></span></p>
<p class="c2"><span class="c5">圖15.2</span><span class="c0">初步系統設計</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c8 c5">問題領域</span></p>
<p class="c2"><span class="c0">在系統的日常運行中，出現了以下意外情況：</span></p>
<p class="c2"><span class="c0">1.在操作期間隨時可能出現凍結的隨機數據。</span></p>
<p class="c2"><span class="c0">2.主工廠電源中斷或停電後數據丟失。</span></p>
<p class="c2"><span class="c0">3.處理機器的維護和維修狀態週期。</span></p>
<p class="c2"><span class="c0">4.輪班報告顯示錯誤時間。</span></p>
<p class="c2"><span class="c0">  這些問題似乎表明了系統中的致命缺陷，但使用機電一體化原理可以解決。 本章作者的解決方案在15.5.1節中進行了概述。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c11 c7">15.3.2在小型計算機上執行大型機代碼</span></p>
<p class="c2"><span class="c8 c5">總覽</span></p>
<p class="c2"><span class="c0">一家公司正在使用大型計算機來執行高級CADCAM和圖形處理。每個設計站的成本超過50,000美元，大型機租賃和操作系統的每月成本超過100,000美元。 顧問找到了一家公司，該公司通過對小型計算機的主板進行一些細微的調整，找到了一種在價值2萬美元的小型計算機上運行大型機指令的方法。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c8 c5">發明概述</span></p>
<p class="c2"><span class="c0">圖15.3說明瞭如何通過使用專有固件修改小型計算機主板來由小型計算機訪問和執行大型機指令。虛線所示的示意圖是所需的唯一固件修改。小型計算機字的大小必須與從製造商處購買的大型機指令芯片組（32位）相當。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c8 c5">問題領域</span></p>
<p class="c2"><span class="c0">該系統運行良好，並且CADCAM應用成功，並且是傳統圖形工作站的廉價替代品。在升級小型計算機操作系統之後，系統完全無法運行。嵌入在CADCAM序列中的大型計算機指令突然導致微型計算機返回非法指令陷阱，並完全導CADCAM故障。</span></p>
<p class="c2"><span class="c0">  此問題表明系統中存在致命缺陷，最終被證明無法解決，導致該項目被終止。本章作者的解釋在15.5.2節中進行了總結。</span></p>
<p class="c2"><span><img alt="" src="https://lh3.googleusercontent.com/njplqTqzlSd9C2qxnNTU7ZzSMbfLgBmzxSc_LdyTTUpJrqwJ4eWHK4sguxd5uN5k_wN8uhcQScXveWqm-o5-yXfyVT8h8dVCdl57pxIxw8jv1hxBI7kgZSIc3b7P24vfrUkuHhE" title=""/></span></p>
<p class="c2"><span class="c5">圖15.3</span><span class="c0">修改後的微型計算機主板示意圖</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c11 c7">15.3.3機械不穩定的系統</span></p>
<p class="c2"><span class="c8 c5">總覽</span></p>
<p class="c2"><span class="c7">許多研究人員研究了各種將控制引入倒立擺裝置的方法。該系統適用於自適應、智能、進化和學習控制。 圖15.4是作者與之合作的一種此類鑽機的照片。本質上，手推車是在計算機命令下以</span><span class="c5">左右</span><span class="c0">模式驅動的。實驗被限制在一個兩米長的軌道上，兩端各有一個碰撞傳感器。推車上的桿可自由鉸接，但限制在±10°左右。如果系統超出範圍，則推車上的運動將停止。問題在於通過左右移動推車來平衡桿，不應與向上擺動桿平衡動作混淆。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c8 c5">問題領域</span></p>
<p class="c2"><span class="c0">兩個主要問題是確保系統從初始的隨機但合法的狀態開始使用其學習算法，以便控制器可以識別它並以控制偏移的形式啟動，並在手推車方向反轉時處理從動輪打滑 。15.5.3節概述了本章作者對第一個問題的解決方案的解釋。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c11 c7">15.3.4案件摘要</span></p>
<p class="c2"><span class="c0">對於上述三種情況中的每一種，如何解決這些有問題的情況在下面的15.5節中都有介紹。鼓勵讀者在閱讀本節之前與學生討論他們的想法。閱讀作者的評論後，讀者應該討論他們機構或公司中的哪些教育模塊可以使創新工程師解決這些問題？</span></p>
<p class="c17"><span><img alt="" src="https://lh5.googleusercontent.com/eznYtZ7fW-MZAdoIKHhj5_ERrqu28IScpTD_OJLzvgTRpKjzKvnGi78wPQZl_wloTalN10drllhXSy-MAdsz32TgR3MyT6rxRcx4tsNTr2A6oCpkNa1vynXuDILL5DmxJg6rKGs" title=""/></span></p>
<p class="c2"><span class="c5">圖15.4</span><span class="c0">手推車和桿子實驗台</span></p>
<p class="c2"><span class="c0">  也許我們的大學缺少教育經驗是對系統工程和系統集成的深入介紹。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c15 c7">15.4系統工程與系統集成</span></p>
<p class="c2"><span class="c0">在以上章節中給出的情況下。在15.3節中，系統組件、集成系統的設計，甚至系統在其全局範圍內（也稱為系統的系統）中的放置，都很大程度上取決於對系統工程和系統集成的理解 。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c11 c7">15.4.1系統工程</span></p>
<p class="c2"><span class="c0">可以在國際系統工程理事會（INCOSE）的網站上找到系統工程的最清晰定義：</span></p>
<p class="c2 c16"><span class="c19 c7">（INCOSE）...代表來自全球行業，政府和學術界的系統工程專業人士。它堅信，系統工程的基本原理在所有工程師的教育中都起著重要作用，無論他們的專業是什麼，以及與系統工程師一起工作但沒有工程背景的專業人員。</span></p>
<p class="c2"><span class="c0">  同一網站解釋了該學科的性質及其真正基於結果的重點。</span></p>
<p class="c2 c16"><span class="c19 c7">系統工程是一種跨學科的方法，是實現成功系統的手段。 它著重於在開發週期的早期定義客戶需求和所需的功能，記錄需求，然後在考慮整個問題的同時進行設計綜合和系統驗證。</span></p>
<p class="c2"><span class="c0">  具體來說，系統工程是一個集成範式，多年來，工程學院從來沒有教過它，前提是他們的程序專業的畢業生將在職業生涯的晚些時候接手。</span></p>
<p class="c2 c16"><span class="c7 c19">系統工程將所有學科和專業團隊整合為一個團隊，形成了從概念到生產再到運營的結構化開發過程。 系統工程考慮了所有客戶的業務和技術需求，目的是提供滿足用戶需求的優質產品。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c11 c7">15.4.2系統集成</span></p>
<p class="c2"><span class="c0">系統集成是計算機科學和IT領域眾所周知的一門學科，它的含義是使用即插即用範例從COTS（現成代碼）、SaaS（軟件即服務）和後期的雲端服務。在軟件領域，開放體系結構環境中的主要集成問題是系統和應用程序配置。在此活動中，集成商必須巧妙地將應用程序插入可能用另一種語言在外部編寫的代碼集。例如SAP®之類的企業軟件系統需要使用許多配置表格和數據操作，才能使製造公司從其複雜性和信息能力中受益。大多數問題來自硬件故障，互聯網問題以及術語和用法不當。</span></p>
<p class="c2"><span class="c0">  在機電工程系統集成中，機械、電氣、計算機和系統學科的結合產生了問題。在一個區域內求解可能會導致另一面突然失效。15.3.2節說明了項目是如何通過無故障而失敗的，如15.5.2節所述。實際上，微型計算機供應商不願對他們的操作系統進行簡單的修改才導致了故障。</span></p>
<p class="c2"><span class="c0">  計算機工程和計算機科學程序通常包括一些信息集成，數據庫和啟用互聯網的模塊。 總體上，正式的工程計劃很少涉及系統集成的課程。Warminki和Ikonomov認為：基礎工程課程未能教授以下領域的寶貴技能：</span></p>
<p class="c2"><span class="c0">•知識管理/文檔/召回和重用。</span></p>
<p class="c2"><span class="c0">•在跨職能的分佈式團隊中工作。</span></p>
<p class="c2"><span class="c0">•產品設計框架中的批判性思維。</span></p>
<p class="c2"><span class="c0">•設計方法，包括：將模糊的要求轉換為工程規範，故障模式識別和效果分析、總參數和公差產品設計、製造執行，作為團隊成員進行自動化手冊的分析和集成製造過程。</span></p>
<p class="c2"><span class="c0">  他們所在機構的這個問題正在通過詳細的動手項目解決，在該項目中，學生面臨要解決的實際問題。 在小組情況下，學生可以從事解決問題的活動，例如Scrum和其他類似的面向團隊的項目工作。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c11 c7">15.4.3實作與基本知識的教學</span></p>
<p class="c2"><span class="c7">這種基本項目的方法是引入了學生動手</span><span class="c5">彌補</span><span class="c7">教育價值與傳統的固體教育課堂教學的爭議。 常見的</span><span class="c5">邊做邊學</span><span class="c0">在簡單的教學情況下可能會很好地起作用，但在以上15.3節中給出的情況下是否奏效?急於付費客戶可以同等地學習專業知識嗎？在第15.2.4節的內容被低估了。</span></p>
<p class="c2"><span class="c0">  正式的工程程序，尤其是那些在認證控制下的程序，不願放棄更經典的類型，而傾向於機電一體化或系統工程。許多學校都推出了機電一體化的一兩年制碩士課程。這些在美國比在歐洲更受歡迎。歸根究底，主要是大學教授的經驗、熱情和專注心，信任他們能夠培養出具有道德，世俗明智的各個學科的合格工程師。許多項目工作都是在個人層面上進行的，與其他學生的互動很少，而在行業中，團隊合作的能力則是一種技能。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c15 c7">15.5案例問題的解決方案和教育資源</span></p>
<p class="c2"><span class="c0">下面概述為如何解決每個案例的問題區域，但是讀者可能希望與同事和班級討論其他解決方案。第一種情況的細節更為詳細，以說明機電一體化系統的複雜性，因為它位於真實的工業環境中。第二個重點是對操作系統和固件有相當深入的了解，第三個重點是機械設計和定時軟件的使用。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c11 c7">15.5.1注塑成型監控系統（範例15.3.1）</span></p>
<p class="c2"><span class="c0">本節介紹的問題的解決方案。 以下總結了15.3.1，但應清楚地理解，這並不是詳盡的清單。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c8 c5">問題（a）和（b）</span></p>
<p class="c2"><span class="c0">這些問題集中在長距離連接設備以及低質量和高噪聲電信號上。</span></p>
<p class="c2"><span class="c7"> <span> </span></span><span class="c5">解決方案</span><span class="c0">—使用短程調製解調器並檢查工廠屋頂中的所有電線屏蔽都可以解決此問題。更好、更昂貴的解決方案是使用光纖電纜進行重新佈線。</span></p>
<p class="c2"><span class="c7"> <span> </span></span><span class="c5">教育對象</span><span class="c0">—工程師需要熟悉遠距離的調製解調器、通信和光纖線連接。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c8 c5">問題（c）和（b）</span></p>
<p class="c2"><span class="c0">這些引入了良好的數據收集，顯示和工廠現場輸入的問題。</span></p>
<p class="c2"><span class="c7"> <span> </span></span><span class="c5">解決方案</span><span class="c0">-至關重要的是，由包括工業客戶和工廠車間人員在內的焦點小組決定要在車間上顯示什麼數據。在所討論的系統中，很明顯需要從操作員那裡收集車間數據。然後，這些數據確定了機器故障的必要性和性質等。必須安裝微終端，並使用數據融合技術將此數據集成到數據庫中。</span></p>
<p class="c2"><span class="c7"> <span> </span></span><span class="c5">教育對象</span><span class="c0">-系統設計人員需要對數據庫設計和融合以及人機交互有深入的了解。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c5 c8">問題（e）、（f）、（g）和（h）</span></p>
<p class="c2"><span class="c0">這些全都發生在系統的運行階段中。 在原始系統中，數據收集和所有數據庫操作將凍結，從而模仿斷電的影響。</span></p>
<p class="c2"><span class="c7"> <span> </span></span><span class="c5">解決方案</span><span class="c7">-工廠軟件的設計和實現需要一定級別的系統智能，以便可以檢測到臨時問題和故障並進行</span><span class="c5">自我修復</span><span class="c0">以避免數據丟失。實際的系統包括可編程邏輯控制器（PLC），其中嵌入了前端智能功能，可以在系統暫停或停止期間臨時存儲數據。</span></p>
<p class="c2"><span class="c7"> <span> </span></span><span class="c5">教學對象</span><span class="c0">-機電工程師需要了解文件鎖定和系統編程，以釋放鎖定的文件和文件夾。實時操作系統設計知識是必不可少的，因此熟悉可用的工業組件也是如此。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c7 c11">15.5.2在小型計算機系統上執行大型機代碼失敗</span></p>
<p class="c2"><span class="c8 c5">系統如何運作</span></p>
<p class="c2"><span class="c5">圖15.2</span><span class="c0">描述瞭如何購買專有固件來修改硬件。小型計算機主板利用了小型計算機的32位處理器狀態字（PSW）中未使用的17位。操作系統內核允許系統用戶訪問高優先級任務中的所有PSW位。PSW中包含位3，可捕獲指令錯誤。小型計算機嘗試執行大型機指令時正是設置了此位（第3位）。 如果執行程序檢測到此類事件，它將設置最後一個未使用的位（第17位），該位用於將執行定向到其他硬件以供執行。</span></p>
<p class="c2"><span class="c8 c5">失敗原因</span></p>
<p class="c2"><span class="c0">小型計算機供應商發布了對該操作系統的更新，該更新無辜地將該位（17）用於新的精緻打印功能。 操作系統軟件團隊花了許多時間來開發此新功能，該功能將使其所有其他客戶受益。CAD / CAM項目已取消。</span></p>
<p class="c2"><span class="c7"> <span> </span></span><span class="c5">教學對象</span><span class="c0">-為了使機電工程師能夠檢測到，這將需要相當高水平的計算機體系結構、系統編程和固件。順帶一提，先進的談判技巧可能已經保存了該項目！</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c11 c7">15.5.3機械不穩定的系統</span></p>
<p class="c2"><span class="c8 c5">隨機但合法的初始狀態系統</span></p>
<p class="c2"><span class="c0">許多桿和手推車系統都始於將桿垂直固定在軌道中心附近。釋放後，系統將啟動，過程繼續進行，但總是從幾乎相同的初始狀態變量值開始。這是系統中的真正缺陷。在這種情況下，為了使手推車和桿邏輯從隨機但可識別的初始狀態進入學習範式，有必要構造一個啟動子系統，該子系統將手推車沿一個方向驅動一段隨機時間，然後反轉購物車方向較短的隨機時間，然後再次反轉。這將使磁極從其最初的穩態靜止位置變為動態狀態，但不會使其獲得足夠的動量以至於失敗。在啟動過程中，控制系統監視狀態變量當啟動系統進入狀態時，系統的爆炸控制值與啟動值一致，因此啟動邏輯斷開，對系統有利。</span></p>
<p class="c2"><span class="c0">  還有許多其他這樣的示例，讀者可以使用這種方法根據自己的經驗選擇插入自己的示例。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c15 c7">15.6結論：本地解決方案帶來的全球性問題</span></p>
<p class="c2"><span class="c7">解決未來的教育方法</span><span class="c5">要懂得變通</span><span class="c0">，馬歇爾·麥克盧漢（Marshall McLuhan）說，布朗最近在《教育》雜誌上發表的一篇文章中引用了這一觀點。 布朗討論了諸如自適應學習技術、學習空間、學習分析和下一代學習管理系統之類的概念，並著重介紹了學生如何通過教學經歷或途徑進行學習。</span></p>
<p class="c2"><span class="c0">  這當然有真理的成分，但可能過於簡單化。能夠將研究或其他技術興趣帶入課堂的敬業教師不僅可以吸引班級的注意力，而且可以創造一個學習環境，使學生成為終身的學習者、道德和創新。再次看著15.5節。列出了可行的（和實際的）解決方案時，讀者應考慮在自己的機構中何處教授這些技能。</span></p>
<p class="c2"><span class="c0">  這件事不僅限於北美或歐洲，而且在中國、印度、新加坡、澳大利亞和許多其他國家通常被歸類為良好機構的情況下，也是全球性的不適。</span></p>
<p class="c2"><span class="c0">  一個現成的解決方案可能是更好地理解和使用諸如大學和IMechE、IET、IEEE、ASME等專業機構提供的持續專業教育（CPE）模塊。這樣的計劃可以幫助培訓更多的高級工程師，並填補新員工的空缺。為了更深入地了解機電一體化，許多機構都提供了授課式碩士課程，可以面對面或在線學習。在這些計劃中，學生已經是有學歷的工程師，因此可以在無需太多數學或基礎工程學複習的情況下專注於本章中描述的機電問題。</span></p>
<p class="c2"><span class="c0">  本章的目的是介紹一些機電一體化系統如何解決各種問題的概念，即使是在博士級別的學生，也可能沒有深入的指導，並且還不具備經驗豐富的工程師的才幹。由於數字每年都在如此迅速地變化並且由不可靠的來源提供，因此很大程度上避免了參考統計數據。</span></p>
<h4><span><strong><big>Ch16結論</big></strong></span></h4>
<p class="c2"><span class="c0">作者希望本書的讀者喜歡本文的基本研究主題和未來的願景。本章反映了這些主要主題的相互作用和集成，並試圖總結關鍵陳述。</span></p>
<p class="c2"><span class="c0">  應當指出，技術（機電）系統的不斷（發展）與多個學科（例如IT功能和組件）的更深層次的集成以及產品及其相關生產過程之間的詳細考慮是其中的一部分。 產品設計的主要趨勢。此外，一些合作夥伴（遍布全球）的參與和新業務流程的挑戰也起著重要作用。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c15 c7">16.1全球趨勢及其對機電一體化的影響</span></p>
<p class="c2"><span class="c0">近年來，一些機構已經對全球（巨型）趨勢進行了概述。它們在細節上彼此不同，但是主要的Top-ics參與了所有已發表的研究，如下所示：</span></p>
<p class="c2"><span class="c0">•人口變化（以及老齡化社會醫療系統）</span></p>
<p class="c2"><span class="c0">•流動性</span></p>
<p class="c2"><span class="c0">•全球化（以及勞動世界、濟、融的變化）</span></p>
<p class="c2"><span class="c0">•城市化（和個性化）</span></p>
<p class="c2"><span class="c0">•氣候變化和環境變化（以及能源和資源、持續性）</span></p>
<p class="c2"><span class="c0">•智慧型社會（以及無所不在的情報、數位文化）</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c0">對於2030年的製造業生產，Westkämper討論了以下四個主要主題:</span></p>
<p class="c2"><span class="c0">•創新的產品和流程</span></p>
<p class="c2"><span class="c0">•基於知識的製造工程</span></p>
<p class="c2"><span class="c0">•產品生命週期中的新業務模型</span></p>
<p class="c2"><span class="c0">•基礎設施和教育</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c0">所有這些趨勢的結果也是該技術必須向前發展。 因此，如本書各章所述，由於多種學科的結合，機電一體化產品具有很高的產品開發潛力。</span></p>
<p class="c2"><span class="c0">  經濟成功的主要部分是創新產品和工藝的開發。 術語創新包括新產品、服務或程序的發明、介紹和銷售。這不僅包括整個營銷過程，還包括社會和經濟影響。不論發明的質量如何，許多因素都會影響發明向創新的發展。在這種情況下討論的主要因素可以分為三類：技術、經濟和社會影響。 機電一體化領域是眾多創新的源泉。但是，大多數新發展都被認為是漸進式創新。在進行徹底創新的情況下，概念設計已被確定為產品設計中最關鍵的階段，因為成功的主要部分將在那裡建立。</span></p>
<p class="c2"><span class="c0">  在此早期階段做出的決定會對產品的未來發展產生重大影響。因此，對於整個產品的系統級別的需求定義至關重要。在系統級別上定義的要求應反映客戶的意願。為了確保所考慮的系統滿足要求，有必要將它們轉換為解決方案的屬性。系統的開發融合了來自不同工程學科（例如機械工程、電氣工程、控制工程等）的解決方案。因此，區分只能在系統級別上確保的特性和可以通過以下方法保證的特性非常重要單一的工程學科。因此，必須將不同的屬性分配給相關級別。為了實現此任務模型，必須在不同的層次級別上進行（特定學科模型和系統模型）。從這個角度來看，考慮到的特定方面的建模、模擬、評估和優化是未來機電系統設計的關鍵，前面幾章也提到了這一點。</span></p>
<p class="c1"><span class="c0"></span></p>
<p class="c2"><span class="c7 c15">16.2機電一體化未來地圖</span></p>
<p class="c2"><span class="c7">可以理解，不可能在一本書中討論機電一體化未來的所有方面。本書的目標是如何將挑戰歸類為主要主題，並從不同角度介紹具體方面。下面列出了常見的觀點，而</span><span class="c5">圖16.1</span><span class="c0">顯示了以下主題的地圖：</span></p>
<p class="c2"><span class="c0">•問題與挑戰</span></p>
<p class="c2 c16"><span class="c0">機電系統未來發展的主要動力是減少開發成本和時間，以及使用新技術改進設計產品。這主要涉及產品的虛擬化，以改善其架構設計、驗證和確認、生產或運營。實際上，虛擬化可以以較低的成本在開發的不同階段提供更大的靈活性。設計產品與生產系統之間的交互在工業4.0（或智能製造、網絡物理生產系統等）的方向上起著重要作用。</span></p>
<p class="c2"><span class="c0">•系統設計、建模和模擬</span></p>
<p class="c2 c12"><span class="c0">機電一體化產品的結構更複雜，並且將具有更多的計算能力和網絡連接性。 這就導致了在理解複雜系統的困難方面面臨的擴展設計挑戰，其中模擬將是掌握這些困難的關鍵技術。機電系統設計過程的未來趨勢，方法和模型必須被認為是將復雜系統轉變為網絡物理系統或物聯網的全球集成的不可替代的推動力。這些用於機電工程的設計過程必須支持新服務的開發或為將來的工廠實施工業互聯網。</span></p>
<p class="c2"><span class="c0">•製造技術</span></p>
<p class="c2 c12"><span class="c7">物理創建機電設備和系統的未來技術（例如增材製造或增材製造）將為設計過程帶來新的可能性。 從</span><span class="c5">為組裝設計</span><span class="c7">方法到</span><span class="c5">直接製造</span><span class="c7">方法將發生轉變。 因此，我們無需再進行後期組裝和使用緊固件，從而可以快速生產堅固的設備。如今，典型示例包括3D打印傳感器、3D打印電子產品和集成多種材料，這是生產</span><span class="c5">完全集成產品的基礎機電設備</span><span class="c0">。</span></p>
<p class="c2"><span class="c0">•物聯網和網絡物理系統</span></p>
<p class="c2 c12"><span class="c7">機電一體化的當前趨勢涉及將計算和物理過程更深入地集成到網絡機電一體化系統，網絡物理系統（CPS）或物聯網（IoT）中。 因此，通信、集成和數據分析被認為是必不可少的，因為物聯網的範圍將取決於各種系統和標準的整合，</span><span class="c5">低層</span><span class="c7">（本地）系統相互通信而</span><span class="c5">高層</span><span class="c0">（全局）通信。系統典型的應用是自動化、生產、運輸、能源、醫療保健和農業。值得稱讚的潛在的社會和經濟利益是合理的，但尚未得到保證。</span></p>
<p class="c2"><span class="c0">•通信和信息技術</span></p>
<p class="c2 c12"><span class="c0">這裡的關鍵問題與促進建立多學科合作夥伴關係有關。 沒有這樣的伙伴關係，就很可能失去在產品設計和服務交付方面進行創新的機會。因此，建立穩健的伙伴關係工作形式的組織更有可能獲得競爭優勢。與此相關的是，需要建立一種新的方法來確保和管理用戶同意，同時確保如果用戶選擇退出數據共享，則不會造成經濟或功能上的不利影響。</span></p>
<p class="c2 c12"><span class="c0">這反過來又引發了有關如何與法律/法學從業人員一起對技術人員進行教育和宣傳的問題，以便在開發、實施和應用新技術時滿足法律和社會要求。</span></p>
<p class="c2"><span class="c0">•機電一體化教育</span></p>
<p class="c2 c12"><span class="c7">機電一體化正朝著複雜物理組件的設計商品化的未來發展。特殊的挑戰是學科多樣性，因此機電一體化教育必須在</span><span class="c5">技術知識</span><span class="c7">、</span><span class="c5">基礎技術技能</span><span class="c7">和</span><span class="c5">個人技能</span><span class="c0">之間尋求平衡，任何教育計劃都應以支持這些領域為導向。機電一體化課程必須涵蓋的典型主題與產品生命週期保持一致，包括創新、創造力、系統思維、工程和集成，這些方法結合了基於項目和問題的學習方法。機電一體化教育便成為應用新技術的基礎。</span></p>
<p class="c2" id="h.gjdgxs"><span><img alt="" src="https://lh5.googleusercontent.com/pMaSTQ78tPfMZX_vNDDloIYaLrEChs56-YQI-Db2DhJhcxV4L-TJtUVk8I97r1L2ns8Thtew7YzzoCbExqrAF4bX8MAtiIDyQtwy8tCVBA3dJA_LIUV5d1bj1go0j8O7KzUrblg" title=""/></span></p>
<p class="c2"><span class="c5">圖16.1</span><span class="c0">機電一體化未來地圖</span></p>
<h1>Final Project</h1>
<p><span>40723210報告連結:</span><a href="https://s40723210.github.io/cd2020/downloads/finalproject.pdf">finalproject.pdf</a></p>
<h1>Weekly spot checks</h1>
<p>40723250 羅村瑋的抽查報告:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/6pc7J9JQ4DE" width="500"></iframe></p>
<p><span>40723225 高永霖的抽查報告:</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/HKKeMBxqTxk" width="560"></iframe></p>