<h1>Group 4</h1>
<p><span>Repository:<span> </span></span><a href="https://github.com/40623115/cd2020">40623115</a><span><span> </span>| Site:<span> </span></span><a href="https://40623115.github.io/cd2020">40623115</a><br/><span>Repository:<span> </span></span><a href="https://github.com/40623251/cd2020">40623251</a><span><span> </span>| Site:<span> </span></span><a href="https://40623251.github.io/cd2020">40623251</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723204/cd2020">40723204</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723204.github.io/cd2020">40723204</a> (second leader)<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723210/cd2020">40723210</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723210.github.io/cd2020">40723210</a><span><span> </span>(group leader)</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723212/cd2020">40723212</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723212.github.io/cd2020">40723212</a> <span>(second leader)</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723225/cd2020">40723225</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723225.github.io/cd2020">40723225</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723232/cd2020">40723232</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723232.github.io/cd2020">40723232</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723234/cd2020">40723234</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723234.github.io/cd2020">40723234</a> <span>(second leader)</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723238/cd2020">40723238</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723238.github.io/cd2020">40723238</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723245/cd2020">40723245</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723245.github.io/cd2020">40723245</a> <span>(second leader)</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723250/cd2020">40723250</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723250.github.io/cd2020">40723250</a></p>
<hr/>
<p><span>分組倉儲網址 : </span><a href="https://s40723210.github.io/cd2020bg4" rel="nofollow">https://s40723210.github.io/cd2020bg4</a></p>
<p>gitter : <a href="https://gitter.im/40723210/cd2020">https://gitter.im/40723210/cd2020</a></p><h1>Live meeting</h1>
<h4>Meeting minutes-1</h4>
<p>40623115 亂數分組程式<br/>40623251 可攜系統<br/>40723204 可攜系統<br/>42723210 四輪車<br/>40723212 四輪車<br/>40723225 四輪車<br/>40723232 亂數分組程式<br/>40723234 可攜系統<br/>40723238 四輪車<br/>40723245 亂數分組程式<br/>40723250 亂數分組程式</p>
<p>負責各主題的人，主要以課堂上的進度，來更新個人的倉儲，每次更新進度時要做一下紀錄。所有的主題必須要在<span>2020年3月26日之前完成，提交3-5頁的兩欄pdf報告，並在youtube上保存3-5分鐘的影片，將pdf文件放在個人倉儲 downloads / assignment1.pdf。最後整合的作業以assignment1放在自己的網站連結加/ assignment1內。有問題可以在我的 <a href="https://gitter.im/40723210/cd2020">gitter</a> 以及 老師的<span> </span><a href="https://gitter.im/mdecourse/cd2020">gitter</a> 上面發問，會的人也可以幫忙回答。<br/></span><br/>直播影片:<a href="https://www.youtube.com/watch?v=r0AABAp474U">https://www.youtube.com/watch?v=r0AABAp474U</a></p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/r0AABAp474U" width="560"></iframe></p>
<hr/>
<h4>Meeting minutes-2</h4>
<p>分工表:</p>
<table style="width: 277.6px;">
<tbody>
<tr>
<td style="width: 132px;"><strong>Topic 1:</strong></td>
<td style="width: 142.6px;"><strong>Topic 0:</strong></td>
</tr>
<tr>
<td style="width: 132px;">40623115</td>
<td style="width: 142.6px;">40723232</td>
</tr>
<tr>
<td style="width: 132px;">40623251</td>
<td style="width: 142.6px;">40723234</td>
</tr>
<tr>
<td style="width: 132px;">40723204</td>
<td style="width: 142.6px;">40723238</td>
</tr>
<tr>
<td style="width: 132px;">42723210</td>
<td style="width: 142.6px;">40723245</td>
</tr>
<tr>
<td style="width: 132px;">40723212</td>
<td style="width: 142.6px;">40723250</td>
</tr>
<tr>
<td style="width: 132px;">40723225</td>
<td style="width: 142.6px;"></td>
</tr>
</tbody>
</table>
<p><br/>Topic 1 的文章很長，自己看要翻哪一大章節都可，Topic 0 有兩篇pdf也是一樣自己決定，要全翻也行自己斟酌。最後是個人網頁要有assignment2，downloads裡面也要有檔案assignment2.pdf。作業期限到4/23，要自行檢查是否完成所有內容。</p>
<p><span>直播影片:<a href="https://youtu.be/a69tNWKmC64">https://youtu.be/a69tNWKmC64</a></span></p>
<p><span><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/a69tNWKmC64" width="560"></iframe></span></p><h1>Assignment</h1>
<p><span><a href="https://s40723210.github.io/cd2020bg4/content/Assignment1.html">Assignment1</a></span></p>
<p><span><a href="https://s40723210.github.io/cd2020bg4/content/Assignment2.html">Assignment2</a></span></p>
<p><span><a href="https://s407232.github.io/cd2020bg4/content/Assignment3.html">Assignment3</a></span></p>
<h2>Assignment1</h2>
<p>1. Describe how to do an efficient random grouping for this course or do the roll calling randomly?</p>
<p>2. Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain<span> </span><a href="https://github.com/mdecourse/cmsimde">CMSiMDE</a><span> </span>website,<span> </span><a href="https://github.com/getpelican/pelican">Pelican blog</a><span> </span>and<span> </span><a href="https://github.com/hakimel/reveal.js/">Reveal.js</a><span> </span>presentation on<span> </span><a href="https://github.com/">Github</a>?</p>
<p>3. What do you need to know from <a href="http://www.coppeliarobotics.com/helpFiles/index.html">http://www.coppeliarobotics.com/helpFiles/index.html</a> to implement a four-wheeled robot?</p>
<h3>Random grouping</h3>
<p><span>1. Describe how to do an efficient random grouping for this course or do the roll calling randomly?</span></p>
<p>1.請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？</p>
<p><strong><span style="color: #3366ff;"><big>40723245 提供 :</big></span></strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/k8Ag3kVj6lg" width="560"></iframe></p>
<hr/>
<p><span style="color: #3366ff;"><strong><big>40723210 提供 :</big></strong> </span></p>
<h4><strong>測試程式(點選程式連結再貼上即可):</strong></h4>
<p><iframe allowfullscreen="allowfullscreen" allowtransparency="true" data-mce-fragment="1" frameborder="no" height="400px" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals" scrolling="no" src="https://repl.it/repls/LightLikelyDominspector?lite=true" width="100%"></iframe></p>
<h4><strong><span>抽查的python程式</span></strong></h4>
<p>如果要使用python來進行亂數分組抽查的話，可以導入random來從列表中隨機抽出所需要的n個不同元素，如下面的程式執行之後，就可以亂數抽出4位。</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import random 

group = [4, 10, 12, 25, 32, 34, 38, 45, 50] 

team = random.sample(group, 4) 
print (team)</pre>
<p>再來是要讀取網頁資料的話，就要導入requests，使用get請求即可直接下載，例如member = requests.get("網址")，再用print(member.text)就可以印出來了如下。</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import requests

web = "https://mdecourse.github.io/cd2020/downloads/2b_group_list.txt"

member = requests.get(web)

print(member.text)</pre>
<p>如果使用讀取出的資料，還是無法使用的，因為member.text的性質是str字串，所以我就要將它變回原本的list列表，才可以進行亂數分組，改這個非常的簡單如下。</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">x = eval(member.text)</pre>
<p>最後我整理出來的程式，雖然沒有老師這麼精美，但是也是可以進行亂數分組的抽查的，如果要改抽查人數，改y = random.sample(i,2)的數字即可。</p>
<h4><span><span color="#0000ff"><b>最終程式碼</b></span></span></h4>
<p>程式碼連結:<a href="https://github.com/s40723210/cd2020/blob/master/downloads/%E6%8A%BD%E6%9F%A5%E7%A8%8B%E5%BC%8F.py">抽查程式.py</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import requests
import random
  
web = "https://mdecourse.github.io/cd2020/downloads/2b_group_list.txt"
member = requests.get(web)
#print(memder.text)
x=0
for i in eval(member.text):
    y = random.sample(i,2)
    x+=1
    print("group"+ str(x))
    print(y)</pre>
<h4><strong><span>亂數分組的的python程式</span></strong></h4>
<p><strong></strong>一開始先從網頁上抓人員，這次跟上面的不太一樣，抓出來的本來就是str字串，所以必須把每個學號轉變為<span>list列表，直接將f.text加上 .split() 來轉換，完成之後就可以使用，random.shuffle()來將整個順序打亂，再來設定一共要分幾組，再使用while迴圈來判斷每一組要有幾個人，使用if判斷是來中斷迴圈，len()是指一共有幾個數量的意思，要加組別的話就要再多寫一列，接著使用for 迴圈來從，剛剛算好的每組人數，例如:13、12、12、12，再使用一個for迴圈，來一個一個配置組人員，這時候直接使用迭代iter()的next()，來抓人員這樣子就不會重複了，最後再加上一些說明、分格、標題，就可以開始進行亂數分組了。</span></p>
<h4><span><span color="#0000ff"><b>最終程式碼</b></span></span></h4>
<p>程式碼連結:<a href="https://github.com/s40723210/cd2020/blob/master/downloads/%E4%BA%82%E6%95%B8%E5%88%86%E7%B5%84.py">亂數分組.py</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import requests
import random

web = "http://s1.mde.nfu.edu.tw:8000/?semester=1082&amp;courseno=0780"
f = requests.get(web)
#print(type(f.text))
x = f.text.split()
#print(len(x))
#print(x)
random.shuffle(x)

group1,group2,group3,group4 = 0,0,0,0
while 1==1:
    group1 += 1
    if (group1+group2+group3+group4) == len(x):
        break
    group2 += 1
    if (group1+group2+group3+group4) == len(x):
        break
    group3 += 1
    if (group1+group2+group3+group4) == len(x):
        break
    group4 += 1
    if (group1+group2+group3+group4) == len(x):
        break
#print(group1,group2,group3,group4)

print("全班人數有"+str(len(x))+"人")
print("="*20)
grp_num = group1,group2,group3,group4
a = iter(x)
team = 0
for i in grp_num:
    team += 1
    print("group"+str(team)+" 共 "+str(i)+" 人")
    for g in range(i):
        print(next(a))
    print("-" * 20)</pre>
<p></p>
<hr/>
<h3>Portable system</h3>
<p><span>2. Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain CMSiMDE website, Pelican blog and Reveal.js presentation on Github?</span></p>
<p>2.描述如何為Windows 10 64位系統準備一個可移植的Python編程系統，以允許在Github上維護CMSiMDE網站，Pelican博客和Reveal.js演示文稿？</p>
<p><span style="color: #3366ff;"><strong><big>40723210 提供 :</big></strong> </span></p>
<p>start.bat 存放在system資料夾下</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
subst %Disk%: "data"

%Disk%:

set HomePath=%Disk%:\home_mdecourse
set HomeDrive=%Disk%:\home_mdecourse
set Home=%Disk%:\home_mdecourse
set USERPROFILE=%Disk%:\home_mdecourse

REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"

set PYTHONPATH=%Disk%:\py382\DLLs;%Disk%:\py382\Lib;%Disk%:\py382\Lib\site-packages;
set PYTHONHOME=%Disk%:\py382

set path_python=%Disk%:\py382;%Disk%:\py382\Scripts;
set path_msys2=%Disk%:\msys64\mingw64\bin;
set path_tcc=%Disk%:\tcc;
set path_git=%Disk%:\portablegit\bin;

set GIT_HOME=%Disk%:\portablegit\bin\
set GIT_SSH=%Disk%:\putty\plink.exe

path=%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%;%path%;

start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe

start /MIN %Disk%:\wscite432\wscite\SciTE.exe
start /MIN %Disk%:\wscite432\wscite\SciTE.exe

Exit</pre>
<p>stop.bat <span>存放在system資料夾下</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
path=%PATH%;

taskkill /IM python.exe /F
taskkill /IM pythonw.exe /F
taskkill /IM SciTE.exe /F
REM 終止虛擬硬碟與目錄的對應
subst %Disk%: /D
REM 關閉 cmd 指令視窗
taskkill /IM cmd.exe /F
EXIT</pre>
<div>
<div class="syntaxhighlighter html" id="highlighter_96320"></div>
</div>
<h4><span><strong>data的資料夾內:</strong></span></h4>
<p>編輯器，使用<span>SciTE :</span><span> </span><a href="https://www.scintilla.org/SciTEDownload.html">https://www.scintilla.org/SciTEDownload.html</a></p>
<p>下載<span>Windows 64-bit:</span><span> </span><span><a href="https://www.scintilla.org/wscite432.zip">full 64-bit download</a></span>，放進<span>data</span>目錄裡的<span>wscite432資料夾(自己創建)，接著</span><span>開啟<span>SciTE.exe</span><span>，點選 </span><span>Options下的</span><span><span>Open Global Options File</span><span> ，使用ctrl + f 來收尋code.page=0，將code.page=65001的#刪掉，這樣才不會出現亂碼。</span></span><br/></span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">code.page=65001
#code.page=0</pre>
<p></p>
<hr/>
<p>Git控制軟體 :<span><span> </span><a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></span></p>
<p>下載Windows 64-bit:<span> </span><span><a href="https://github.com/git-for-windows/git/releases/download/v2.25.1.windows.1/Git-2.25.1-64-bit.exe">64-bit Git for Windows Setup</a></span>，放進<span>data</span>目錄裡面並且重新命名為<span>portablegit 。</span></p>
<hr/>
<p><span>ssh</span>連線工具組，使用的<span>putty : </span><span><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/">https://www.chiark.greenend.org.uk/~sgtatham/putty/</a></span></p>
<p>直接下載老師之前給的:<span><a href="https://drive.google.com/file/d/1ISq1TJuaZyYZnfU33l-b7ifzmO3ejlEV/view">putty.7z</a></span>，解壓縮放入<span>data</span>目錄就可以了。</p>
<hr/>
<p>MSYS2：<a href="https://www.msys2.org/">https://www.msys2.org/ </a></p>
<p>下載的是<a href="http://repo.msys2.org/distrib/x86_64/msys2-x86_64-20190524.exe">msys2-x86</a><span><a href="http://repo.msys2.org/distrib/x86_64/msys2-x86_64-20190524.exe">_64-20190524.exe</a></span><span> </span>，安裝在<span><span> </span>data<span> </span></span>目錄裡的<span>msys64資料夾(自己創建)</span>。</p>
<hr/>
<p>Tiny C Compiler : <a href="https://github.com/TinyCC/tinycc">https://github.com/TinyCC/tinycc</a></p>
<p>直接在<span>data<span> </span></span>目錄下進行<span>git clone<span> </span></span><span><a href="https://github.com/TinyCC/tinycc">https://github.com/TinyCC/tinycc</a></span>  tcc </p>
<hr/>
<p>把現在再用的home_mdecourse，整個複製到data 目錄下。</p>
<hr/>
<p>Python : <a href="https://www.python.org/">https://www.python.org/</a>，下載3.8.2版本的<a href="https://www.python.org/ftp/python/3.8.2/python-3.8.2.exe">安裝檔</a>。</p>
<p>1.完成後開啟，點選<span>Customize installation(定制安裝)。</span></p>
<p>2.將第二個選項的pip取消勾選，其他都可以勾選起來。</p>
<p>3.使用預設勾選，將路徑改為data內的py382資料夾(自己創建)。</p>
<p>4.直接在y槽中執行，python <span>get-pip.py 來安裝pip軟件。</span></p>
<p><span>5.完成之後，來安裝軟件包，輸入python pip install<span> </span><span>Flask</span> 依此類推。</span></p>
<p>6.安裝的有<span>Flask</span>、<span>Markdown</span>、<span>lxml</span>、<span>bs4</span>、<span>flask_cors</span>、<span>pelican</span>、<span>leo</span>。</p>
<hr/>
<p>data目錄下的所有資料:</p>
<p><img alt="" height="193" src="https://s40723210.github.io/cd2020/images/explorer_2020-03-21_21-05-25.png" width="519"/></p>
<p><span>system資料夾內:</span></p>
<p><span><img alt="" height="107" src="https://s40723210.github.io/cd2020/images/explorer_2020-03-21_21-44-29.png" width="491"/></span></p>
<p><span>這樣子就完成了最簡單的</span>可攜編程系統了。</p>
<hr/>
<p></p>
<p></p><h3>four wheel car</h3>
<p><span>3. What do you need to know from </span><a href="http://www.coppeliarobotics.com/helpFiles/index.html">http://www.coppeliarobotics.com/helpFiles/index.html</a><span> to implement a four-wheeled robot?</span></p>
<p>3.您需要從http://www.coppeliarobotics.com/helpFiles/index.html了解什麼來實現四輪機器人？</p>
<p><span style="color: #3366ff;"><strong><big>40723210 提供 :</big></strong> </span></p>
<p>我們從<a href="https://www.coppeliarobotics.com/helpFiles/index.html">CoppeliaSim用戶手冊</a>中尋找有關於四輪機器人的文章，找到了幾個相關的文章，分別是<a class="el" href="https://www.coppeliarobotics.com/helpFiles/en/bubbleRobTutorial.htm" name="link194folder.9">BubbleRob tutorial</a>、<a class="el" href="https://www.coppeliarobotics.com/helpFiles/en/lineFollowingBubbleRobTutorial.htm" name="link196folder.9">Line following BubbleRob tutorial</a>、<a class="el" href="https://www.coppeliarobotics.com/helpFiles/en/externalControllerTutorial.htm" name="link199folder.9">External</a><a class="el" href="https://www.coppeliarobotics.com/helpFiles/en/externalControllerTutorial.htm" name="link199folder.9"><span> </span>controller tutorial</a>、<a class="el" href="https://www.coppeliarobotics.com/helpFiles/en/simulation.htm" name="link184folder.7">Simulation</a><span>、</span><a class="el" href="https://www.coppeliarobotics.com/helpFiles/en/simulationPropertiesDialog.htm" name="link185folder.7">Simulation dialog</a><span>，</span>一共五個有關四輪車的文章。</p>
<p>各篇翻譯:在40723210網頁<a href="https://s40723210.github.io/cd2020/content/CoppeliaSim.html">CoppeliaSim</a>下，重點及心得如下:</p>
<p><span><a href="https://www.coppeliarobotics.com/helpFiles/en/bubbleRobTutorial.htm">BubbleRob tutorial</a></span>:本章教程主要是透過，自己動手實際操作模擬，來了解許多功能以及<span>BubbleRob<span> </span></span>機器人設置，我們上學期時就已經有親自使用<span>V-rep<span> </span></span>來操作過一次了，本章使用了包括<span>:</span>基本形狀<span>(</span>機器人本體、輪子、障礙物<span>)</span>、感應器<span>(</span>接近型圓錐傳感器<span>)</span>、接頭或電動機<span>(</span>關節動力馬達<span>)</span>、力傳感器<span>(</span>滑塊<span>)</span>、圖表<span>(</span>運動軌跡<span>)</span>、腳本<span>(</span>模型定義<span>)</span>，使用以上這些功能，就可以實現<span>BubbleRob<span> </span></span>機器人，能移動並且使用感應器，來感應障礙物，再使用腳本來迴避，最後再由圖表來顯示模擬路徑。</p>
<p><span><a href="https://www.coppeliarobotics.com/helpFiles/en/lineFollowingBubbleRobTutorial.htm">Line following BubbleRob tutorial</a></span>:這個教程是接續著上面的文章，可以使<span>BubbleRob<span> </span></span>機器人按照規劃的路徑移動，讓我們可以有效的控制機器人，可以避免外部控制所產生的各種問題，這樣子就可以更快的達成需要的模擬狀況，可以提高不少的效率。</p>
<p><span><a href="https://www.coppeliarobotics.com/helpFiles/en/externalControllerTutorial.htm">External controller tutorial</a></span>:本章屬於外部控制器的教程，讓我們可以使用遠端操控的方式，來控制四輪機器人，控制的方式有編寫腳本、編寫插件、遠程<span>API</span>、<span>ROS</span>節點、<span>BlueZero</span>節點、編寫外部應用程式，每種都要寫子腳本來進行鏈結。</p>
<p><span><a href="https://www.coppeliarobotics.com/helpFiles/en/simulation.htm">Simulation</a></span>:此教程為模擬案鍵，當我們建立好腳本時，就可以控制模擬的狀況，為了增加模擬的準確性，就可以使用仿真的速度與螺紋渲染，但是必須要適當的調整，才不會造成系統運行中斷。</p>
<p><span><a href="https://www.coppeliarobotics.com/helpFiles/en/simulationPropertiesDialog.htm">Simulation dialog</a></span>:此教程是上篇的進階設定，<strong>時間步</strong>為調整模擬時間，運行越快準確度越差，<strong>每幀模擬遍數</strong>為屏幕刷新速度，刷新越快得到的情報越快，只是電腦很吃效能，<strong>當仿真時間高於時暫停</strong>為允許特定仿真時間暫停，<strong>暫停腳本錯誤</strong>會在發生問題時暫停，<strong>模擬開始時全屏</strong>啟用時對話框和消息不會顯示，<strong>實時仿真-倍增係數</strong>使仿真運行快n倍，<strong>落後時嘗試趕上</strong>系統運行趕不上模擬時，會在低負載時趕上，<strong>復位場景初始狀態</strong>運行模擬結束時，所有設定將回歸初始狀態，<strong>刪除新對象</strong>模擬時，添加的東西將會在結束後移除，以上的各種設定，能讓我們在模擬時，更加的方便，進而提高許多效率。</p>
<h4 class="title style-scope ytd-video-primary-info-renderer"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">V-rep可動四輪車</yt-formatted-string></h4>
<p>使用內建功能來創建模型，並且模擬最基本的直線移動。</p>
<p>影片連結:<a href="https://youtu.be/y8DJ1sjuAqM">https://youtu.be/y8DJ1sjuAqM</a></p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/y8DJ1sjuAqM" width="560"></iframe></p>
<hr/>
<p></p>
<h2>Assignment2</h2>
<p>Due April 22, 2020 for class 2a and April 23, 2020 for class 2b.</p>
<ol>
<li>
<p>According to the material of Topic 0 and Topic 1, can you describe specifically what the mechanical design team need to do for accomplishing Assignment 1's four wheeled robot.</p>
</li>
<li>
<p>What do you need to know from<span> </span><a href="https://cyberbotics.com/doc/guide/index" rel="nofollow">https://cyberbotics.com/doc/guide/index</a><span> </span>to implement a four-wheeled robot?</p>
</li>
</ol><h2>Assignment3</h2>
<p></p>
<h1>Weekly spot checks</h1>
<p>40723250 羅村瑋的抽查報告:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/6pc7J9JQ4DE" width="500"></iframe></p>
<p><span>40723225 高永霖的抽查報告:</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/HKKeMBxqTxk" width="560"></iframe></p>