var tipuesearch = {"pages": [{'title': 'Group 4', 'text': 'Repository: \xa0 40623115 \xa0 | Site: \xa0 40623115 Repository: \xa0 40623251 \xa0 | Site: \xa0 40623251 Repository: \xa0 40723204 \xa0 | Site: \xa0 40723204 \xa0(second leader) Repository: \xa0 40723210 \xa0 | Site: \xa0 40723210 \xa0 (group leader) Repository: \xa0 40723212 \xa0 | Site: \xa0 40723212 \xa0 (second leader) Repository: \xa0 40723225 \xa0 | Site: \xa0 40723225 Repository: \xa0 40723232 \xa0 | Site: \xa0 40723232 Repository: \xa0 40723234 \xa0 | Site: \xa0 40723234 \xa0 (second leader) Repository: \xa0 40723238 \xa0 | Site: \xa0 40723238 Repository: \xa0 40723245 \xa0 | Site: \xa0 40723245 \xa0 (second leader) Repository: \xa0 40723250 \xa0 | Site: \xa0 40723250 \n \n 分組倉儲網址 :\xa0 https://s40723210.github.io/cd2020bg4 \n gitter :\xa0 https://gitter.im/40723210/cd2020', 'tags': '', 'url': 'Group 4.html'}, {'title': 'Live meeting', 'text': 'Meeting minutes-1 \n 40623115 亂數分組程式 40623251 可攜系統 40723204 可攜系統 42723210 四輪車 40723212 四輪車 40723225 四輪車 40723232 亂數分組程式 40723234 可攜系統 40723238 四輪車 40723245 亂數分組程式 40723250 亂數分組程式 \n 負責各主題的人，主要以課堂上的進度，來更新個人的倉儲，每次更新進度時要做一下紀錄。所有的主題必須要在 2020年3月26日之前完成，提交3-5頁的兩欄pdf報告，並在youtube上保存3-5分鐘的影片，將pdf文件放在個人倉儲 downloads / assignment1.pdf。最後整合的作業以assignment1放在自己的網站連結加/ assignment1內。有問題可以在我的\xa0 gitter \xa0以及 老師的 \xa0 gitter \xa0上面發問，會的人也可以幫忙回答。 直播影片: https://www.youtube.com/watch?v=r0AABAp474U \n \n \n Meeting minutes-2 \n 分工表: \n \n \n \n Topic 1: \n Topic 0: \n \n \n 40623115 \n 40723232 \n \n \n 40623251 \n 40723234 \n \n \n 40723204 \n 40723238 \n \n \n 42723210 \n 40723245 \n \n \n 40723212 \n 40723250 \n \n \n 40723225 \n \n \n \n \n Topic 1 的文章很長，自己看要翻哪一大章節都可，Topic 0 有兩篇pdf也是一樣自己決定，要全翻也行自己斟酌。最後是個人網頁要有assignment2，downloads裡面也要有檔案assignment2.pdf。作業期限到4/23，要自行檢查是否完成所有內容。 \n 直播影片: https://youtu.be/a69tNWKmC64 \n', 'tags': '', 'url': 'Live meeting.html'}, {'title': 'Assignment', 'text': 'Assignment1 \n Assignment2 \n Assignment3 \n', 'tags': '', 'url': 'Assignment.html'}, {'title': 'Assignment1', 'text': '1. Describe how\xa0to\xa0do an efficient random grouping for this\xa0course or do the roll calling randomly? \n 2. Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain \xa0 CMSiMDE \xa0 website, \xa0 Pelican blog \xa0 and \xa0 Reveal.js \xa0 presentation on \xa0 Github ? \n 3. What do you need to know from\xa0 http://www.coppeliarobotics.com/helpFiles/index.html \xa0to implement a four-wheeled robot? \n', 'tags': '', 'url': 'Assignment1.html'}, {'title': 'Random grouping', 'text': '1. Describe how\xa0to\xa0do an efficient random grouping for this\xa0course or do the roll calling randomly? \n 1.請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？ \n 40723245 提供 : \n \n \n 40723210 提供 : \xa0 \n 測試程式(點選程式連結再貼上即可): \n \n 抽查的python程式 \n 如果要使用python來進行亂數分組抽查的話，可以導入random來從列表中隨機抽出所需要的n個不同元素，如下面的程式執行之後，就可以亂數抽出4位。 \n import random \n\ngroup = [4, 10, 12, 25, 32, 34, 38, 45, 50] \n\nteam = random.sample(group, 4) \nprint (team) \n 再來是要讀取網頁資料的話，就要導入requests，使用get請求即可直接下載，例如member = requests.get("網址")，再用print(member.text)就可以印出來了如下。 \n import requests\n\nweb = "https://mdecourse.github.io/cd2020/downloads/2b_group_list.txt"\n\nmember = requests.get(web)\n\nprint(member.text) \n 如果使用讀取出的資料，還是無法使用的，因為member.text的性質是str字串，所以我就要將它變回原本的list列表，才可以進行亂數分組，改這個非常的簡單如下。 \n x = eval(member.text) \n 最後我整理出來的程式，雖然沒有老師這麼精美，但是也是可以進行亂數分組的抽查的，如果要改抽查人數，改y = random.sample(i,2)的數字即可。 \n 最終程式碼 \n 程式碼連結: 抽查程式.py \n import requests\nimport random\n  \nweb = "https://mdecourse.github.io/cd2020/downloads/2b_group_list.txt"\nmember = requests.get(web)\n#print(memder.text)\nx=0\nfor i in eval(member.text):\n    y = random.sample(i,2)\n    x+=1\n    print("group"+ str(x))\n    print(y) \n 亂數分組的的python程式 \n 一開始先從網頁上抓人員，這次跟上面的不太一樣，抓出來的本來就是str字串，所以必須把每個學號轉變為 list列表，直接將f.text加上 .split() 來轉換，完成之後就可以使用，random.shuffle()來將整個順序打亂，再來設定一共要分幾組，再使用while迴圈來判斷每一組要有幾個人，使用if判斷是來中斷迴圈，len()是指一共有幾個數量的意思，要加組別的話就要再多寫一列，接著使用for 迴圈來從，剛剛算好的每組人數，例如:13、12、12、12，再使用一個for迴圈，來一個一個配置組人員，這時候直接使用迭代iter()的next()，來抓人員這樣子就不會重複了，最後再加上一些說明、分格、標題，就可以開始進行亂數分組了。 \n 最終程式碼 \n 程式碼連結: 亂數分組.py \n import requests\nimport random\n\nweb = "http://s1.mde.nfu.edu.tw:8000/?semester=1082&courseno=0780"\nf = requests.get(web)\n#print(type(f.text))\nx = f.text.split()\n#print(len(x))\n#print(x)\nrandom.shuffle(x)\n\ngroup1,group2,group3,group4 = 0,0,0,0\nwhile 1==1:\n    group1 += 1\n    if (group1+group2+group3+group4) == len(x):\n        break\n    group2 += 1\n    if (group1+group2+group3+group4) == len(x):\n        break\n    group3 += 1\n    if (group1+group2+group3+group4) == len(x):\n        break\n    group4 += 1\n    if (group1+group2+group3+group4) == len(x):\n        break\n#print(group1,group2,group3,group4)\n\nprint("全班人數有"+str(len(x))+"人")\nprint("="*20)\ngrp_num = group1,group2,group3,group4\na = iter(x)\nteam = 0\nfor i in grp_num:\n    team += 1\n    print("group"+str(team)+" 共 "+str(i)+" 人")\n    for g in range(i):\n        print(next(a))\n    print("-" * 20) \n \n \n', 'tags': '', 'url': 'Random grouping.html'}, {'title': 'Portable system', 'text': '2. Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain CMSiMDE website, Pelican blog and Reveal.js presentation on Github? \n 2.描述如何為Windows 10 64位系統準備一個可移植的Python編程系統，以允許在Github上維護CMSiMDE網站，Pelican博客和Reveal.js演示文稿？ \n 40723210 提供 : \xa0 \n start.bat 存放在system資料夾下 \n @echo off\nset Disk=y\nsubst %Disk%: "data"\n\n%Disk%:\n\nset HomePath=%Disk%:\\home_mdecourse\nset HomeDrive=%Disk%:\\home_mdecourse\nset Home=%Disk%:\\home_mdecourse\nset USERPROFILE=%Disk%:\\home_mdecourse\n\nREM 將系統 Python 程式的 io 設為 utf-8\nset PYTHONIOENCODING="utf-8"\n\nset PYTHONPATH=%Disk%:\\py382\\DLLs;%Disk%:\\py382\\Lib;%Disk%:\\py382\\Lib\\site-packages;\nset PYTHONHOME=%Disk%:\\py382\n\nset path_python=%Disk%:\\py382;%Disk%:\\py382\\Scripts;\nset path_msys2=%Disk%:\\msys64\\mingw64\\bin;\nset path_tcc=%Disk%:\\tcc;\nset path_git=%Disk%:\\portablegit\\bin;\n\nset GIT_HOME=%Disk%:\\portablegit\\bin\\\nset GIT_SSH=%Disk%:\\putty\\plink.exe\n\npath=%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%;%path%;\n\nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\n\nstart /MIN %Disk%:\\wscite432\\wscite\\SciTE.exe\nstart /MIN %Disk%:\\wscite432\\wscite\\SciTE.exe\n\nExit \n stop.bat\xa0 存放在system資料夾下 \n @echo off\nset Disk=y\npath=%PATH%;\n\ntaskkill /IM python.exe /F\ntaskkill /IM pythonw.exe /F\ntaskkill /IM SciTE.exe /F\nREM 終止虛擬硬碟與目錄的對應\nsubst %Disk%: /D\nREM 關閉 cmd 指令視窗\ntaskkill /IM cmd.exe /F\nEXIT \n \n \n \n data的資料夾內: \n 編輯器，使用 SciTE : \xa0 https://www.scintilla.org/SciTEDownload.html \n 下載 Windows 64-bit: \xa0 full 64-bit download ，放進 data 目錄裡的 wscite432資料夾(自己創建)，接著 開啟 SciTE.exe ，點選\xa0 Options下的 Open Global Options File \xa0，使用ctrl + f 來收尋code.page=0，將code.page=65001的#刪掉，這樣才不會出現亂碼。 \n code.page=65001\n#code.page=0 \n \n \n Git控制軟體 : \xa0 https://git-scm.com/download/win \n 下載Windows 64-bit: \xa0 64-bit Git for Windows Setup ，放進 data 目錄裡面並且重新命名為 portablegit 。 \n \n ssh 連線工具組，使用的 putty :\xa0 https://www.chiark.greenend.org.uk/~sgtatham/putty/ \n 直接下載老師之前給的: putty.7z ，解壓縮放入 data 目錄就可以了。 \n \n MSYS2： https://www.msys2.org/\xa0 \n 下載的是 msys2-x86 _64-20190524.exe \xa0 ，安裝在 \xa0 data \xa0 目錄裡的 msys64資料夾(自己創建) 。 \n \n Tiny C Compiler :\xa0 https://github.com/TinyCC/tinycc \n 直接在 data \xa0 目錄下進行 git clone \xa0 https://github.com/TinyCC/tinycc \xa0 tcc\xa0 \n \n 把現在再用的home_mdecourse，整個複製到data 目錄下。 \n \n Python :\xa0 https://www.python.org/ ，下載3.8.2版本的 安裝檔 。 \n 1.完成後開啟，點選 Customize installation(定制安裝)。 \n 2.將第二個選項的pip取消勾選，其他都可以勾選起來。 \n 3.使用預設勾選，將路徑改為data內的py382資料夾(自己創建)。 \n 4.直接在y槽中執行，python\xa0 get-pip.py 來安裝pip軟件。 \n 5.完成之後，來安裝軟件包，輸入python pip install \xa0 Flask \xa0依此類推。 \n 6.安裝的有 Flask 、 Markdown 、 lxml 、 bs4 、 flask_cors 、 pelican 、 leo 。 \n \n data目錄下的所有資料: \n \n system資料夾內: \n \n 這樣子就完成了最簡單的 可攜編程系統了。 \n \n \n', 'tags': '', 'url': 'Portable system.html'}, {'title': 'four wheel car', 'text': '3. What do you need to know from\xa0 http://www.coppeliarobotics.com/helpFiles/index.html \xa0to implement a four-wheeled robot? \n 3.您需要從http://www.coppeliarobotics.com/helpFiles/index.html了解什麼來實現四輪機器人？ \n 40723210 提供 : \xa0 \n 我們從 CoppeliaSim用戶手冊 中尋找有關於四輪機器人的文章，找到了幾個相關的文章，分別是 BubbleRob tutorial 、 Line following BubbleRob tutorial 、 External \xa0 controller tutorial 、 Simulation 、 Simulation dialog ， 一共五個有關四輪車的文章。 \n 各篇翻譯:在40723210網頁 CoppeliaSim 下，重點及心得如下: \n BubbleRob tutorial :本章教程主要是透過，自己動手實際操作模擬，來了解許多功能以及 BubbleRob \xa0 機器人設置，我們上學期時就已經有親自使用 V-rep \xa0 來操作過一次了，本章使用了包括 : 基本形狀 ( 機器人本體、輪子、障礙物 ) 、感應器 ( 接近型圓錐傳感器 ) 、接頭或電動機 ( 關節動力馬達 ) 、力傳感器 ( 滑塊 ) 、圖表 ( 運動軌跡 ) 、腳本 ( 模型定義 ) ，使用以上這些功能，就可以實現 BubbleRob \xa0 機器人，能移動並且使用感應器，來感應障礙物，再使用腳本來迴避，最後再由圖表來顯示模擬路徑。 \n Line following BubbleRob tutorial :這個教程是接續著上面的文章，可以使 BubbleRob \xa0 機器人按照規劃的路徑移動，讓我們可以有效的控制機器人，可以避免外部控制所產生的各種問題，這樣子就可以更快的達成需要的模擬狀況，可以提高不少的效率。 \n External controller tutorial :本章屬於外部控制器的教程，讓我們可以使用遠端操控的方式，來控制四輪機器人，控制的方式有編寫腳本、編寫插件、遠程 API 、 ROS 節點、 BlueZero 節點、編寫外部應用程式，每種都要寫子腳本來進行鏈結。 \n Simulation :此教程為模擬案鍵，當我們建立好腳本時，就可以控制模擬的狀況，為了增加模擬的準確性，就可以使用仿真的速度與螺紋渲染，但是必須要適當的調整，才不會造成系統運行中斷。 \n Simulation dialog :此教程是上篇的進階設定， 時間步 為調整模擬時間，運行越快準確度越差， 每幀模擬遍數 為屏幕刷新速度，刷新越快得到的情報越快，只是電腦很吃效能， 當仿真時間高於時暫停 為允許特定仿真時間暫停， 暫停腳本錯誤 會在發生問題時暫停， 模擬開始時全屏 啟用時對話框和消息不會顯示， 實時仿真-倍增係數 使仿真運行快n倍， 落後時嘗試趕上 系統運行趕不上模擬時，會在低負載時趕上， 復位場景初始狀態 運行模擬結束時，所有設定將回歸初始狀態， 刪除新對象 模擬時，添加的東西將會在結束後移除，以上的各種設定，能讓我們在模擬時，更加的方便，進而提高許多效率。 \n V-rep可動四輪車 \n 使用內建功能來創建模型，並且模擬最基本的直線移動。 \n 影片連結: https://youtu.be/y8DJ1sjuAqM \n \n \n \n', 'tags': '', 'url': 'four wheel car.html'}, {'title': 'Assignment2', 'text': "Due April 22, 2020 for class 2a and April 23, 2020 for class 2b. \n \n \n According to the material of Topic 0 and Topic 1, can you describe specifically what the mechanical design team need to do for accomplishing Assignment 1's four wheeled robot. \n \n \n What do you need to know from \xa0 https://cyberbotics.com/doc/guide/index \xa0 to implement a four-wheeled robot? \n \n", 'tags': '', 'url': 'Assignment2.html'}, {'title': 'Assignment3', 'text': '\n', 'tags': '', 'url': 'Assignment3.html'}, {'title': 'Weekly spot checks', 'text': '40723250 羅村瑋的抽查報告: \n \n 40723225 高永霖的抽查報告: \n', 'tags': '', 'url': 'Weekly spot checks.html'}]};